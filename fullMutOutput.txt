Mutation testing report:
Number of mutations:    2836
Killed:                 6 / 2836

Mutations:
Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 51
    Result: Timeout
    Original line:
                 if ((feeHandler.length == 0) || (_feeHandler != feeHandler[0])) {

    Mutated line:
                 if ((feeHandler.length != 0) || (_feeHandler != feeHandler[0])) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 53
    Result: Timeout
    Original line:
                     if (feeHandler.length > 0) {

    Mutated line:
                     if (feeHandler.length >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 63
    Result: Timeout
    Original line:
                 if (matchingEngine.length == 0 || _matchingEngine != matchingEngine[0]) {

    Mutated line:
                 if (matchingEngine.length != 0 || _matchingEngine != matchingEngine[0]) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 64
    Result: Timeout
    Original line:
                     if (matchingEngine.length > 0) {

    Mutated line:
                     if (matchingEngine.length >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 51
    Result: Timeout
    Original line:
                 if ((feeHandler.length == 0) || (_feeHandler != feeHandler[0])) {

    Mutated line:
                 if ((feeHandler.length != 0) || (_feeHandler != feeHandler[0])) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 51
    Result: Timeout
    Original line:
                 if ((feeHandler.length == 0) || (_feeHandler != feeHandler[0])) {

    Mutated line:
                 if ((feeHandler.length == 0) || (_feeHandler == feeHandler[0])) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 53
    Result: Timeout
    Original line:
                     if (feeHandler.length > 0) {

    Mutated line:
                     if (feeHandler.length <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 63
    Result: Timeout
    Original line:
                 if (matchingEngine.length == 0 || _matchingEngine != matchingEngine[0]) {

    Mutated line:
                 if (matchingEngine.length != 0 || _matchingEngine != matchingEngine[0]) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 63
    Result: Timeout
    Original line:
                 if (matchingEngine.length == 0 || _matchingEngine != matchingEngine[0]) {

    Mutated line:
                 if (matchingEngine.length == 0 || _matchingEngine == matchingEngine[0]) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 64
    Result: Timeout
    Original line:
                     if (matchingEngine.length > 0) {

    Mutated line:
                     if (matchingEngine.length <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 74
    Result: Timeout
    Original line:
                 if ((_gasHelper != IGasHelper(0)) && (_gasHelper != gasHelper)) {

    Mutated line:
                 if ((_gasHelper == IGasHelper(0)) && (_gasHelper != gasHelper)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 74
    Result: Timeout
    Original line:
                 if ((_gasHelper != IGasHelper(0)) && (_gasHelper != gasHelper)) {

    Mutated line:
                 if ((_gasHelper != IGasHelper(0)) && (_gasHelper == gasHelper)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 29
    Result: Timeout
    Original line:
                 revert("must use real network");

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 34
    Result: Timeout
    Original line:
                 updateNetworkFee(_expiryBlock, _networkFeeBps);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 7
    Result: Timeout
    Original line:
             constructor(address _admin) public KyberNetwork(_admin)

    Mutated line:
             constructor(address _admin) public 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockNetwork.sol
    Line nr: 46
    Result: Timeout
    Original line:
                 external onlyAdmin

    Mutated line:
                 external 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 30
    Result: Timeout
    Original line:
                 require(msg.sender == kyberNetwork);

    Mutated line:
                 require(msg.sender != kyberNetwork);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 31
    Result: Timeout
    Original line:
                 if (tx.gasprice <= MIN_ACTIVATE_PRICE) return;

    Mutated line:
                 if (tx.gasprice < MIN_ACTIVATE_PRICE) return;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 52
    Result: Timeout
    Original line:
         if (num_tokens > safe_num_tokens) {

    Mutated line:
         if (num_tokens >= safe_num_tokens) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 56
    Result: Timeout
    Original line:
         if (num_tokens > 0) {

    Mutated line:
         if (num_tokens >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 22
    Result: Timeout
    Original line:
                 require(_kyberNetwork != address(0));

    Mutated line:
                 require(_kyberNetwork == address(0));


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 30
    Result: Timeout
    Original line:
                 require(msg.sender == kyberNetwork);

    Mutated line:
                 require(msg.sender != kyberNetwork);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 31
    Result: Timeout
    Original line:
                 if (tx.gasprice <= MIN_ACTIVATE_PRICE) return;

    Mutated line:
                 if (tx.gasprice > MIN_ACTIVATE_PRICE) return;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 48
    Result: Timeout
    Original line:
         if (gas >= 27710) {

    Mutated line:
         if (gas < 27710) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 52
    Result: Timeout
    Original line:
         if (num_tokens > safe_num_tokens) {

    Mutated line:
         if (num_tokens <= safe_num_tokens) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 56
    Result: Timeout
    Original line:
         if (num_tokens > 0) {

    Mutated line:
         if (num_tokens <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 16
    Result: Timeout
    Original line:
             uint constant MIN_ACTIVATE_PRICE = 8 * 1000 * 1000 * 1000; // 8 gwei

    Mutated line:
             uint constant MIN_ACTIVATE_PRICE = 8 * 1000 * 1000 / 1000; // 8 gwei


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 16
    Result: Timeout
    Original line:
             uint constant MIN_ACTIVATE_PRICE = 8 * 1000 * 1000 * 1000; // 8 gwei

    Mutated line:
             uint constant MIN_ACTIVATE_PRICE = 8 * 1000 / 1000 * 1000; // 8 gwei


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 16
    Result: Timeout
    Original line:
             uint constant MIN_ACTIVATE_PRICE = 8 * 1000 * 1000 * 1000; // 8 gwei

    Mutated line:
             uint constant MIN_ACTIVATE_PRICE = 8 / 1000 * 1000 * 1000; // 8 gwei


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 40
    Result: Timeout
    Original line:
                 freeGas(gasleft() / 2);

    Mutated line:
                 freeGas(gasleft() * 2);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 49
    Result: Timeout
    Original line:
         safe_num_tokens = (gas - 27710) / (1148 + 5722 + 150);

    Mutated line:
         safe_num_tokens = (gas - 27710) * (1148 + 5722 + 150);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 49
    Result: Timeout
    Original line:
         safe_num_tokens = (gas - 27710) / (1148 + 5722 + 150);

    Mutated line:
         safe_num_tokens = (gas + 27710) / (1148 + 5722 + 150);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 49
    Result: Timeout
    Original line:
         safe_num_tokens = (gas - 27710) / (1148 + 5722 + 150);

    Mutated line:
         safe_num_tokens = (gas - 27710) / (1148 + 5722 - 150);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 49
    Result: Lived
    Original line:
         safe_num_tokens = (gas - 27710) / (1148 + 5722 + 150);

    Mutated line:
         safe_num_tokens = (gas - 27710) / (1148 - 5722 + 150);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 21
    Result: Timeout
    Original line:
             constructor(address _kyberNetwork, address _admin) public Withdrawable2(_admin) {

    Mutated line:
             constructor(address _kyberNetwork, address _admin) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 21
    Result: Timeout
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a != 0 || c / a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 21
    Result: Timeout
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c / a != b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 26
    Result: Timeout
    Original line:
                 require(b > 0, "divider <= 0");

    Mutated line:
                 require(b >= 0, "divider <= 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 28
    Result: Timeout
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a != b * c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 33
    Result: Timeout
    Original line:
                 require(b <= a, "sub underflow");

    Mutated line:
                 require(b < a, "sub underflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 48
    Result: Timeout
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a <= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 56
    Result: Timeout
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a <= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 103
    Result: Timeout
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length <= size + 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 140
    Result: Timeout
    Original line:
                 require(_value <= _allowance, "transfer more then allowed");

    Mutated line:
                 require(_value < _allowance, "transfer more then allowed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 21
    Result: Timeout
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a != 0 || c / a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 21
    Result: Timeout
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c / a != b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 26
    Result: Timeout
    Original line:
                 require(b > 0, "divider <= 0");

    Mutated line:
                 require(b <= 0, "divider <= 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 28
    Result: Timeout
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a != b * c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 33
    Result: Timeout
    Original line:
                 require(b <= a, "sub underflow");

    Mutated line:
                 require(b > a, "sub underflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 39
    Result: Timeout
    Original line:
                 require(c >= a, "add overflow");

    Mutated line:
                 require(c < a, "add overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 44
    Result: Timeout
    Original line:
                 return a >= b ? a : b;

    Mutated line:
                 return a < b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 48
    Result: Timeout
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a >= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 52
    Result: Timeout
    Original line:
                 return a >= b ? a : b;

    Mutated line:
                 return a < b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 56
    Result: Timeout
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a >= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 103
    Result: Timeout
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length >= size + 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 140
    Result: Timeout
    Original line:
                 require(_value <= _allowance, "transfer more then allowed");

    Mutated line:
                 require(_value > _allowance, "transfer more then allowed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 20
    Result: Timeout
    Original line:
                 uint c = a * b;

    Mutated line:
                 uint c = a / b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 21
    Result: Timeout
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c * a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 27
    Result: Timeout
    Original line:
                 uint c = a / b;

    Mutated line:
                 uint c = a * b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 28
    Result: Timeout
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a == b * c - a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 28
    Result: Timeout
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a == b / c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 34
    Result: Timeout
    Original line:
                 return a - b;

    Mutated line:
                 return a + b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 38
    Result: Timeout
    Original line:
                 uint c = a + b;

    Mutated line:
                 uint c = a - b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 103
    Result: Timeout
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length < size - 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 109
    Result: Lived
    Original line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 * 32) returns (bool) {

    Mutated line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 / 32) returns (bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 174
    Result: Timeout
    Original line:
             uint public INITIAL_SUPPLY = 10**(50+18);

    Mutated line:
             uint public INITIAL_SUPPLY = 10**(50 - 18);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 104
    Result: Timeout
    Original line:
                     revert("short address");

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/Token.sol
    Line nr: 109
    Result: Timeout
    Original line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 * 32) returns (bool) {

    Mutated line:
             function transfer(address _to, uint _value)  public  returns (bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousFeeHandler.sol
    Line nr: 9
    Result: Timeout
    Original line:
                 public KyberFeeHandler(daoSetter, _kyberNetworkProxy, _kyberNetwork, _knc, _burnBlockInterval)

    Mutated line:
                 public 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 21
    Result: Timeout
    Original line:
                 require(a == 0 || c / a == b);

    Mutated line:
                 require(a != 0 || c / a == b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 21
    Result: Timeout
    Original line:
                 require(a == 0 || c / a == b);

    Mutated line:
                 require(a == 0 || c / a != b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 26
    Result: Timeout
    Original line:
                 require(b > 0);

    Mutated line:
                 require(b >= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 28
    Result: Killed
    Original line:
                 require(a == b * c + a % b);

    Mutated line:
                 require(a != b * c + a % b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 33
    Result: Killed
    Original line:
                 require(b <= a);

    Mutated line:
                 require(b < a);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 48
    Result: Killed
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a <= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 56
    Result: Killed
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a <= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 103
    Result: Killed
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length <= size + 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 139
    Result: Killed
    Original line:
                 if (_value > _allowance) revert();

    Mutated line:
                 if (_value >= _allowance) revert();


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 21
    Result: Error
    Original line:
                 require(a == 0 || c / a == b);

    Mutated line:
                 require(a != 0 || c / a == b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 21
    Result: Error
    Original line:
                 require(a == 0 || c / a == b);

    Mutated line:
                 require(a == 0 || c / a != b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 26
    Result: Error
    Original line:
                 require(b > 0);

    Mutated line:
                 require(b <= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 28
    Result: Error
    Original line:
                 require(a == b * c + a % b);

    Mutated line:
                 require(a != b * c + a % b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(b <= a);

    Mutated line:
                 require(b > a);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 39
    Result: Lived
    Original line:
                 require(c >= a);

    Mutated line:
                 require(c < a);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 44
    Result: Lived
    Original line:
                 return a >= b ? a : b;

    Mutated line:
                 return a < b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 48
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a >= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 52
    Result: Lived
    Original line:
                 return a >= b ? a : b;

    Mutated line:
                 return a < b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 56
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a >= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length >= size + 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 139
    Result: Lived
    Original line:
                 if (_value > _allowance) revert();

    Mutated line:
                 if (_value <= _allowance) revert();


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 20
    Result: Lived
    Original line:
                 uint c = a * b;

    Mutated line:
                 uint c = a / b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b);

    Mutated line:
                 require(a == 0 || c * a == b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 27
    Result: Lived
    Original line:
                 uint c = a / b;

    Mutated line:
                 uint c = a * b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b);

    Mutated line:
                 require(a == b * c - a % b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b);

    Mutated line:
                 require(a == b / c + a % b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 34
    Result: Lived
    Original line:
                 return a - b;

    Mutated line:
                 return a + b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 38
    Result: Lived
    Original line:
                 uint c = a + b;

    Mutated line:
                 uint c = a - b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length < size - 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 109
    Result: Lived
    Original line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 * 32) {

    Mutated line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 / 32) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 171
    Result: Lived
    Original line:
             uint public INITIAL_SUPPLY = 10**(50+18);

    Mutated line:
             uint public INITIAL_SUPPLY = 10**(50 - 18);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 104
    Result: Lived
    Original line:
                  revert();

    Mutated line:
                  


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 139
    Result: Lived
    Original line:
                 if (_value > _allowance) revert();

    Mutated line:
                 if (_value > _allowance) 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 192
    Result: Lived
    Original line:
                 transferFrom( _from, msg.sender, _value );

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TestTokenNotReturn.sol
    Line nr: 109
    Result: Lived
    Original line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 * 32) {

    Mutated line:
             function transfer(address _to, uint _value)  public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 74
    Result: Lived
    Original line:
                 require(_feeBps < BPS, "constructor: fee >= bps");

    Mutated line:
                 require(_feeBps <= BPS, "constructor: fee >= bps");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 77
    Result: Lived
    Original line:
                 require(getDecimals(wethToken) == MAX_DECIMALS, "constructor: wethToken's decimals is not MAX_DECIMALS");

    Mutated line:
                 require(getDecimals(wethToken) != MAX_DECIMALS, "constructor: wethToken's decimals is not MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 99
    Result: Lived
    Original line:
                 if (srcQty == 0) { return 0; }

    Mutated line:
                 if (srcQty != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 101
    Result: Lived
    Original line:
                 IERC20 token = src == ETH_TOKEN_ADDRESS ? dest : src;

    Mutated line:
                 IERC20 token = src != ETH_TOKEN_ADDRESS ? dest : src;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 109
    Result: Lived
    Original line:
                 if (token == src && !checkValidSpread(bid, ask, false, 0)) { return 0; }

    Mutated line:
                 if (token != src && !checkValidSpread(bid, ask, false, 0)) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 114
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 120
    Result: Lived
    Original line:
                 if (offers.length == 0 || destQty == 0) { return 0; } // no offer or destQty == 0, return 0 for rate

    Mutated line:
                 if (offers.length != 0 || destQty == 0) { return 0; } // no offer or destQty == 0, return 0 for rate


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 120
    Result: Lived
    Original line:
                 if (offers.length == 0 || destQty == 0) { return 0; } // no offer or destQty == 0, return 0 for rate

    Mutated line:
                 if (offers.length == 0 || destQty != 0) { return 0; } // no offer or destQty == 0, return 0 for rate


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 127
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 176
    Result: Lived
    Original line:
                 require(msg.sender == kyberNetwork, "trade: not call from kyberNetwork's contract");

    Mutated line:
                 require(msg.sender != kyberNetwork, "trade: not call from kyberNetwork's contract");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 177
    Result: Lived
    Original line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");

    Mutated line:
                 require(srcToken != ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 177
    Result: Lived
    Original line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");

    Mutated line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken != ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 179
    Result: Lived
    Original line:
                 IERC20 token = srcToken == ETH_TOKEN_ADDRESS ? destToken : srcToken;

    Mutated line:
                 IERC20 token = srcToken != ETH_TOKEN_ADDRESS ? destToken : srcToken;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 264
    Result: Lived
    Original line:
                 require(minToken < POW_2_96/2, "setInternalInventoryData: minToken > 2**95");

    Mutated line:
                 require(minToken <= POW_2_96/2, "setInternalInventoryData: minToken > 2**95");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 265
    Result: Lived
    Original line:
                 require(maxToken < POW_2_96, "setInternalInventoryData: maxToken > 2**96");

    Mutated line:
                 require(maxToken <= POW_2_96, "setInternalInventoryData: maxToken > 2**96");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 266
    Result: Lived
    Original line:
                 require(pricePremiumBps < POW_2_32, "setInternalInventoryData: pricePremiumBps > 2**32");

    Mutated line:
                 require(pricePremiumBps <= POW_2_32, "setInternalInventoryData: pricePremiumBps > 2**32");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 267
    Result: Lived
    Original line:
                 require(minSpreadBps < POW_2_32, "setInternalInventoryData: minSpreadBps > 2**32");

    Mutated line:
                 require(minSpreadBps <= POW_2_32, "setInternalInventoryData: minSpreadBps > 2**32");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 281
    Result: Lived
    Original line:
                 require(getDecimals(token) == MAX_DECIMALS, "listToken: token's decimals is not MAX_DECIMALS");

    Mutated line:
                 require(getDecimals(token) != MAX_DECIMALS, "listToken: token's decimals is not MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 308
    Result: Lived
    Original line:
                 require(_feeBps < BPS, "setFeeBps: feeBps >= bps");

    Mutated line:
                 require(_feeBps <= BPS, "setFeeBps: feeBps >= bps");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 318
    Result: Lived
    Original line:
                 if (srcAmountToken == 0) {

    Mutated line:
                 if (srcAmountToken != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 340
    Result: Lived
    Original line:
                     if (offers[i].id == 0) {

    Mutated line:
                     if (offers[i].id != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 339
    Result: Lived
    Original line:
                 for (i; i < offers.length; i++) {

    Mutated line:
                 for (i; i <= offers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 346
    Result: Lived
    Original line:
                 for (i = 0; i < offerIds.length; i++) {

    Mutated line:
                 for (i = 0; i <= offerIds.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 391
    Result: Lived
    Original line:
                     require(conversionRate > 0, "doTrade: conversionRate is 0");

    Mutated line:
                     require(conversionRate >= 0, "doTrade: conversionRate is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 392
    Result: Lived
    Original line:
                     if (srcToken == ETH_TOKEN_ADDRESS)

    Mutated line:
                     if (srcToken != ETH_TOKEN_ADDRESS)


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 395
    Result: Lived
    Original line:
                         require(msg.value == 0, "doTrade: msg.value must be 0");

    Mutated line:
                         require(msg.value != 0, "doTrade: msg.value must be 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 393
    Result: Lived
    Original line:
                         require(msg.value == srcAmount, "doTrade: msg.value != srcAmount");

    Mutated line:
                         require(msg.value != srcAmount, "doTrade: msg.value != srcAmount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 399
    Result: Lived
    Original line:
                 require(userExpectedDestAmount > 0, "doTrade: userExpectedDestAmount == 0"); // sanity check

    Mutated line:
                 require(userExpectedDestAmount >= 0, "doTrade: userExpectedDestAmount == 0"); // sanity check


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 404
    Result: Lived
    Original line:
                 bool useInternalInventory = conversionRate % 2 == 1;

    Mutated line:
                 bool useInternalInventory = conversionRate % 2 != 1;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 408
    Result: Lived
    Original line:
                     if (srcToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                     if (srcToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 424
    Result: Lived
    Original line:
                 (bid, ask) = getFirstBidAndAskOrders(srcToken == ETH_TOKEN_ADDRESS ? destToken : srcToken);

    Mutated line:
                 (bid, ask) = getFirstBidAndAskOrders(srcToken != ETH_TOKEN_ADDRESS ? destToken : srcToken);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 428
    Result: Lived
    Original line:
                 if (srcToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (srcToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 436
    Result: Lived
    Original line:
                 if (srcToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (srcToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 466
    Result: Lived
    Original line:
                     if (offers[i].id == 0 || remainingSrcAmount == 0) { break; }

    Mutated line:
                     if (offers[i].id != 0 || remainingSrcAmount == 0) { break; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 466
    Result: Lived
    Original line:
                     if (offers[i].id == 0 || remainingSrcAmount == 0) { break; }

    Mutated line:
                     if (offers[i].id == 0 || remainingSrcAmount != 0) { break; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 465
    Result: Lived
    Original line:
                 for (uint i = 0; i < offers.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= offers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 476
    Result: Lived
    Original line:
                 require(remainingSrcAmount == 0, "takeMatchingOrders: did not take all src amount");

    Mutated line:
                 require(remainingSrcAmount != 0, "takeMatchingOrders: did not take all src amount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 480
    Result: Lived
    Original line:
                 require(newReserveBalance > lastReserveBalance, "takeMatchingOrders: newReserveBalance <= lastReserveBalance");

    Mutated line:
                 require(newReserveBalance >= lastReserveBalance, "takeMatchingOrders: newReserveBalance <= lastReserveBalance");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 499
    Result: Lived
    Original line:
                 if (tokenVal > MAX_QTY) { return (shouldUse, premiumBps); }

    Mutated line:
                 if (tokenVal >= MAX_QTY) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 512
    Result: Lived
    Original line:
                     if (address(this).balance < ethVal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (address(this).balance <= ethVal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 513
    Result: Lived
    Original line:
                     if (tokenBalance + tokenVal > inventoryData.maxTokenBal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance + tokenVal >= inventoryData.maxTokenBal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 509
    Result: Lived
    Original line:
                     if (tokenBalance < tokenVal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance <= tokenVal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 510
    Result: Lived
    Original line:
                     if (tokenBalance - tokenVal < inventoryData.minTokenBal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance - tokenVal <= inventoryData.minTokenBal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 530
    Result: Lived
    Original line:
                 return rate % 2 == (useInternalInventory ? 1 : 0)

    Mutated line:
                 return rate % 2 != (useInternalInventory ? 1 : 0)


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 536
    Result: Lived
    Original line:
                 require(val <= MAX_QTY, "valueAfterReducingFee: val > MAX_QTY");

    Mutated line:
                 require(val < MAX_QTY, "valueAfterReducingFee: val > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 541
    Result: Lived
    Original line:
                 require(val <= MAX_QTY, "valueAfterAddingPremium: val > MAX_QTY");

    Mutated line:
                 require(val < MAX_QTY, "valueAfterAddingPremium: val > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 561
    Result: Lived
    Original line:
                 IERC20 token = srcToken == wethToken ? dstToken : srcToken;

    Mutated line:
                 IERC20 token = srcToken != wethToken ? dstToken : srcToken;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 565
    Result: Lived
    Original line:
                     (srcToken == wethToken),

    Mutated line:
                     (srcToken != wethToken),


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 574
    Result: Lived
    Original line:
                 if (maxTraversedOrders == 0 || maxOrdersToTake == 0) {

    Mutated line:
                 if (maxTraversedOrders != 0 || maxOrdersToTake == 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 574
    Result: Lived
    Original line:
                 if (maxTraversedOrders == 0 || maxOrdersToTake == 0) {

    Mutated line:
                 if (maxTraversedOrders == 0 || maxOrdersToTake != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken != wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken == wethToken && bid.id != 0) || (dstToken == wethToken && ask.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken != wethToken && ask.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id != 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 585
    Result: Lived
    Original line:
                     offers[0] = srcToken == wethToken ? bid : ask;

    Mutated line:
                     offers[0] = srcToken != wethToken ? bid : ask;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 612
    Result: Lived
    Original line:
                     } else if ((maxOrdersToTake - numTakenOffer) > 1

    Mutated line:
                     } else if ((maxOrdersToTake - numTakenOffer) >= 1


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 617
    Result: Lived
    Original line:
                     } else if (offers[numTakenOffer].payAmount > biggestSkippedOffer.payAmount) {

    Mutated line:
                     } else if (offers[numTakenOffer].payAmount >= biggestSkippedOffer.payAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 592
    Result: Lived
    Original line:
                 for (; maxTraversedOrders > 0; --maxTraversedOrders) {

    Mutated line:
                 for (; maxTraversedOrders >= 0; --maxTraversedOrders) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 627
    Result: Lived
    Original line:
                 if (remainingSrcAmount > 0) totalDestAmount = 0;

    Mutated line:
                 if (remainingSrcAmount >= 0) totalDestAmount = 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 628
    Result: Lived
    Original line:
                 if (totalDestAmount == 0) offers = new OfferData[](0);

    Mutated line:
                 if (totalDestAmount != 0) offers = new OfferData[](0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 641
    Result: Lived
    Original line:
                 if (!isEthToToken && (ask.id == 0 || bid.id == 0)) {

    Mutated line:
                 if (!isEthToToken && (ask.id != 0 || bid.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 641
    Result: Lived
    Original line:
                 if (!isEthToToken && (ask.id == 0 || bid.id == 0)) {

    Mutated line:
                 if (!isEthToToken && (ask.id == 0 || bid.id != 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 662
    Result: Lived
    Original line:
                 if (basicData.minETHSupport > ethOrderSize) {

    Mutated line:
                 if (basicData.minETHSupport >= ethOrderSize) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id != 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id != 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount >= MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount >= MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount >= MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount >= MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 717
    Result: Lived
    Original line:
                 if (x1 <= x2) { return false; }

    Mutated line:
                 if (x1 < x2) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 723
    Result: Lived
    Original line:
                 if (BPS * (x1 - x2) <= x2 * minSpreadBps) { return false; }

    Mutated line:
                 if (BPS * (x1 - x2) < x2 * minSpreadBps) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 758
    Result: Lived
    Original line:
                 require(minSpreadBps < POW_2_32, "encodeInternalInventoryData: minSpreadBps is too big");

    Mutated line:
                 require(minSpreadBps <= POW_2_32, "encodeInternalInventoryData: minSpreadBps is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 759
    Result: Lived
    Original line:
                 require(premiumBps < POW_2_32, "encodeInternalInventoryData: premiumBps is too big");

    Mutated line:
                 require(premiumBps <= POW_2_32, "encodeInternalInventoryData: premiumBps is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 760
    Result: Lived
    Original line:
                 require(maxTokenBal < POW_2_96, "encodeInternalInventoryData: maxTokenBal is too big");

    Mutated line:
                 require(maxTokenBal <= POW_2_96, "encodeInternalInventoryData: maxTokenBal is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 761
    Result: Lived
    Original line:
                 require(minTokenBal < POW_2_96, "encodeInternalInventoryData: minTokenBal is too big");

    Mutated line:
                 require(minTokenBal <= POW_2_96, "encodeInternalInventoryData: minTokenBal is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 777
    Result: Lived
    Original line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;

    Mutated line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 != 0 ? false : true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 784
    Result: Lived
    Original line:
                 require(maxTakes < POW_2_32, "encodeTokenBasicData: maxTakes is too big");

    Mutated line:
                 require(maxTakes <= POW_2_32, "encodeTokenBasicData: maxTakes is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 785
    Result: Lived
    Original line:
                 require(maxTraverse < POW_2_32, "encodeTokenBasicData: maxTraverse is too big");

    Mutated line:
                 require(maxTraverse <= POW_2_32, "encodeTokenBasicData: maxTraverse is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 786
    Result: Lived
    Original line:
                 require(ethSize < POW_2_96, "encodeTokenBasicData: ethSize is too big");

    Mutated line:
                 require(ethSize <= POW_2_96, "encodeTokenBasicData: ethSize is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 805
    Result: Lived
    Original line:
                 require(minSizeY < POW_2_32, "encodeFactorData: minSizeY is too big");

    Mutated line:
                 require(minSizeY <= POW_2_32, "encodeFactorData: minSizeY is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 806
    Result: Lived
    Original line:
                 require(minSizeX < POW_2_32, "encodeFactorData: minSizeX is too big");

    Mutated line:
                 require(minSizeX <= POW_2_32, "encodeFactorData: minSizeX is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 807
    Result: Lived
    Original line:
                 require(takeY < POW_2_32, "encodeFactorData: takeY is too big");

    Mutated line:
                 require(takeY <= POW_2_32, "encodeFactorData: takeY is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 808
    Result: Lived
    Original line:
                 require(takeX < POW_2_32, "encodeFactorData: takeX is too big");

    Mutated line:
                 require(takeX <= POW_2_32, "encodeFactorData: takeX is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 809
    Result: Lived
    Original line:
                 require(traverseY < POW_2_32, "encodeFactorData: traverseY is too big");

    Mutated line:
                 require(traverseY <= POW_2_32, "encodeFactorData: traverseY is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 810
    Result: Lived
    Original line:
                 require(traverseX < POW_2_32, "encodeFactorData: traverseX is too big");

    Mutated line:
                 require(traverseX <= POW_2_32, "encodeFactorData: traverseX is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 71
    Result: Lived
    Original line:
                 require(_kyberNetwork != address(0), "constructor: kyberNetwork's address is missing");

    Mutated line:
                 require(_kyberNetwork == address(0), "constructor: kyberNetwork's address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 72
    Result: Lived
    Original line:
                 require(_otc != address(0), "constructor: otc's address is missing");

    Mutated line:
                 require(_otc == address(0), "constructor: otc's address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 73
    Result: Lived
    Original line:
                 require(_weth != address(0), "constructor: weth's address is missing");

    Mutated line:
                 require(_weth == address(0), "constructor: weth's address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 74
    Result: Lived
    Original line:
                 require(_feeBps < BPS, "constructor: fee >= bps");

    Mutated line:
                 require(_feeBps >= BPS, "constructor: fee >= bps");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 77
    Result: Lived
    Original line:
                 require(getDecimals(wethToken) == MAX_DECIMALS, "constructor: wethToken's decimals is not MAX_DECIMALS");

    Mutated line:
                 require(getDecimals(wethToken) != MAX_DECIMALS, "constructor: wethToken's decimals is not MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 99
    Result: Lived
    Original line:
                 if (srcQty == 0) { return 0; }

    Mutated line:
                 if (srcQty != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 101
    Result: Lived
    Original line:
                 IERC20 token = src == ETH_TOKEN_ADDRESS ? dest : src;

    Mutated line:
                 IERC20 token = src != ETH_TOKEN_ADDRESS ? dest : src;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 109
    Result: Lived
    Original line:
                 if (token == src && !checkValidSpread(bid, ask, false, 0)) { return 0; }

    Mutated line:
                 if (token != src && !checkValidSpread(bid, ask, false, 0)) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 114
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 120
    Result: Lived
    Original line:
                 if (offers.length == 0 || destQty == 0) { return 0; } // no offer or destQty == 0, return 0 for rate

    Mutated line:
                 if (offers.length != 0 || destQty == 0) { return 0; } // no offer or destQty == 0, return 0 for rate


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 120
    Result: Lived
    Original line:
                 if (offers.length == 0 || destQty == 0) { return 0; } // no offer or destQty == 0, return 0 for rate

    Mutated line:
                 if (offers.length == 0 || destQty != 0) { return 0; } // no offer or destQty == 0, return 0 for rate


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 127
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 176
    Result: Lived
    Original line:
                 require(msg.sender == kyberNetwork, "trade: not call from kyberNetwork's contract");

    Mutated line:
                 require(msg.sender != kyberNetwork, "trade: not call from kyberNetwork's contract");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 177
    Result: Lived
    Original line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");

    Mutated line:
                 require(srcToken != ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 177
    Result: Lived
    Original line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");

    Mutated line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken != ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 179
    Result: Lived
    Original line:
                 IERC20 token = srcToken == ETH_TOKEN_ADDRESS ? destToken : srcToken;

    Mutated line:
                 IERC20 token = srcToken != ETH_TOKEN_ADDRESS ? destToken : srcToken;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 236
    Result: Lived
    Original line:
                 require(_kyberNetwork != address(0), "setContracts: kyberNetwork's address is missing");

    Mutated line:
                 require(_kyberNetwork == address(0), "setContracts: kyberNetwork's address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 237
    Result: Lived
    Original line:
                 require(_otc != address(0), "setContracts: otc's address is missing");

    Mutated line:
                 require(_otc == address(0), "setContracts: otc's address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 241
    Result: Lived
    Original line:
                 if (_otc != address(otc)) {

    Mutated line:
                 if (_otc == address(otc)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 264
    Result: Lived
    Original line:
                 require(minToken < POW_2_96/2, "setInternalInventoryData: minToken > 2**95");

    Mutated line:
                 require(minToken >= POW_2_96/2, "setInternalInventoryData: minToken > 2**95");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 265
    Result: Lived
    Original line:
                 require(maxToken < POW_2_96, "setInternalInventoryData: maxToken > 2**96");

    Mutated line:
                 require(maxToken >= POW_2_96, "setInternalInventoryData: maxToken > 2**96");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 266
    Result: Lived
    Original line:
                 require(pricePremiumBps < POW_2_32, "setInternalInventoryData: pricePremiumBps > 2**32");

    Mutated line:
                 require(pricePremiumBps >= POW_2_32, "setInternalInventoryData: pricePremiumBps > 2**32");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 267
    Result: Lived
    Original line:
                 require(minSpreadBps < POW_2_32, "setInternalInventoryData: minSpreadBps > 2**32");

    Mutated line:
                 require(minSpreadBps >= POW_2_32, "setInternalInventoryData: minSpreadBps > 2**32");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 279
    Result: Lived
    Original line:
                 require(tokenAddr != address(0), "listToken: token's address is missing");

    Mutated line:
                 require(tokenAddr == address(0), "listToken: token's address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 281
    Result: Lived
    Original line:
                 require(getDecimals(token) == MAX_DECIMALS, "listToken: token's decimals is not MAX_DECIMALS");

    Mutated line:
                 require(getDecimals(token) != MAX_DECIMALS, "listToken: token's decimals is not MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 308
    Result: Lived
    Original line:
                 require(_feeBps < BPS, "setFeeBps: feeBps >= bps");

    Mutated line:
                 require(_feeBps >= BPS, "setFeeBps: feeBps >= bps");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 318
    Result: Lived
    Original line:
                 if (srcAmountToken == 0) {

    Mutated line:
                 if (srcAmountToken != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 340
    Result: Lived
    Original line:
                     if (offers[i].id == 0) {

    Mutated line:
                     if (offers[i].id != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 339
    Result: Lived
    Original line:
                 for (i; i < offers.length; i++) {

    Mutated line:
                 for (i; i >= offers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 346
    Result: Lived
    Original line:
                 for (i = 0; i < offerIds.length; i++) {

    Mutated line:
                 for (i = 0; i >= offerIds.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 391
    Result: Lived
    Original line:
                     require(conversionRate > 0, "doTrade: conversionRate is 0");

    Mutated line:
                     require(conversionRate <= 0, "doTrade: conversionRate is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 392
    Result: Lived
    Original line:
                     if (srcToken == ETH_TOKEN_ADDRESS)

    Mutated line:
                     if (srcToken != ETH_TOKEN_ADDRESS)


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 395
    Result: Lived
    Original line:
                         require(msg.value == 0, "doTrade: msg.value must be 0");

    Mutated line:
                         require(msg.value != 0, "doTrade: msg.value must be 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 393
    Result: Lived
    Original line:
                         require(msg.value == srcAmount, "doTrade: msg.value != srcAmount");

    Mutated line:
                         require(msg.value != srcAmount, "doTrade: msg.value != srcAmount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 399
    Result: Lived
    Original line:
                 require(userExpectedDestAmount > 0, "doTrade: userExpectedDestAmount == 0"); // sanity check

    Mutated line:
                 require(userExpectedDestAmount <= 0, "doTrade: userExpectedDestAmount == 0"); // sanity check


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 404
    Result: Lived
    Original line:
                 bool useInternalInventory = conversionRate % 2 == 1;

    Mutated line:
                 bool useInternalInventory = conversionRate % 2 != 1;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 408
    Result: Lived
    Original line:
                     if (srcToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                     if (srcToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 424
    Result: Lived
    Original line:
                 (bid, ask) = getFirstBidAndAskOrders(srcToken == ETH_TOKEN_ADDRESS ? destToken : srcToken);

    Mutated line:
                 (bid, ask) = getFirstBidAndAskOrders(srcToken != ETH_TOKEN_ADDRESS ? destToken : srcToken);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 428
    Result: Lived
    Original line:
                 if (srcToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (srcToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 434
    Result: Lived
    Original line:
                 require(actualDestAmount >= userExpectedDestAmount, "doTrade: actualDestAmount is less than userExpectedDestAmount");

    Mutated line:
                 require(actualDestAmount < userExpectedDestAmount, "doTrade: actualDestAmount is less than userExpectedDestAmount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 436
    Result: Lived
    Original line:
                 if (srcToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (srcToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 446
    Result: Lived
    Original line:
                     require(actualDestAmount >= userExpectedDestAmount, "doTrade: actualDestAmount is less than userExpectedDestAmount, token to eth");

    Mutated line:
                     require(actualDestAmount < userExpectedDestAmount, "doTrade: actualDestAmount is less than userExpectedDestAmount, token to eth");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 439
    Result: Lived
    Original line:
                     require(actualDestAmount >= userExpectedDestAmount, "doTrade: actualDestAmount is less than userExpectedDestAmount, eth to token");

    Mutated line:
                     require(actualDestAmount < userExpectedDestAmount, "doTrade: actualDestAmount is less than userExpectedDestAmount, eth to token");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 460
    Result: Lived
    Original line:
                 require(destToken != ETH_TOKEN_ADDRESS, "takeMatchingOrders: destToken is ETH");

    Mutated line:
                 require(destToken == ETH_TOKEN_ADDRESS, "takeMatchingOrders: destToken is ETH");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 466
    Result: Lived
    Original line:
                     if (offers[i].id == 0 || remainingSrcAmount == 0) { break; }

    Mutated line:
                     if (offers[i].id != 0 || remainingSrcAmount == 0) { break; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 466
    Result: Lived
    Original line:
                     if (offers[i].id == 0 || remainingSrcAmount == 0) { break; }

    Mutated line:
                     if (offers[i].id == 0 || remainingSrcAmount != 0) { break; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 465
    Result: Lived
    Original line:
                 for (uint i = 0; i < offers.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= offers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 476
    Result: Lived
    Original line:
                 require(remainingSrcAmount == 0, "takeMatchingOrders: did not take all src amount");

    Mutated line:
                 require(remainingSrcAmount != 0, "takeMatchingOrders: did not take all src amount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 480
    Result: Lived
    Original line:
                 require(newReserveBalance > lastReserveBalance, "takeMatchingOrders: newReserveBalance <= lastReserveBalance");

    Mutated line:
                 require(newReserveBalance <= lastReserveBalance, "takeMatchingOrders: newReserveBalance <= lastReserveBalance");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 499
    Result: Lived
    Original line:
                 if (tokenVal > MAX_QTY) { return (shouldUse, premiumBps); }

    Mutated line:
                 if (tokenVal <= MAX_QTY) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 512
    Result: Lived
    Original line:
                     if (address(this).balance < ethVal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (address(this).balance >= ethVal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 513
    Result: Lived
    Original line:
                     if (tokenBalance + tokenVal > inventoryData.maxTokenBal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance + tokenVal <= inventoryData.maxTokenBal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 509
    Result: Lived
    Original line:
                     if (tokenBalance < tokenVal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance >= tokenVal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 510
    Result: Lived
    Original line:
                     if (tokenBalance - tokenVal < inventoryData.minTokenBal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance - tokenVal >= inventoryData.minTokenBal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 530
    Result: Lived
    Original line:
                 return rate % 2 == (useInternalInventory ? 1 : 0)

    Mutated line:
                 return rate % 2 != (useInternalInventory ? 1 : 0)


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 536
    Result: Lived
    Original line:
                 require(val <= MAX_QTY, "valueAfterReducingFee: val > MAX_QTY");

    Mutated line:
                 require(val > MAX_QTY, "valueAfterReducingFee: val > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 541
    Result: Lived
    Original line:
                 require(val <= MAX_QTY, "valueAfterAddingPremium: val > MAX_QTY");

    Mutated line:
                 require(val > MAX_QTY, "valueAfterAddingPremium: val > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 561
    Result: Lived
    Original line:
                 IERC20 token = srcToken == wethToken ? dstToken : srcToken;

    Mutated line:
                 IERC20 token = srcToken != wethToken ? dstToken : srcToken;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 565
    Result: Lived
    Original line:
                     (srcToken == wethToken),

    Mutated line:
                     (srcToken != wethToken),


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 574
    Result: Lived
    Original line:
                 if (maxTraversedOrders == 0 || maxOrdersToTake == 0) {

    Mutated line:
                 if (maxTraversedOrders != 0 || maxOrdersToTake == 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 574
    Result: Lived
    Original line:
                 if (maxTraversedOrders == 0 || maxOrdersToTake == 0) {

    Mutated line:
                 if (maxTraversedOrders == 0 || maxOrdersToTake != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken != wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken == wethToken && bid.id != 0) || (dstToken == wethToken && ask.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken != wethToken && ask.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id != 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 585
    Result: Lived
    Original line:
                     offers[0] = srcToken == wethToken ? bid : ask;

    Mutated line:
                     offers[0] = srcToken != wethToken ? bid : ask;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 597
    Result: Lived
    Original line:
                     if (biggestSkippedOffer.payAmount >= remainingSrcAmount) {

    Mutated line:
                     if (biggestSkippedOffer.payAmount < remainingSrcAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 605
    Result: Lived
    Original line:
                     } else if (offers[numTakenOffer].payAmount >= remainingSrcAmount) {

    Mutated line:
                     } else if (offers[numTakenOffer].payAmount < remainingSrcAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 612
    Result: Lived
    Original line:
                     } else if ((maxOrdersToTake - numTakenOffer) > 1

    Mutated line:
                     } else if ((maxOrdersToTake - numTakenOffer) <= 1


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 613
    Result: Lived
    Original line:
                                 && offers[numTakenOffer].payAmount >= minPayAmount) {

    Mutated line:
                                 && offers[numTakenOffer].payAmount < minPayAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 617
    Result: Lived
    Original line:
                     } else if (offers[numTakenOffer].payAmount > biggestSkippedOffer.payAmount) {

    Mutated line:
                     } else if (offers[numTakenOffer].payAmount <= biggestSkippedOffer.payAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 592
    Result: Lived
    Original line:
                 for (; maxTraversedOrders > 0; --maxTraversedOrders) {

    Mutated line:
                 for (; maxTraversedOrders <= 0; --maxTraversedOrders) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 627
    Result: Lived
    Original line:
                 if (remainingSrcAmount > 0) totalDestAmount = 0;

    Mutated line:
                 if (remainingSrcAmount <= 0) totalDestAmount = 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 628
    Result: Lived
    Original line:
                 if (totalDestAmount == 0) offers = new OfferData[](0);

    Mutated line:
                 if (totalDestAmount != 0) offers = new OfferData[](0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 641
    Result: Lived
    Original line:
                 if (!isEthToToken && (ask.id == 0 || bid.id == 0)) {

    Mutated line:
                 if (!isEthToToken && (ask.id != 0 || bid.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 641
    Result: Lived
    Original line:
                 if (!isEthToToken && (ask.id == 0 || bid.id == 0)) {

    Mutated line:
                 if (!isEthToToken && (ask.id == 0 || bid.id != 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 662
    Result: Lived
    Original line:
                 if (basicData.minETHSupport > ethOrderSize) {

    Mutated line:
                 if (basicData.minETHSupport <= ethOrderSize) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id != 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id != 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount <= MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount <= MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount <= MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount <= MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 717
    Result: Lived
    Original line:
                 if (x1 <= x2) { return false; }

    Mutated line:
                 if (x1 > x2) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 723
    Result: Lived
    Original line:
                 if (BPS * (x1 - x2) <= x2 * minSpreadBps) { return false; }

    Mutated line:
                 if (BPS * (x1 - x2) > x2 * minSpreadBps) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 758
    Result: Lived
    Original line:
                 require(minSpreadBps < POW_2_32, "encodeInternalInventoryData: minSpreadBps is too big");

    Mutated line:
                 require(minSpreadBps >= POW_2_32, "encodeInternalInventoryData: minSpreadBps is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 759
    Result: Lived
    Original line:
                 require(premiumBps < POW_2_32, "encodeInternalInventoryData: premiumBps is too big");

    Mutated line:
                 require(premiumBps >= POW_2_32, "encodeInternalInventoryData: premiumBps is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 760
    Result: Lived
    Original line:
                 require(maxTokenBal < POW_2_96, "encodeInternalInventoryData: maxTokenBal is too big");

    Mutated line:
                 require(maxTokenBal >= POW_2_96, "encodeInternalInventoryData: maxTokenBal is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 761
    Result: Lived
    Original line:
                 require(minTokenBal < POW_2_96, "encodeInternalInventoryData: minTokenBal is too big");

    Mutated line:
                 require(minTokenBal >= POW_2_96, "encodeInternalInventoryData: minTokenBal is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 777
    Result: Lived
    Original line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;

    Mutated line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 != 0 ? false : true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 784
    Result: Lived
    Original line:
                 require(maxTakes < POW_2_32, "encodeTokenBasicData: maxTakes is too big");

    Mutated line:
                 require(maxTakes >= POW_2_32, "encodeTokenBasicData: maxTakes is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 785
    Result: Lived
    Original line:
                 require(maxTraverse < POW_2_32, "encodeTokenBasicData: maxTraverse is too big");

    Mutated line:
                 require(maxTraverse >= POW_2_32, "encodeTokenBasicData: maxTraverse is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 786
    Result: Lived
    Original line:
                 require(ethSize < POW_2_96, "encodeTokenBasicData: ethSize is too big");

    Mutated line:
                 require(ethSize >= POW_2_96, "encodeTokenBasicData: ethSize is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 805
    Result: Lived
    Original line:
                 require(minSizeY < POW_2_32, "encodeFactorData: minSizeY is too big");

    Mutated line:
                 require(minSizeY >= POW_2_32, "encodeFactorData: minSizeY is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 806
    Result: Lived
    Original line:
                 require(minSizeX < POW_2_32, "encodeFactorData: minSizeX is too big");

    Mutated line:
                 require(minSizeX >= POW_2_32, "encodeFactorData: minSizeX is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 807
    Result: Lived
    Original line:
                 require(takeY < POW_2_32, "encodeFactorData: takeY is too big");

    Mutated line:
                 require(takeY >= POW_2_32, "encodeFactorData: takeY is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 808
    Result: Lived
    Original line:
                 require(takeX < POW_2_32, "encodeFactorData: takeX is too big");

    Mutated line:
                 require(takeX >= POW_2_32, "encodeFactorData: takeX is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 809
    Result: Lived
    Original line:
                 require(traverseY < POW_2_32, "encodeFactorData: traverseY is too big");

    Mutated line:
                 require(traverseY >= POW_2_32, "encodeFactorData: traverseY is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 810
    Result: Lived
    Original line:
                 require(traverseX < POW_2_32, "encodeFactorData: traverseX is too big");

    Mutated line:
                 require(traverseX >= POW_2_32, "encodeFactorData: traverseX is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 264
    Result: Lived
    Original line:
                 require(minToken < POW_2_96/2, "setInternalInventoryData: minToken > 2**95");

    Mutated line:
                 require(minToken < POW_2_96 * 2, "setInternalInventoryData: minToken > 2**95");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 334
    Result: Lived
    Original line:
                 (destAmount, offers) = findBestOffers(dstToken, srcToken, (srcAmountToken * 10 ** 18), bid, ask);

    Mutated line:
                 (destAmount, offers) = findBestOffers(dstToken, srcToken, (srcAmountToken / 10 ** 18), bid, ask);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 336
    Result: Lived
    Original line:
                 destAmountToken = destAmount / 10 ** 18;

    Mutated line:
                 destAmountToken = destAmount * 10 ** 18;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 469
    Result: Lived
    Original line:
                     uint buyAmount = payAmount * offers[i].buyAmount / offers[i].payAmount;

    Mutated line:
                     uint buyAmount = payAmount * offers[i].buyAmount * offers[i].payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 469
    Result: Lived
    Original line:
                     uint buyAmount = payAmount * offers[i].buyAmount / offers[i].payAmount;

    Mutated line:
                     uint buyAmount = payAmount / offers[i].buyAmount / offers[i].payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 482
    Result: Lived
    Original line:
                 actualDestAmount = newReserveBalance - lastReserveBalance;

    Mutated line:
                 actualDestAmount = newReserveBalance + lastReserveBalance;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 513
    Result: Lived
    Original line:
                     if (tokenBalance + tokenVal > inventoryData.maxTokenBal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance - tokenVal > inventoryData.maxTokenBal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 510
    Result: Lived
    Original line:
                     if (tokenBalance - tokenVal < inventoryData.minTokenBal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance + tokenVal < inventoryData.minTokenBal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 532
    Result: Lived
    Original line:
                     : rate - 1;

    Mutated line:
                     : rate + 1;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 537
    Result: Lived
    Original line:
                 return ((BPS - feeBps) * val) / BPS;

    Mutated line:
                 return ((BPS - feeBps) * val) * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 537
    Result: Lived
    Original line:
                 return ((BPS - feeBps) * val) / BPS;

    Mutated line:
                 return ((BPS - feeBps) / val) / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 537
    Result: Lived
    Original line:
                 return ((BPS - feeBps) * val) / BPS;

    Mutated line:
                 return ((BPS + feeBps) * val) / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 542
    Result: Lived
    Original line:
                 return val * (BPS + premium) / BPS;

    Mutated line:
                 return val * (BPS + premium) * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 542
    Result: Lived
    Original line:
                 return val * (BPS + premium) / BPS;

    Mutated line:
                 return val / (BPS + premium) / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 542
    Result: Lived
    Original line:
                 return val * (BPS + premium) / BPS;

    Mutated line:
                 return val * (BPS - premium) / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 612
    Result: Lived
    Original line:
                     } else if ((maxOrdersToTake - numTakenOffer) > 1

    Mutated line:
                     } else if ((maxOrdersToTake + numTakenOffer) > 1


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 606
    Result: Lived
    Original line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount * offers[numTakenOffer].buyAmount / offers[numTakenOffer].payAmount;

    Mutated line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount * offers[numTakenOffer].buyAmount * offers[numTakenOffer].payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 606
    Result: Lived
    Original line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount * offers[numTakenOffer].buyAmount / offers[numTakenOffer].payAmount;

    Mutated line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount / offers[numTakenOffer].buyAmount / offers[numTakenOffer].payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 599
    Result: Lived
    Original line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount * biggestSkippedOffer.buyAmount / biggestSkippedOffer.payAmount;

    Mutated line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount * biggestSkippedOffer.buyAmount * biggestSkippedOffer.payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 599
    Result: Lived
    Original line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount * biggestSkippedOffer.buyAmount / biggestSkippedOffer.payAmount;

    Mutated line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount / biggestSkippedOffer.buyAmount / biggestSkippedOffer.payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 655
    Result: Lived
    Original line:
                     order0Buy = (ask.buyAmount + ask.payAmount * bid.payAmount / bid.buyAmount) / 2;

    Mutated line:
                     order0Buy = (ask.buyAmount + ask.payAmount * bid.payAmount / bid.buyAmount) * 2;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 655
    Result: Lived
    Original line:
                     order0Buy = (ask.buyAmount + ask.payAmount * bid.payAmount / bid.buyAmount) / 2;

    Mutated line:
                     order0Buy = (ask.buyAmount - ask.payAmount * bid.payAmount / bid.buyAmount) / 2;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 655
    Result: Lived
    Original line:
                     order0Buy = (ask.buyAmount + ask.payAmount * bid.payAmount / bid.buyAmount) / 2;

    Mutated line:
                     order0Buy = (ask.buyAmount + ask.payAmount * bid.payAmount * bid.buyAmount) / 2;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 655
    Result: Lived
    Original line:
                     order0Buy = (ask.buyAmount + ask.payAmount * bid.payAmount / bid.buyAmount) / 2;

    Mutated line:
                     order0Buy = (ask.buyAmount + ask.payAmount / bid.payAmount / bid.buyAmount) / 2;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 658
    Result: Lived
    Original line:
                 uint ethOrderSize = isEthToToken ? srcAmount : srcAmount * order0Buy / order0Pay;

    Mutated line:
                 uint ethOrderSize = isEthToToken ? srcAmount : srcAmount * order0Buy * order0Pay;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 658
    Result: Lived
    Original line:
                 uint ethOrderSize = isEthToToken ? srcAmount : srcAmount * order0Buy / order0Pay;

    Mutated line:
                 uint ethOrderSize = isEthToToken ? srcAmount : srcAmount / order0Buy / order0Pay;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 673
    Result: Lived
    Original line:
                 maxTraverse = (factorData.maxTraverseX * ethOrderSize / PRECISION + factorData.maxTraverseY) / tokenFactorBPS;

    Mutated line:
                 maxTraverse = (factorData.maxTraverseX * ethOrderSize / PRECISION + factorData.maxTraverseY) * tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 673
    Result: Lived
    Original line:
                 maxTraverse = (factorData.maxTraverseX * ethOrderSize / PRECISION + factorData.maxTraverseY) / tokenFactorBPS;

    Mutated line:
                 maxTraverse = (factorData.maxTraverseX * ethOrderSize / PRECISION - factorData.maxTraverseY) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 673
    Result: Lived
    Original line:
                 maxTraverse = (factorData.maxTraverseX * ethOrderSize / PRECISION + factorData.maxTraverseY) / tokenFactorBPS;

    Mutated line:
                 maxTraverse = (factorData.maxTraverseX * ethOrderSize * PRECISION + factorData.maxTraverseY) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 673
    Result: Lived
    Original line:
                 maxTraverse = (factorData.maxTraverseX * ethOrderSize / PRECISION + factorData.maxTraverseY) / tokenFactorBPS;

    Mutated line:
                 maxTraverse = (factorData.maxTraverseX / ethOrderSize / PRECISION + factorData.maxTraverseY) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 676
    Result: Lived
    Original line:
                 maxTakes = (factorData.maxTakeX * ethOrderSize / PRECISION + factorData.maxTakeY) / tokenFactorBPS;

    Mutated line:
                 maxTakes = (factorData.maxTakeX * ethOrderSize / PRECISION + factorData.maxTakeY) * tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 676
    Result: Lived
    Original line:
                 maxTakes = (factorData.maxTakeX * ethOrderSize / PRECISION + factorData.maxTakeY) / tokenFactorBPS;

    Mutated line:
                 maxTakes = (factorData.maxTakeX * ethOrderSize / PRECISION - factorData.maxTakeY) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 676
    Result: Lived
    Original line:
                 maxTakes = (factorData.maxTakeX * ethOrderSize / PRECISION + factorData.maxTakeY) / tokenFactorBPS;

    Mutated line:
                 maxTakes = (factorData.maxTakeX * ethOrderSize * PRECISION + factorData.maxTakeY) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 676
    Result: Lived
    Original line:
                 maxTakes = (factorData.maxTakeX * ethOrderSize / PRECISION + factorData.maxTakeY) / tokenFactorBPS;

    Mutated line:
                 maxTakes = (factorData.maxTakeX / ethOrderSize / PRECISION + factorData.maxTakeY) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 679
    Result: Lived
    Original line:
                 uint minETHAmount = (factorData.minOrderSizeX * ethOrderSize + factorData.minOrderSizeY * PRECISION) / tokenFactorBPS;

    Mutated line:
                 uint minETHAmount = (factorData.minOrderSizeX * ethOrderSize + factorData.minOrderSizeY * PRECISION) * tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 679
    Result: Lived
    Original line:
                 uint minETHAmount = (factorData.minOrderSizeX * ethOrderSize + factorData.minOrderSizeY * PRECISION) / tokenFactorBPS;

    Mutated line:
                 uint minETHAmount = (factorData.minOrderSizeX * ethOrderSize - factorData.minOrderSizeY * PRECISION) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 679
    Result: Lived
    Original line:
                 uint minETHAmount = (factorData.minOrderSizeX * ethOrderSize + factorData.minOrderSizeY * PRECISION) / tokenFactorBPS;

    Mutated line:
                 uint minETHAmount = (factorData.minOrderSizeX / ethOrderSize + factorData.minOrderSizeY * PRECISION) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 679
    Result: Lived
    Original line:
                 uint minETHAmount = (factorData.minOrderSizeX * ethOrderSize + factorData.minOrderSizeY * PRECISION) / tokenFactorBPS;

    Mutated line:
                 uint minETHAmount = (factorData.minOrderSizeX * ethOrderSize + factorData.minOrderSizeY / PRECISION) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 682
    Result: Lived
    Original line:
                 minPayAmount = isEthToToken ? minETHAmount : minETHAmount * order0Pay / order0Buy;

    Mutated line:
                 minPayAmount = isEthToToken ? minETHAmount : minETHAmount * order0Pay * order0Buy;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 682
    Result: Lived
    Original line:
                 minPayAmount = isEthToToken ? minETHAmount : minETHAmount * order0Pay / order0Buy;

    Mutated line:
                 minPayAmount = isEthToToken ? minETHAmount : minETHAmount / order0Pay / order0Buy;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 713
    Result: Lived
    Original line:
                 uint x1 = ask.payAmount * bid.payAmount;

    Mutated line:
                 uint x1 = ask.payAmount / bid.payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 714
    Result: Lived
    Original line:
                 uint x2 = ask.buyAmount * bid.buyAmount;

    Mutated line:
                 uint x2 = ask.buyAmount / bid.buyAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 723
    Result: Lived
    Original line:
                 if (BPS * (x1 - x2) <= x2 * minSpreadBps) { return false; }

    Mutated line:
                 if (BPS / (x1 - x2) <= x2 * minSpreadBps) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 723
    Result: Lived
    Original line:
                 if (BPS * (x1 - x2) <= x2 * minSpreadBps) { return false; }

    Mutated line:
                 if (BPS * (x1 + x2) <= x2 * minSpreadBps) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 723
    Result: Lived
    Original line:
                 if (BPS * (x1 - x2) <= x2 * minSpreadBps) { return false; }

    Mutated line:
                 if (BPS * (x1 - x2) <= x2 / minSpreadBps) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 762
    Result: Lived
    Original line:
                 data = minSpreadBps & (POW_2_32 - 1);

    Mutated line:
                 data = minSpreadBps | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 762
    Result: Lived
    Original line:
                 data = minSpreadBps & (POW_2_32 - 1);

    Mutated line:
                 data = minSpreadBps & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 763
    Result: Lived
    Original line:
                 data |= (premiumBps & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (premiumBps & (POW_2_32 - 1)) / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 763
    Result: Lived
    Original line:
                 data |= (premiumBps & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (premiumBps | (POW_2_32 - 1)) * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 763
    Result: Lived
    Original line:
                 data |= (premiumBps & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (premiumBps & (POW_2_32 + 1)) * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 764
    Result: Lived
    Original line:
                 data |= (maxTokenBal & (POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (maxTokenBal & (POW_2_96 - 1)) * POW_2_32 / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 764
    Result: Lived
    Original line:
                 data |= (maxTokenBal & (POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (maxTokenBal & (POW_2_96 - 1)) / POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 764
    Result: Lived
    Original line:
                 data |= (maxTokenBal & (POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (maxTokenBal | (POW_2_96 - 1)) * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 764
    Result: Lived
    Original line:
                 data |= (maxTokenBal & (POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (maxTokenBal & (POW_2_96 + 1)) * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 765
    Result: Lived
    Original line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 765
    Result: Lived
    Original line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 / POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 765
    Result: Lived
    Original line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) / POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 765
    Result: Lived
    Original line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (minTokenBal | (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 765
    Result: Lived
    Original line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (minTokenBal & (POW_2_96 / 2 + 1)) * POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 765
    Result: Lived
    Original line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (minTokenBal & (POW_2_96 * 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 766
    Result: Lived
    Original line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) * POW_2_96 * POW_2_32 / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 766
    Result: Lived
    Original line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) * POW_2_96 / POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 766
    Result: Lived
    Original line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) / POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 766
    Result: Lived
    Original line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (isEnabled ? 1 : 0) / (POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 766
    Result: Lived
    Original line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 * 2) * POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 773
    Result: Lived
    Original line:
                 minSpreadBps = data & (POW_2_32 - 1);

    Mutated line:
                 minSpreadBps = data | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 773
    Result: Lived
    Original line:
                 minSpreadBps = data & (POW_2_32 - 1);

    Mutated line:
                 minSpreadBps = data & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 774
    Result: Lived
    Original line:
                 premiumBps = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 premiumBps = (data / POW_2_32) | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 774
    Result: Lived
    Original line:
                 premiumBps = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 premiumBps = (data * POW_2_32) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 774
    Result: Lived
    Original line:
                 premiumBps = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 premiumBps = (data / POW_2_32) & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 775
    Result: Lived
    Original line:
                 maxTokenBal = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 - 1);

    Mutated line:
                 maxTokenBal = (data / (POW_2_32 * POW_2_32)) | (POW_2_96 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 775
    Result: Lived
    Original line:
                 maxTokenBal = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 - 1);

    Mutated line:
                 maxTokenBal = (data * (POW_2_32 * POW_2_32)) & (POW_2_96 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 775
    Result: Lived
    Original line:
                 maxTokenBal = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 - 1);

    Mutated line:
                 maxTokenBal = (data / (POW_2_32 / POW_2_32)) & (POW_2_96 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 775
    Result: Lived
    Original line:
                 maxTokenBal = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 - 1);

    Mutated line:
                 maxTokenBal = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 776
    Result: Lived
    Original line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);

    Mutated line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) | (POW_2_96 / 2 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 776
    Result: Lived
    Original line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);

    Mutated line:
                 minTokenBal = (data * (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 776
    Result: Lived
    Original line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);

    Mutated line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 / POW_2_32)) & (POW_2_96 / 2 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 776
    Result: Lived
    Original line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);

    Mutated line:
                 minTokenBal = (data / (POW_2_96 / POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 776
    Result: Lived
    Original line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);

    Mutated line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 776
    Result: Lived
    Original line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);

    Mutated line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 * 2 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 777
    Result: Lived
    Original line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;

    Mutated line:
                 isEnabled = (data * ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 777
    Result: Lived
    Original line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;

    Mutated line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 / POW_2_32)) % 2 == 0 ? false : true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 777
    Result: Lived
    Original line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;

    Mutated line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 / POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 777
    Result: Lived
    Original line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;

    Mutated line:
                 isEnabled = (data / ((POW_2_96 / 2) / POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 777
    Result: Lived
    Original line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;

    Mutated line:
                 isEnabled = (data / ((POW_2_96 * 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 787
    Result: Lived
    Original line:
                 data = maxTakes & (POW_2_32 - 1);

    Mutated line:
                 data = maxTakes | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 787
    Result: Lived
    Original line:
                 data = maxTakes & (POW_2_32 - 1);

    Mutated line:
                 data = maxTakes & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 788
    Result: Lived
    Original line:
                 data |= (maxTraverse & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (maxTraverse & (POW_2_32 - 1)) / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 788
    Result: Lived
    Original line:
                 data |= (maxTraverse & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (maxTraverse | (POW_2_32 - 1)) * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 788
    Result: Lived
    Original line:
                 data |= (maxTraverse & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (maxTraverse & (POW_2_32 + 1)) * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 789
    Result: Lived
    Original line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 - 1)) * POW_2_32 / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 789
    Result: Lived
    Original line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 - 1)) / POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 789
    Result: Lived
    Original line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (ethSize | (POW_2_96 * POW_2_96 - 1)) * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 789
    Result: Lived
    Original line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 + 1)) * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 789
    Result: Lived
    Original line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (ethSize & (POW_2_96 / POW_2_96 - 1)) * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 796
    Result: Lived
    Original line:
                 maxTakes = data & (POW_2_32 - 1);

    Mutated line:
                 maxTakes = data | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 796
    Result: Lived
    Original line:
                 maxTakes = data & (POW_2_32 - 1);

    Mutated line:
                 maxTakes = data & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 797
    Result: Lived
    Original line:
                 maxTraverse = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 maxTraverse = (data / POW_2_32) | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 797
    Result: Lived
    Original line:
                 maxTraverse = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 maxTraverse = (data * POW_2_32) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 797
    Result: Lived
    Original line:
                 maxTraverse = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 maxTraverse = (data / POW_2_32) & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 798
    Result: Lived
    Original line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 * POW_2_96 - 1);

    Mutated line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) | (POW_2_96 * POW_2_96 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 798
    Result: Lived
    Original line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 * POW_2_96 - 1);

    Mutated line:
                 ethSize = (data * (POW_2_32 * POW_2_32)) & (POW_2_96 * POW_2_96 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 798
    Result: Lived
    Original line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 * POW_2_96 - 1);

    Mutated line:
                 ethSize = (data / (POW_2_32 / POW_2_32)) & (POW_2_96 * POW_2_96 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 798
    Result: Lived
    Original line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 * POW_2_96 - 1);

    Mutated line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 * POW_2_96 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 798
    Result: Lived
    Original line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 * POW_2_96 - 1);

    Mutated line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 / POW_2_96 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 811
    Result: Lived
    Original line:
                 data = (minSizeY & (POW_2_32 - 1));

    Mutated line:
                 data = (minSizeY | (POW_2_32 - 1));


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 811
    Result: Lived
    Original line:
                 data = (minSizeY & (POW_2_32 - 1));

    Mutated line:
                 data = (minSizeY & (POW_2_32 + 1));


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 812
    Result: Lived
    Original line:
                 data |= (minSizeX & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (minSizeX & (POW_2_32 - 1)) / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 812
    Result: Lived
    Original line:
                 data |= (minSizeX & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (minSizeX | (POW_2_32 - 1)) * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 812
    Result: Lived
    Original line:
                 data |= (minSizeX & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (minSizeX & (POW_2_32 + 1)) * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 813
    Result: Lived
    Original line:
                 data |= (takeY & (POW_2_32 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (takeY & (POW_2_32 - 1)) * POW_2_32 / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 813
    Result: Lived
    Original line:
                 data |= (takeY & (POW_2_32 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (takeY & (POW_2_32 - 1)) / POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 813
    Result: Lived
    Original line:
                 data |= (takeY & (POW_2_32 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (takeY | (POW_2_32 - 1)) * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 813
    Result: Lived
    Original line:
                 data |= (takeY & (POW_2_32 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (takeY & (POW_2_32 + 1)) * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 814
    Result: Lived
    Original line:
                 data |= (takeX & (POW_2_32 - 1)) * POW_2_96;

    Mutated line:
                 data |= (takeX & (POW_2_32 - 1)) / POW_2_96;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 814
    Result: Lived
    Original line:
                 data |= (takeX & (POW_2_32 - 1)) * POW_2_96;

    Mutated line:
                 data |= (takeX | (POW_2_32 - 1)) * POW_2_96;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 814
    Result: Lived
    Original line:
                 data |= (takeX & (POW_2_32 - 1)) * POW_2_96;

    Mutated line:
                 data |= (takeX & (POW_2_32 + 1)) * POW_2_96;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 815
    Result: Lived
    Original line:
                 data |= (traverseY & (POW_2_32 - 1)) * POW_2_96 * POW_2_32;

    Mutated line:
                 data |= (traverseY & (POW_2_32 - 1)) * POW_2_96 / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 815
    Result: Lived
    Original line:
                 data |= (traverseY & (POW_2_32 - 1)) * POW_2_96 * POW_2_32;

    Mutated line:
                 data |= (traverseY & (POW_2_32 - 1)) / POW_2_96 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 815
    Result: Lived
    Original line:
                 data |= (traverseY & (POW_2_32 - 1)) * POW_2_96 * POW_2_32;

    Mutated line:
                 data |= (traverseY | (POW_2_32 - 1)) * POW_2_96 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 815
    Result: Lived
    Original line:
                 data |= (traverseY & (POW_2_32 - 1)) * POW_2_96 * POW_2_32;

    Mutated line:
                 data |= (traverseY & (POW_2_32 + 1)) * POW_2_96 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 816
    Result: Lived
    Original line:
                 data |= (traverseX & (POW_2_32 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (traverseX & (POW_2_32 - 1)) * POW_2_96 * POW_2_32 / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 816
    Result: Lived
    Original line:
                 data |= (traverseX & (POW_2_32 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (traverseX & (POW_2_32 - 1)) * POW_2_96 / POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 816
    Result: Lived
    Original line:
                 data |= (traverseX & (POW_2_32 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (traverseX & (POW_2_32 - 1)) / POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 816
    Result: Lived
    Original line:
                 data |= (traverseX & (POW_2_32 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (traverseX | (POW_2_32 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 816
    Result: Lived
    Original line:
                 data |= (traverseX & (POW_2_32 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (traverseX & (POW_2_32 + 1)) * POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 823
    Result: Lived
    Original line:
                 minSizeY = data & (POW_2_32 - 1);

    Mutated line:
                 minSizeY = data | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 823
    Result: Lived
    Original line:
                 minSizeY = data & (POW_2_32 - 1);

    Mutated line:
                 minSizeY = data & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 824
    Result: Lived
    Original line:
                 minSizeX = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 minSizeX = (data / POW_2_32) | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 824
    Result: Lived
    Original line:
                 minSizeX = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 minSizeX = (data * POW_2_32) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 824
    Result: Lived
    Original line:
                 minSizeX = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 minSizeX = (data / POW_2_32) & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 825
    Result: Lived
    Original line:
                 takeY = (data / (POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 takeY = (data / (POW_2_32 * POW_2_32)) | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 825
    Result: Lived
    Original line:
                 takeY = (data / (POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 takeY = (data * (POW_2_32 * POW_2_32)) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 825
    Result: Lived
    Original line:
                 takeY = (data / (POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 takeY = (data / (POW_2_32 / POW_2_32)) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 825
    Result: Lived
    Original line:
                 takeY = (data / (POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 takeY = (data / (POW_2_32 * POW_2_32)) & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 826
    Result: Lived
    Original line:
                 takeX = (data / POW_2_96) & (POW_2_32 - 1);

    Mutated line:
                 takeX = (data / POW_2_96) | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 826
    Result: Lived
    Original line:
                 takeX = (data / POW_2_96) & (POW_2_32 - 1);

    Mutated line:
                 takeX = (data * POW_2_96) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 826
    Result: Lived
    Original line:
                 takeX = (data / POW_2_96) & (POW_2_32 - 1);

    Mutated line:
                 takeX = (data / POW_2_96) & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 827
    Result: Lived
    Original line:
                 traverseY = (data / (POW_2_96 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseY = (data / (POW_2_96 * POW_2_32)) | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 827
    Result: Lived
    Original line:
                 traverseY = (data / (POW_2_96 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseY = (data * (POW_2_96 * POW_2_32)) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 827
    Result: Lived
    Original line:
                 traverseY = (data / (POW_2_96 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseY = (data / (POW_2_96 / POW_2_32)) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 827
    Result: Lived
    Original line:
                 traverseY = (data / (POW_2_96 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseY = (data / (POW_2_96 * POW_2_32)) & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 828
    Result: Lived
    Original line:
                 traverseX = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseX = (data / (POW_2_96 * POW_2_32 * POW_2_32)) | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 828
    Result: Lived
    Original line:
                 traverseX = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseX = (data * (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 828
    Result: Lived
    Original line:
                 traverseX = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseX = (data / (POW_2_96 * POW_2_32 / POW_2_32)) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 828
    Result: Lived
    Original line:
                 traverseX = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseX = (data / (POW_2_96 / POW_2_32 * POW_2_32)) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 828
    Result: Lived
    Original line:
                 traverseX = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseX = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 472
    Result: Lived
    Original line:
                     remainingSrcAmount -= payAmount;

    Mutated line:
                     remainingSrcAmount += payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 614
    Result: Lived
    Original line:
                         totalDestAmount += offers[numTakenOffer].buyAmount;

    Mutated line:
                         totalDestAmount -= offers[numTakenOffer].buyAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 615
    Result: Lived
    Original line:
                         remainingSrcAmount -= offers[numTakenOffer].payAmount;

    Mutated line:
                         remainingSrcAmount += offers[numTakenOffer].payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 608
    Result: Lived
    Original line:
                         totalDestAmount += offers[numTakenOffer].buyAmount;

    Mutated line:
                         totalDestAmount -= offers[numTakenOffer].buyAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 601
    Result: Lived
    Original line:
                         totalDestAmount += offers[numTakenOffer].buyAmount;

    Mutated line:
                         totalDestAmount -= offers[numTakenOffer].buyAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 69
    Result: Lived
    Original line:
                 public Withdrawable2(_admin)

    Mutated line:
                 public 


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 197
    Result: Lived
    Original line:
                 public onlyAdmin

    Mutated line:
                 public 


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 219
    Result: Lived
    Original line:
             function enableTrade() public onlyAdmin returns(bool) {

    Mutated line:
             function enableTrade() public  returns(bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 226
    Result: Lived
    Original line:
             function disableTrade() public onlyAlerter returns(bool) {

    Mutated line:
             function disableTrade() public  returns(bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 235
    Result: Lived
    Original line:
             function setContracts(address _kyberNetwork, address _otc) public onlyAdmin {

    Mutated line:
             function setContracts(address _kyberNetwork, address _otc) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 261
    Result: Lived
    Original line:
                 public onlyAdmin

    Mutated line:
                 public 


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 276
    Result: Lived
    Original line:
             function listToken(IERC20 token) public onlyAdmin {

    Mutated line:
             function listToken(IERC20 token) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 291
    Result: Lived
    Original line:
             function delistToken(IERC20 token) public onlyAdmin {

    Mutated line:
             function delistToken(IERC20 token) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 307
    Result: Lived
    Original line:
             function setFeeBps(uint _feeBps) public onlyAdmin {

    Mutated line:
             function setFeeBps(uint _feeBps) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/Address.sol
    Line nr: 24
    Result: Lived
    Original line:
                 return size > 0;

    Mutated line:
                 return size >= 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/Address.sol
    Line nr: 24
    Result: Lived
    Original line:
                 return size > 0;

    Mutated line:
                 return size <= 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a != 0 || c / a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c / a != b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(b > 0, "divider <= 0");

    Mutated line:
                 require(b >= 0, "divider <= 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a != b * c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(b <= a, "sub underflow");

    Mutated line:
                 require(b < a, "sub underflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 48
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a <= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 56
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a <= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length <= size + 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 140
    Result: Lived
    Original line:
                 require(_value <= _allowance, "transfer more then allowed");

    Mutated line:
                 require(_value < _allowance, "transfer more then allowed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a != 0 || c / a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c / a != b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(b > 0, "divider <= 0");

    Mutated line:
                 require(b <= 0, "divider <= 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a != b * c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(b <= a, "sub underflow");

    Mutated line:
                 require(b > a, "sub underflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 39
    Result: Lived
    Original line:
                 require(c >= a, "add overflow");

    Mutated line:
                 require(c < a, "add overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 44
    Result: Lived
    Original line:
                 return a >= b ? a : b;

    Mutated line:
                 return a < b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 48
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a >= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 52
    Result: Lived
    Original line:
                 return a >= b ? a : b;

    Mutated line:
                 return a < b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 56
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a >= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length >= size + 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 140
    Result: Lived
    Original line:
                 require(_value <= _allowance, "transfer more then allowed");

    Mutated line:
                 require(_value > _allowance, "transfer more then allowed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 20
    Result: Lived
    Original line:
                 uint c = a * b;

    Mutated line:
                 uint c = a / b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c * a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 27
    Result: Lived
    Original line:
                 uint c = a / b;

    Mutated line:
                 uint c = a * b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a == b * c - a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a == b / c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 34
    Result: Lived
    Original line:
                 return a - b;

    Mutated line:
                 return a + b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 38
    Result: Lived
    Original line:
                 uint c = a + b;

    Mutated line:
                 uint c = a - b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length < size - 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 109
    Result: Lived
    Original line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 * 32) returns (bool) {

    Mutated line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 / 32) returns (bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 174
    Result: Lived
    Original line:
             uint public INITIAL_SUPPLY = 10**(50+18);

    Mutated line:
             uint public INITIAL_SUPPLY = 10**(50 - 18);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 104
    Result: Lived
    Original line:
                     revert("short address");

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 109
    Result: Lived
    Original line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 * 32) returns (bool) {

    Mutated line:
             function transfer(address _to, uint _value)  public  returns (bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 32
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee > 0, "0 rate");

    Mutated line:
                 require(tData.rateOnlyNetworkFee >= 0, "0 rate");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee < MAX_RATE, "rate > MAX_RATE");

    Mutated line:
                 require(tData.rateOnlyNetworkFee <= MAX_RATE, "rate > MAX_RATE");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 43
    Result: Lived
    Original line:
                 if (tData.actualDestAmount > tData.input.maxDestAmount) {

    Mutated line:
                 if (tData.actualDestAmount >= tData.input.maxDestAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 53
    Result: Lived
    Original line:
                 if (tData.input.srcAmount == 1313) {

    Mutated line:
                 if (tData.input.srcAmount != 1313) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 62
    Result: Lived
    Original line:
                 if (tData.input.srcAmount == 1515) {

    Mutated line:
                 if (tData.input.srcAmount != 1515) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 32
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee > 0, "0 rate");

    Mutated line:
                 require(tData.rateOnlyNetworkFee <= 0, "0 rate");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee < MAX_RATE, "rate > MAX_RATE");

    Mutated line:
                 require(tData.rateOnlyNetworkFee >= MAX_RATE, "rate > MAX_RATE");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 34
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee >= tData.input.minConversionRate, "rate < minConvRate");

    Mutated line:
                 require(tData.rateOnlyNetworkFee < tData.input.minConversionRate, "rate < minConvRate");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 36
    Result: Lived
    Original line:
                 if (gasHelper != IGasHelper(0)) {

    Mutated line:
                 if (gasHelper == IGasHelper(0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 43
    Result: Lived
    Original line:
                 if (tData.actualDestAmount > tData.input.maxDestAmount) {

    Mutated line:
                 if (tData.actualDestAmount <= tData.input.maxDestAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 53
    Result: Lived
    Original line:
                 if (tData.input.srcAmount == 1313) {

    Mutated line:
                 if (tData.input.srcAmount != 1313) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 62
    Result: Lived
    Original line:
                 if (tData.input.srcAmount == 1515) {

    Mutated line:
                 if (tData.input.srcAmount != 1515) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 79
    Result: Lived
    Original line:
                         tData.tradeWei - tData.networkFeeWei - tData.platformFeeWei,

    Mutated line:
                         tData.tradeWei - tData.networkFeeWei + tData.platformFeeWei,


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 79
    Result: Lived
    Original line:
                         tData.tradeWei - tData.networkFeeWei - tData.platformFeeWei,

    Mutated line:
                         tData.tradeWei + tData.networkFeeWei - tData.platformFeeWei,


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 29
    Result: Lived
    Original line:
                 calcRatesAndAmounts(tData.input.src, tData.input.dest, tData.input.srcAmount, tData, hint);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 10
    Result: Lived
    Original line:
             constructor(address _admin) public KyberNetwork(_admin) { }

    Mutated line:
             constructor(address _admin) public  { }


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork.sol
    Line nr: 19
    Result: Lived
    Original line:
                 nonReentrant

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 74
    Result: Lived
    Original line:
                 require(_feeBps < BPS, "constructor: fee >= bps");

    Mutated line:
                 require(_feeBps <= BPS, "constructor: fee >= bps");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 77
    Result: Lived
    Original line:
                 require(getDecimals(wethToken) == MAX_DECIMALS, "constructor: wethToken's decimals is not MAX_DECIMALS");

    Mutated line:
                 require(getDecimals(wethToken) != MAX_DECIMALS, "constructor: wethToken's decimals is not MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 99
    Result: Lived
    Original line:
                 if (srcQty == 0) { return 0; }

    Mutated line:
                 if (srcQty != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 101
    Result: Lived
    Original line:
                 IERC20 token = src == ETH_TOKEN_ADDRESS ? dest : src;

    Mutated line:
                 IERC20 token = src != ETH_TOKEN_ADDRESS ? dest : src;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 109
    Result: Lived
    Original line:
                 if (token == src && !checkValidSpread(bid, ask, false, 0)) { return 0; }

    Mutated line:
                 if (token != src && !checkValidSpread(bid, ask, false, 0)) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 114
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 120
    Result: Lived
    Original line:
                 if (offers.length == 0 || destQty == 0) { return 0; } // no offer or destQty == 0, return 0 for rate

    Mutated line:
                 if (offers.length != 0 || destQty == 0) { return 0; } // no offer or destQty == 0, return 0 for rate


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 120
    Result: Lived
    Original line:
                 if (offers.length == 0 || destQty == 0) { return 0; } // no offer or destQty == 0, return 0 for rate

    Mutated line:
                 if (offers.length == 0 || destQty != 0) { return 0; } // no offer or destQty == 0, return 0 for rate


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 127
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 176
    Result: Lived
    Original line:
                 require(msg.sender == kyberNetwork, "trade: not call from kyberNetwork's contract");

    Mutated line:
                 require(msg.sender != kyberNetwork, "trade: not call from kyberNetwork's contract");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 177
    Result: Lived
    Original line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");

    Mutated line:
                 require(srcToken != ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 177
    Result: Lived
    Original line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");

    Mutated line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken != ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 179
    Result: Lived
    Original line:
                 IERC20 token = srcToken == ETH_TOKEN_ADDRESS ? destToken : srcToken;

    Mutated line:
                 IERC20 token = srcToken != ETH_TOKEN_ADDRESS ? destToken : srcToken;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 264
    Result: Lived
    Original line:
                 require(minToken < POW_2_96/2, "setInternalInventoryData: minToken > 2**95");

    Mutated line:
                 require(minToken <= POW_2_96/2, "setInternalInventoryData: minToken > 2**95");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 265
    Result: Lived
    Original line:
                 require(maxToken < POW_2_96, "setInternalInventoryData: maxToken > 2**96");

    Mutated line:
                 require(maxToken <= POW_2_96, "setInternalInventoryData: maxToken > 2**96");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 266
    Result: Lived
    Original line:
                 require(pricePremiumBps < POW_2_32, "setInternalInventoryData: pricePremiumBps > 2**32");

    Mutated line:
                 require(pricePremiumBps <= POW_2_32, "setInternalInventoryData: pricePremiumBps > 2**32");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 267
    Result: Lived
    Original line:
                 require(minSpreadBps < POW_2_32, "setInternalInventoryData: minSpreadBps > 2**32");

    Mutated line:
                 require(minSpreadBps <= POW_2_32, "setInternalInventoryData: minSpreadBps > 2**32");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 281
    Result: Lived
    Original line:
                 require(getDecimals(token) == MAX_DECIMALS, "listToken: token's decimals is not MAX_DECIMALS");

    Mutated line:
                 require(getDecimals(token) != MAX_DECIMALS, "listToken: token's decimals is not MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 308
    Result: Lived
    Original line:
                 require(_feeBps < BPS, "setFeeBps: feeBps >= bps");

    Mutated line:
                 require(_feeBps <= BPS, "setFeeBps: feeBps >= bps");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 318
    Result: Lived
    Original line:
                 if (srcAmountToken == 0) {

    Mutated line:
                 if (srcAmountToken != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 340
    Result: Lived
    Original line:
                     if (offers[i].id == 0) {

    Mutated line:
                     if (offers[i].id != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 339
    Result: Lived
    Original line:
                 for (i; i < offers.length; i++) {

    Mutated line:
                 for (i; i <= offers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 346
    Result: Lived
    Original line:
                 for (i = 0; i < offerIds.length; i++) {

    Mutated line:
                 for (i = 0; i <= offerIds.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 391
    Result: Lived
    Original line:
                     require(conversionRate > 0, "doTrade: conversionRate is 0");

    Mutated line:
                     require(conversionRate >= 0, "doTrade: conversionRate is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 392
    Result: Lived
    Original line:
                     if (srcToken == ETH_TOKEN_ADDRESS)

    Mutated line:
                     if (srcToken != ETH_TOKEN_ADDRESS)


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 395
    Result: Lived
    Original line:
                         require(msg.value == 0, "doTrade: msg.value must be 0");

    Mutated line:
                         require(msg.value != 0, "doTrade: msg.value must be 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 393
    Result: Lived
    Original line:
                         require(msg.value == srcAmount, "doTrade: msg.value != srcAmount");

    Mutated line:
                         require(msg.value != srcAmount, "doTrade: msg.value != srcAmount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 399
    Result: Lived
    Original line:
                 require(userExpectedDestAmount > 0, "doTrade: userExpectedDestAmount == 0"); // sanity check

    Mutated line:
                 require(userExpectedDestAmount >= 0, "doTrade: userExpectedDestAmount == 0"); // sanity check


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 404
    Result: Lived
    Original line:
                 bool useInternalInventory = conversionRate % 2 == 1;

    Mutated line:
                 bool useInternalInventory = conversionRate % 2 != 1;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 408
    Result: Lived
    Original line:
                     if (srcToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                     if (srcToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 424
    Result: Lived
    Original line:
                 (bid, ask) = getFirstBidAndAskOrders(srcToken == ETH_TOKEN_ADDRESS ? destToken : srcToken);

    Mutated line:
                 (bid, ask) = getFirstBidAndAskOrders(srcToken != ETH_TOKEN_ADDRESS ? destToken : srcToken);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 428
    Result: Lived
    Original line:
                 if (srcToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (srcToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 436
    Result: Lived
    Original line:
                 if (srcToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (srcToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 466
    Result: Lived
    Original line:
                     if (offers[i].id == 0 || remainingSrcAmount == 0) { break; }

    Mutated line:
                     if (offers[i].id != 0 || remainingSrcAmount == 0) { break; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 466
    Result: Lived
    Original line:
                     if (offers[i].id == 0 || remainingSrcAmount == 0) { break; }

    Mutated line:
                     if (offers[i].id == 0 || remainingSrcAmount != 0) { break; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 465
    Result: Lived
    Original line:
                 for (uint i = 0; i < offers.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= offers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 476
    Result: Lived
    Original line:
                 require(remainingSrcAmount == 0, "takeMatchingOrders: did not take all src amount");

    Mutated line:
                 require(remainingSrcAmount != 0, "takeMatchingOrders: did not take all src amount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 480
    Result: Lived
    Original line:
                 require(newReserveBalance > lastReserveBalance, "takeMatchingOrders: newReserveBalance <= lastReserveBalance");

    Mutated line:
                 require(newReserveBalance >= lastReserveBalance, "takeMatchingOrders: newReserveBalance <= lastReserveBalance");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 499
    Result: Lived
    Original line:
                 if (tokenVal > MAX_QTY) { return (shouldUse, premiumBps); }

    Mutated line:
                 if (tokenVal >= MAX_QTY) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 512
    Result: Lived
    Original line:
                     if (address(this).balance < ethVal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (address(this).balance <= ethVal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 513
    Result: Lived
    Original line:
                     if (tokenBalance + tokenVal > inventoryData.maxTokenBal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance + tokenVal >= inventoryData.maxTokenBal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 509
    Result: Lived
    Original line:
                     if (tokenBalance < tokenVal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance <= tokenVal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 510
    Result: Lived
    Original line:
                     if (tokenBalance - tokenVal < inventoryData.minTokenBal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance - tokenVal <= inventoryData.minTokenBal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 530
    Result: Lived
    Original line:
                 return rate % 2 == (useInternalInventory ? 1 : 0)

    Mutated line:
                 return rate % 2 != (useInternalInventory ? 1 : 0)


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 536
    Result: Lived
    Original line:
                 require(val <= MAX_QTY, "valueAfterReducingFee: val > MAX_QTY");

    Mutated line:
                 require(val < MAX_QTY, "valueAfterReducingFee: val > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 541
    Result: Lived
    Original line:
                 require(val <= MAX_QTY, "valueAfterAddingPremium: val > MAX_QTY");

    Mutated line:
                 require(val < MAX_QTY, "valueAfterAddingPremium: val > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 561
    Result: Lived
    Original line:
                 IERC20 token = srcToken == wethToken ? dstToken : srcToken;

    Mutated line:
                 IERC20 token = srcToken != wethToken ? dstToken : srcToken;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 565
    Result: Lived
    Original line:
                     (srcToken == wethToken),

    Mutated line:
                     (srcToken != wethToken),


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 574
    Result: Lived
    Original line:
                 if (maxTraversedOrders == 0 || maxOrdersToTake == 0) {

    Mutated line:
                 if (maxTraversedOrders != 0 || maxOrdersToTake == 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 574
    Result: Lived
    Original line:
                 if (maxTraversedOrders == 0 || maxOrdersToTake == 0) {

    Mutated line:
                 if (maxTraversedOrders == 0 || maxOrdersToTake != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken != wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken == wethToken && bid.id != 0) || (dstToken == wethToken && ask.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken != wethToken && ask.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id != 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 585
    Result: Lived
    Original line:
                     offers[0] = srcToken == wethToken ? bid : ask;

    Mutated line:
                     offers[0] = srcToken != wethToken ? bid : ask;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 612
    Result: Lived
    Original line:
                     } else if ((maxOrdersToTake - numTakenOffer) > 1

    Mutated line:
                     } else if ((maxOrdersToTake - numTakenOffer) >= 1


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 617
    Result: Lived
    Original line:
                     } else if (offers[numTakenOffer].payAmount > biggestSkippedOffer.payAmount) {

    Mutated line:
                     } else if (offers[numTakenOffer].payAmount >= biggestSkippedOffer.payAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 592
    Result: Lived
    Original line:
                 for (; maxTraversedOrders > 0; --maxTraversedOrders) {

    Mutated line:
                 for (; maxTraversedOrders >= 0; --maxTraversedOrders) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 627
    Result: Lived
    Original line:
                 if (remainingSrcAmount > 0) totalDestAmount = 0;

    Mutated line:
                 if (remainingSrcAmount >= 0) totalDestAmount = 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 628
    Result: Lived
    Original line:
                 if (totalDestAmount == 0) offers = new OfferData[](0);

    Mutated line:
                 if (totalDestAmount != 0) offers = new OfferData[](0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 641
    Result: Lived
    Original line:
                 if (!isEthToToken && (ask.id == 0 || bid.id == 0)) {

    Mutated line:
                 if (!isEthToToken && (ask.id != 0 || bid.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 641
    Result: Lived
    Original line:
                 if (!isEthToToken && (ask.id == 0 || bid.id == 0)) {

    Mutated line:
                 if (!isEthToToken && (ask.id == 0 || bid.id != 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 662
    Result: Lived
    Original line:
                 if (basicData.minETHSupport > ethOrderSize) {

    Mutated line:
                 if (basicData.minETHSupport >= ethOrderSize) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id != 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id != 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount >= MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount >= MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount >= MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount >= MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 717
    Result: Lived
    Original line:
                 if (x1 <= x2) { return false; }

    Mutated line:
                 if (x1 < x2) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 723
    Result: Lived
    Original line:
                 if (BPS * (x1 - x2) <= x2 * minSpreadBps) { return false; }

    Mutated line:
                 if (BPS * (x1 - x2) < x2 * minSpreadBps) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 758
    Result: Lived
    Original line:
                 require(minSpreadBps < POW_2_32, "encodeInternalInventoryData: minSpreadBps is too big");

    Mutated line:
                 require(minSpreadBps <= POW_2_32, "encodeInternalInventoryData: minSpreadBps is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 759
    Result: Lived
    Original line:
                 require(premiumBps < POW_2_32, "encodeInternalInventoryData: premiumBps is too big");

    Mutated line:
                 require(premiumBps <= POW_2_32, "encodeInternalInventoryData: premiumBps is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 760
    Result: Lived
    Original line:
                 require(maxTokenBal < POW_2_96, "encodeInternalInventoryData: maxTokenBal is too big");

    Mutated line:
                 require(maxTokenBal <= POW_2_96, "encodeInternalInventoryData: maxTokenBal is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 761
    Result: Lived
    Original line:
                 require(minTokenBal < POW_2_96, "encodeInternalInventoryData: minTokenBal is too big");

    Mutated line:
                 require(minTokenBal <= POW_2_96, "encodeInternalInventoryData: minTokenBal is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 777
    Result: Lived
    Original line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;

    Mutated line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 != 0 ? false : true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 784
    Result: Lived
    Original line:
                 require(maxTakes < POW_2_32, "encodeTokenBasicData: maxTakes is too big");

    Mutated line:
                 require(maxTakes <= POW_2_32, "encodeTokenBasicData: maxTakes is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 785
    Result: Lived
    Original line:
                 require(maxTraverse < POW_2_32, "encodeTokenBasicData: maxTraverse is too big");

    Mutated line:
                 require(maxTraverse <= POW_2_32, "encodeTokenBasicData: maxTraverse is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 786
    Result: Lived
    Original line:
                 require(ethSize < POW_2_96, "encodeTokenBasicData: ethSize is too big");

    Mutated line:
                 require(ethSize <= POW_2_96, "encodeTokenBasicData: ethSize is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 805
    Result: Lived
    Original line:
                 require(minSizeY < POW_2_32, "encodeFactorData: minSizeY is too big");

    Mutated line:
                 require(minSizeY <= POW_2_32, "encodeFactorData: minSizeY is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 806
    Result: Lived
    Original line:
                 require(minSizeX < POW_2_32, "encodeFactorData: minSizeX is too big");

    Mutated line:
                 require(minSizeX <= POW_2_32, "encodeFactorData: minSizeX is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 807
    Result: Lived
    Original line:
                 require(takeY < POW_2_32, "encodeFactorData: takeY is too big");

    Mutated line:
                 require(takeY <= POW_2_32, "encodeFactorData: takeY is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 808
    Result: Lived
    Original line:
                 require(takeX < POW_2_32, "encodeFactorData: takeX is too big");

    Mutated line:
                 require(takeX <= POW_2_32, "encodeFactorData: takeX is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 809
    Result: Lived
    Original line:
                 require(traverseY < POW_2_32, "encodeFactorData: traverseY is too big");

    Mutated line:
                 require(traverseY <= POW_2_32, "encodeFactorData: traverseY is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 810
    Result: Lived
    Original line:
                 require(traverseX < POW_2_32, "encodeFactorData: traverseX is too big");

    Mutated line:
                 require(traverseX <= POW_2_32, "encodeFactorData: traverseX is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 71
    Result: Lived
    Original line:
                 require(_kyberNetwork != address(0), "constructor: kyberNetwork's address is missing");

    Mutated line:
                 require(_kyberNetwork == address(0), "constructor: kyberNetwork's address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 72
    Result: Lived
    Original line:
                 require(_otc != address(0), "constructor: otc's address is missing");

    Mutated line:
                 require(_otc == address(0), "constructor: otc's address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 73
    Result: Lived
    Original line:
                 require(_weth != address(0), "constructor: weth's address is missing");

    Mutated line:
                 require(_weth == address(0), "constructor: weth's address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 74
    Result: Lived
    Original line:
                 require(_feeBps < BPS, "constructor: fee >= bps");

    Mutated line:
                 require(_feeBps >= BPS, "constructor: fee >= bps");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 77
    Result: Lived
    Original line:
                 require(getDecimals(wethToken) == MAX_DECIMALS, "constructor: wethToken's decimals is not MAX_DECIMALS");

    Mutated line:
                 require(getDecimals(wethToken) != MAX_DECIMALS, "constructor: wethToken's decimals is not MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 99
    Result: Lived
    Original line:
                 if (srcQty == 0) { return 0; }

    Mutated line:
                 if (srcQty != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 101
    Result: Lived
    Original line:
                 IERC20 token = src == ETH_TOKEN_ADDRESS ? dest : src;

    Mutated line:
                 IERC20 token = src != ETH_TOKEN_ADDRESS ? dest : src;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 109
    Result: Lived
    Original line:
                 if (token == src && !checkValidSpread(bid, ask, false, 0)) { return 0; }

    Mutated line:
                 if (token != src && !checkValidSpread(bid, ask, false, 0)) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 114
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 120
    Result: Lived
    Original line:
                 if (offers.length == 0 || destQty == 0) { return 0; } // no offer or destQty == 0, return 0 for rate

    Mutated line:
                 if (offers.length != 0 || destQty == 0) { return 0; } // no offer or destQty == 0, return 0 for rate


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 120
    Result: Lived
    Original line:
                 if (offers.length == 0 || destQty == 0) { return 0; } // no offer or destQty == 0, return 0 for rate

    Mutated line:
                 if (offers.length == 0 || destQty != 0) { return 0; } // no offer or destQty == 0, return 0 for rate


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 127
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 176
    Result: Lived
    Original line:
                 require(msg.sender == kyberNetwork, "trade: not call from kyberNetwork's contract");

    Mutated line:
                 require(msg.sender != kyberNetwork, "trade: not call from kyberNetwork's contract");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 177
    Result: Lived
    Original line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");

    Mutated line:
                 require(srcToken != ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 177
    Result: Lived
    Original line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");

    Mutated line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken != ETH_TOKEN_ADDRESS, "trade: srcToken or destToken must be ETH");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 179
    Result: Lived
    Original line:
                 IERC20 token = srcToken == ETH_TOKEN_ADDRESS ? destToken : srcToken;

    Mutated line:
                 IERC20 token = srcToken != ETH_TOKEN_ADDRESS ? destToken : srcToken;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 236
    Result: Lived
    Original line:
                 require(_kyberNetwork != address(0), "setContracts: kyberNetwork's address is missing");

    Mutated line:
                 require(_kyberNetwork == address(0), "setContracts: kyberNetwork's address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 237
    Result: Lived
    Original line:
                 require(_otc != address(0), "setContracts: otc's address is missing");

    Mutated line:
                 require(_otc == address(0), "setContracts: otc's address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 241
    Result: Lived
    Original line:
                 if (_otc != address(otc)) {

    Mutated line:
                 if (_otc == address(otc)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 264
    Result: Lived
    Original line:
                 require(minToken < POW_2_96/2, "setInternalInventoryData: minToken > 2**95");

    Mutated line:
                 require(minToken >= POW_2_96/2, "setInternalInventoryData: minToken > 2**95");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 265
    Result: Lived
    Original line:
                 require(maxToken < POW_2_96, "setInternalInventoryData: maxToken > 2**96");

    Mutated line:
                 require(maxToken >= POW_2_96, "setInternalInventoryData: maxToken > 2**96");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 266
    Result: Lived
    Original line:
                 require(pricePremiumBps < POW_2_32, "setInternalInventoryData: pricePremiumBps > 2**32");

    Mutated line:
                 require(pricePremiumBps >= POW_2_32, "setInternalInventoryData: pricePremiumBps > 2**32");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 267
    Result: Lived
    Original line:
                 require(minSpreadBps < POW_2_32, "setInternalInventoryData: minSpreadBps > 2**32");

    Mutated line:
                 require(minSpreadBps >= POW_2_32, "setInternalInventoryData: minSpreadBps > 2**32");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 279
    Result: Lived
    Original line:
                 require(tokenAddr != address(0), "listToken: token's address is missing");

    Mutated line:
                 require(tokenAddr == address(0), "listToken: token's address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 281
    Result: Lived
    Original line:
                 require(getDecimals(token) == MAX_DECIMALS, "listToken: token's decimals is not MAX_DECIMALS");

    Mutated line:
                 require(getDecimals(token) != MAX_DECIMALS, "listToken: token's decimals is not MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 308
    Result: Lived
    Original line:
                 require(_feeBps < BPS, "setFeeBps: feeBps >= bps");

    Mutated line:
                 require(_feeBps >= BPS, "setFeeBps: feeBps >= bps");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 318
    Result: Lived
    Original line:
                 if (srcAmountToken == 0) {

    Mutated line:
                 if (srcAmountToken != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 340
    Result: Lived
    Original line:
                     if (offers[i].id == 0) {

    Mutated line:
                     if (offers[i].id != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 339
    Result: Lived
    Original line:
                 for (i; i < offers.length; i++) {

    Mutated line:
                 for (i; i >= offers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 346
    Result: Lived
    Original line:
                 for (i = 0; i < offerIds.length; i++) {

    Mutated line:
                 for (i = 0; i >= offerIds.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 391
    Result: Lived
    Original line:
                     require(conversionRate > 0, "doTrade: conversionRate is 0");

    Mutated line:
                     require(conversionRate <= 0, "doTrade: conversionRate is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 392
    Result: Lived
    Original line:
                     if (srcToken == ETH_TOKEN_ADDRESS)

    Mutated line:
                     if (srcToken != ETH_TOKEN_ADDRESS)


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 395
    Result: Lived
    Original line:
                         require(msg.value == 0, "doTrade: msg.value must be 0");

    Mutated line:
                         require(msg.value != 0, "doTrade: msg.value must be 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 393
    Result: Lived
    Original line:
                         require(msg.value == srcAmount, "doTrade: msg.value != srcAmount");

    Mutated line:
                         require(msg.value != srcAmount, "doTrade: msg.value != srcAmount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 399
    Result: Lived
    Original line:
                 require(userExpectedDestAmount > 0, "doTrade: userExpectedDestAmount == 0"); // sanity check

    Mutated line:
                 require(userExpectedDestAmount <= 0, "doTrade: userExpectedDestAmount == 0"); // sanity check


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 404
    Result: Lived
    Original line:
                 bool useInternalInventory = conversionRate % 2 == 1;

    Mutated line:
                 bool useInternalInventory = conversionRate % 2 != 1;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 408
    Result: Lived
    Original line:
                     if (srcToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                     if (srcToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 424
    Result: Lived
    Original line:
                 (bid, ask) = getFirstBidAndAskOrders(srcToken == ETH_TOKEN_ADDRESS ? destToken : srcToken);

    Mutated line:
                 (bid, ask) = getFirstBidAndAskOrders(srcToken != ETH_TOKEN_ADDRESS ? destToken : srcToken);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 428
    Result: Lived
    Original line:
                 if (srcToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (srcToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 434
    Result: Lived
    Original line:
                 require(actualDestAmount >= userExpectedDestAmount, "doTrade: actualDestAmount is less than userExpectedDestAmount");

    Mutated line:
                 require(actualDestAmount < userExpectedDestAmount, "doTrade: actualDestAmount is less than userExpectedDestAmount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 436
    Result: Lived
    Original line:
                 if (srcToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (srcToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 446
    Result: Lived
    Original line:
                     require(actualDestAmount >= userExpectedDestAmount, "doTrade: actualDestAmount is less than userExpectedDestAmount, token to eth");

    Mutated line:
                     require(actualDestAmount < userExpectedDestAmount, "doTrade: actualDestAmount is less than userExpectedDestAmount, token to eth");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 439
    Result: Lived
    Original line:
                     require(actualDestAmount >= userExpectedDestAmount, "doTrade: actualDestAmount is less than userExpectedDestAmount, eth to token");

    Mutated line:
                     require(actualDestAmount < userExpectedDestAmount, "doTrade: actualDestAmount is less than userExpectedDestAmount, eth to token");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 460
    Result: Lived
    Original line:
                 require(destToken != ETH_TOKEN_ADDRESS, "takeMatchingOrders: destToken is ETH");

    Mutated line:
                 require(destToken == ETH_TOKEN_ADDRESS, "takeMatchingOrders: destToken is ETH");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 466
    Result: Lived
    Original line:
                     if (offers[i].id == 0 || remainingSrcAmount == 0) { break; }

    Mutated line:
                     if (offers[i].id != 0 || remainingSrcAmount == 0) { break; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 466
    Result: Lived
    Original line:
                     if (offers[i].id == 0 || remainingSrcAmount == 0) { break; }

    Mutated line:
                     if (offers[i].id == 0 || remainingSrcAmount != 0) { break; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 465
    Result: Lived
    Original line:
                 for (uint i = 0; i < offers.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= offers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 476
    Result: Lived
    Original line:
                 require(remainingSrcAmount == 0, "takeMatchingOrders: did not take all src amount");

    Mutated line:
                 require(remainingSrcAmount != 0, "takeMatchingOrders: did not take all src amount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 480
    Result: Lived
    Original line:
                 require(newReserveBalance > lastReserveBalance, "takeMatchingOrders: newReserveBalance <= lastReserveBalance");

    Mutated line:
                 require(newReserveBalance <= lastReserveBalance, "takeMatchingOrders: newReserveBalance <= lastReserveBalance");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 499
    Result: Lived
    Original line:
                 if (tokenVal > MAX_QTY) { return (shouldUse, premiumBps); }

    Mutated line:
                 if (tokenVal <= MAX_QTY) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 512
    Result: Lived
    Original line:
                     if (address(this).balance < ethVal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (address(this).balance >= ethVal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 513
    Result: Lived
    Original line:
                     if (tokenBalance + tokenVal > inventoryData.maxTokenBal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance + tokenVal <= inventoryData.maxTokenBal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 509
    Result: Lived
    Original line:
                     if (tokenBalance < tokenVal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance >= tokenVal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 510
    Result: Lived
    Original line:
                     if (tokenBalance - tokenVal < inventoryData.minTokenBal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance - tokenVal >= inventoryData.minTokenBal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 530
    Result: Lived
    Original line:
                 return rate % 2 == (useInternalInventory ? 1 : 0)

    Mutated line:
                 return rate % 2 != (useInternalInventory ? 1 : 0)


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 536
    Result: Lived
    Original line:
                 require(val <= MAX_QTY, "valueAfterReducingFee: val > MAX_QTY");

    Mutated line:
                 require(val > MAX_QTY, "valueAfterReducingFee: val > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 541
    Result: Lived
    Original line:
                 require(val <= MAX_QTY, "valueAfterAddingPremium: val > MAX_QTY");

    Mutated line:
                 require(val > MAX_QTY, "valueAfterAddingPremium: val > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 561
    Result: Lived
    Original line:
                 IERC20 token = srcToken == wethToken ? dstToken : srcToken;

    Mutated line:
                 IERC20 token = srcToken != wethToken ? dstToken : srcToken;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 565
    Result: Lived
    Original line:
                     (srcToken == wethToken),

    Mutated line:
                     (srcToken != wethToken),


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 574
    Result: Lived
    Original line:
                 if (maxTraversedOrders == 0 || maxOrdersToTake == 0) {

    Mutated line:
                 if (maxTraversedOrders != 0 || maxOrdersToTake == 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 574
    Result: Lived
    Original line:
                 if (maxTraversedOrders == 0 || maxOrdersToTake == 0) {

    Mutated line:
                 if (maxTraversedOrders == 0 || maxOrdersToTake != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken != wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken == wethToken && bid.id != 0) || (dstToken == wethToken && ask.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken != wethToken && ask.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id == 0)) {

    Mutated line:
                 if ((srcToken == wethToken && bid.id == 0) || (dstToken == wethToken && ask.id != 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 585
    Result: Lived
    Original line:
                     offers[0] = srcToken == wethToken ? bid : ask;

    Mutated line:
                     offers[0] = srcToken != wethToken ? bid : ask;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 597
    Result: Lived
    Original line:
                     if (biggestSkippedOffer.payAmount >= remainingSrcAmount) {

    Mutated line:
                     if (biggestSkippedOffer.payAmount < remainingSrcAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 605
    Result: Lived
    Original line:
                     } else if (offers[numTakenOffer].payAmount >= remainingSrcAmount) {

    Mutated line:
                     } else if (offers[numTakenOffer].payAmount < remainingSrcAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 612
    Result: Lived
    Original line:
                     } else if ((maxOrdersToTake - numTakenOffer) > 1

    Mutated line:
                     } else if ((maxOrdersToTake - numTakenOffer) <= 1


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 613
    Result: Lived
    Original line:
                                 && offers[numTakenOffer].payAmount >= minPayAmount) {

    Mutated line:
                                 && offers[numTakenOffer].payAmount < minPayAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 617
    Result: Lived
    Original line:
                     } else if (offers[numTakenOffer].payAmount > biggestSkippedOffer.payAmount) {

    Mutated line:
                     } else if (offers[numTakenOffer].payAmount <= biggestSkippedOffer.payAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 592
    Result: Lived
    Original line:
                 for (; maxTraversedOrders > 0; --maxTraversedOrders) {

    Mutated line:
                 for (; maxTraversedOrders <= 0; --maxTraversedOrders) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 627
    Result: Lived
    Original line:
                 if (remainingSrcAmount > 0) totalDestAmount = 0;

    Mutated line:
                 if (remainingSrcAmount <= 0) totalDestAmount = 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 628
    Result: Lived
    Original line:
                 if (totalDestAmount == 0) offers = new OfferData[](0);

    Mutated line:
                 if (totalDestAmount != 0) offers = new OfferData[](0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 641
    Result: Lived
    Original line:
                 if (!isEthToToken && (ask.id == 0 || bid.id == 0)) {

    Mutated line:
                 if (!isEthToToken && (ask.id != 0 || bid.id == 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 641
    Result: Lived
    Original line:
                 if (!isEthToToken && (ask.id == 0 || bid.id == 0)) {

    Mutated line:
                 if (!isEthToToken && (ask.id == 0 || bid.id != 0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 662
    Result: Lived
    Original line:
                 if (basicData.minETHSupport > ethOrderSize) {

    Mutated line:
                 if (basicData.minETHSupport <= ethOrderSize) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id != 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id != 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount <= MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount <= MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount <= MAX_QTY || ask.payAmount > MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 709
    Result: Lived
    Original line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount > MAX_QTY) {

    Mutated line:
                 if (bid.id == 0 || ask.id == 0 || bid.buyAmount > MAX_QTY || bid.payAmount > MAX_QTY || ask.buyAmount > MAX_QTY || ask.payAmount <= MAX_QTY) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 717
    Result: Lived
    Original line:
                 if (x1 <= x2) { return false; }

    Mutated line:
                 if (x1 > x2) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 723
    Result: Lived
    Original line:
                 if (BPS * (x1 - x2) <= x2 * minSpreadBps) { return false; }

    Mutated line:
                 if (BPS * (x1 - x2) > x2 * minSpreadBps) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 758
    Result: Lived
    Original line:
                 require(minSpreadBps < POW_2_32, "encodeInternalInventoryData: minSpreadBps is too big");

    Mutated line:
                 require(minSpreadBps >= POW_2_32, "encodeInternalInventoryData: minSpreadBps is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 759
    Result: Lived
    Original line:
                 require(premiumBps < POW_2_32, "encodeInternalInventoryData: premiumBps is too big");

    Mutated line:
                 require(premiumBps >= POW_2_32, "encodeInternalInventoryData: premiumBps is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 760
    Result: Lived
    Original line:
                 require(maxTokenBal < POW_2_96, "encodeInternalInventoryData: maxTokenBal is too big");

    Mutated line:
                 require(maxTokenBal >= POW_2_96, "encodeInternalInventoryData: maxTokenBal is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 761
    Result: Lived
    Original line:
                 require(minTokenBal < POW_2_96, "encodeInternalInventoryData: minTokenBal is too big");

    Mutated line:
                 require(minTokenBal >= POW_2_96, "encodeInternalInventoryData: minTokenBal is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 777
    Result: Lived
    Original line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;

    Mutated line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 != 0 ? false : true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 784
    Result: Lived
    Original line:
                 require(maxTakes < POW_2_32, "encodeTokenBasicData: maxTakes is too big");

    Mutated line:
                 require(maxTakes >= POW_2_32, "encodeTokenBasicData: maxTakes is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 785
    Result: Lived
    Original line:
                 require(maxTraverse < POW_2_32, "encodeTokenBasicData: maxTraverse is too big");

    Mutated line:
                 require(maxTraverse >= POW_2_32, "encodeTokenBasicData: maxTraverse is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 786
    Result: Lived
    Original line:
                 require(ethSize < POW_2_96, "encodeTokenBasicData: ethSize is too big");

    Mutated line:
                 require(ethSize >= POW_2_96, "encodeTokenBasicData: ethSize is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 805
    Result: Lived
    Original line:
                 require(minSizeY < POW_2_32, "encodeFactorData: minSizeY is too big");

    Mutated line:
                 require(minSizeY >= POW_2_32, "encodeFactorData: minSizeY is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 806
    Result: Lived
    Original line:
                 require(minSizeX < POW_2_32, "encodeFactorData: minSizeX is too big");

    Mutated line:
                 require(minSizeX >= POW_2_32, "encodeFactorData: minSizeX is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 807
    Result: Lived
    Original line:
                 require(takeY < POW_2_32, "encodeFactorData: takeY is too big");

    Mutated line:
                 require(takeY >= POW_2_32, "encodeFactorData: takeY is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 808
    Result: Lived
    Original line:
                 require(takeX < POW_2_32, "encodeFactorData: takeX is too big");

    Mutated line:
                 require(takeX >= POW_2_32, "encodeFactorData: takeX is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 809
    Result: Lived
    Original line:
                 require(traverseY < POW_2_32, "encodeFactorData: traverseY is too big");

    Mutated line:
                 require(traverseY >= POW_2_32, "encodeFactorData: traverseY is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 810
    Result: Lived
    Original line:
                 require(traverseX < POW_2_32, "encodeFactorData: traverseX is too big");

    Mutated line:
                 require(traverseX >= POW_2_32, "encodeFactorData: traverseX is too big");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 264
    Result: Lived
    Original line:
                 require(minToken < POW_2_96/2, "setInternalInventoryData: minToken > 2**95");

    Mutated line:
                 require(minToken < POW_2_96 * 2, "setInternalInventoryData: minToken > 2**95");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 334
    Result: Lived
    Original line:
                 (destAmount, offers) = findBestOffers(dstToken, srcToken, (srcAmountToken * 10 ** 18), bid, ask);

    Mutated line:
                 (destAmount, offers) = findBestOffers(dstToken, srcToken, (srcAmountToken / 10 ** 18), bid, ask);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 336
    Result: Lived
    Original line:
                 destAmountToken = destAmount / 10 ** 18;

    Mutated line:
                 destAmountToken = destAmount * 10 ** 18;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 469
    Result: Lived
    Original line:
                     uint buyAmount = payAmount * offers[i].buyAmount / offers[i].payAmount;

    Mutated line:
                     uint buyAmount = payAmount * offers[i].buyAmount * offers[i].payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 469
    Result: Lived
    Original line:
                     uint buyAmount = payAmount * offers[i].buyAmount / offers[i].payAmount;

    Mutated line:
                     uint buyAmount = payAmount / offers[i].buyAmount / offers[i].payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 482
    Result: Lived
    Original line:
                 actualDestAmount = newReserveBalance - lastReserveBalance;

    Mutated line:
                 actualDestAmount = newReserveBalance + lastReserveBalance;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 513
    Result: Lived
    Original line:
                     if (tokenBalance + tokenVal > inventoryData.maxTokenBal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance - tokenVal > inventoryData.maxTokenBal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 510
    Result: Lived
    Original line:
                     if (tokenBalance - tokenVal < inventoryData.minTokenBal) { return (shouldUse, premiumBps); }

    Mutated line:
                     if (tokenBalance + tokenVal < inventoryData.minTokenBal) { return (shouldUse, premiumBps); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 532
    Result: Lived
    Original line:
                     : rate - 1;

    Mutated line:
                     : rate + 1;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 537
    Result: Lived
    Original line:
                 return ((BPS - feeBps) * val) / BPS;

    Mutated line:
                 return ((BPS - feeBps) * val) * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 537
    Result: Lived
    Original line:
                 return ((BPS - feeBps) * val) / BPS;

    Mutated line:
                 return ((BPS - feeBps) / val) / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 537
    Result: Lived
    Original line:
                 return ((BPS - feeBps) * val) / BPS;

    Mutated line:
                 return ((BPS + feeBps) * val) / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 542
    Result: Lived
    Original line:
                 return val * (BPS + premium) / BPS;

    Mutated line:
                 return val * (BPS + premium) * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 542
    Result: Lived
    Original line:
                 return val * (BPS + premium) / BPS;

    Mutated line:
                 return val / (BPS + premium) / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 542
    Result: Lived
    Original line:
                 return val * (BPS + premium) / BPS;

    Mutated line:
                 return val * (BPS - premium) / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 612
    Result: Lived
    Original line:
                     } else if ((maxOrdersToTake - numTakenOffer) > 1

    Mutated line:
                     } else if ((maxOrdersToTake + numTakenOffer) > 1


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 606
    Result: Lived
    Original line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount * offers[numTakenOffer].buyAmount / offers[numTakenOffer].payAmount;

    Mutated line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount * offers[numTakenOffer].buyAmount * offers[numTakenOffer].payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 606
    Result: Lived
    Original line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount * offers[numTakenOffer].buyAmount / offers[numTakenOffer].payAmount;

    Mutated line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount / offers[numTakenOffer].buyAmount / offers[numTakenOffer].payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 599
    Result: Lived
    Original line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount * biggestSkippedOffer.buyAmount / biggestSkippedOffer.payAmount;

    Mutated line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount * biggestSkippedOffer.buyAmount * biggestSkippedOffer.payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 599
    Result: Lived
    Original line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount * biggestSkippedOffer.buyAmount / biggestSkippedOffer.payAmount;

    Mutated line:
                         offers[numTakenOffer].buyAmount = remainingSrcAmount / biggestSkippedOffer.buyAmount / biggestSkippedOffer.payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 655
    Result: Lived
    Original line:
                     order0Buy = (ask.buyAmount + ask.payAmount * bid.payAmount / bid.buyAmount) / 2;

    Mutated line:
                     order0Buy = (ask.buyAmount + ask.payAmount * bid.payAmount / bid.buyAmount) * 2;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 655
    Result: Lived
    Original line:
                     order0Buy = (ask.buyAmount + ask.payAmount * bid.payAmount / bid.buyAmount) / 2;

    Mutated line:
                     order0Buy = (ask.buyAmount - ask.payAmount * bid.payAmount / bid.buyAmount) / 2;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 655
    Result: Lived
    Original line:
                     order0Buy = (ask.buyAmount + ask.payAmount * bid.payAmount / bid.buyAmount) / 2;

    Mutated line:
                     order0Buy = (ask.buyAmount + ask.payAmount * bid.payAmount * bid.buyAmount) / 2;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 655
    Result: Lived
    Original line:
                     order0Buy = (ask.buyAmount + ask.payAmount * bid.payAmount / bid.buyAmount) / 2;

    Mutated line:
                     order0Buy = (ask.buyAmount + ask.payAmount / bid.payAmount / bid.buyAmount) / 2;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 658
    Result: Lived
    Original line:
                 uint ethOrderSize = isEthToToken ? srcAmount : srcAmount * order0Buy / order0Pay;

    Mutated line:
                 uint ethOrderSize = isEthToToken ? srcAmount : srcAmount * order0Buy * order0Pay;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 658
    Result: Lived
    Original line:
                 uint ethOrderSize = isEthToToken ? srcAmount : srcAmount * order0Buy / order0Pay;

    Mutated line:
                 uint ethOrderSize = isEthToToken ? srcAmount : srcAmount / order0Buy / order0Pay;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 673
    Result: Lived
    Original line:
                 maxTraverse = (factorData.maxTraverseX * ethOrderSize / PRECISION + factorData.maxTraverseY) / tokenFactorBPS;

    Mutated line:
                 maxTraverse = (factorData.maxTraverseX * ethOrderSize / PRECISION + factorData.maxTraverseY) * tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 673
    Result: Lived
    Original line:
                 maxTraverse = (factorData.maxTraverseX * ethOrderSize / PRECISION + factorData.maxTraverseY) / tokenFactorBPS;

    Mutated line:
                 maxTraverse = (factorData.maxTraverseX * ethOrderSize / PRECISION - factorData.maxTraverseY) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 673
    Result: Lived
    Original line:
                 maxTraverse = (factorData.maxTraverseX * ethOrderSize / PRECISION + factorData.maxTraverseY) / tokenFactorBPS;

    Mutated line:
                 maxTraverse = (factorData.maxTraverseX * ethOrderSize * PRECISION + factorData.maxTraverseY) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 673
    Result: Lived
    Original line:
                 maxTraverse = (factorData.maxTraverseX * ethOrderSize / PRECISION + factorData.maxTraverseY) / tokenFactorBPS;

    Mutated line:
                 maxTraverse = (factorData.maxTraverseX / ethOrderSize / PRECISION + factorData.maxTraverseY) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 676
    Result: Lived
    Original line:
                 maxTakes = (factorData.maxTakeX * ethOrderSize / PRECISION + factorData.maxTakeY) / tokenFactorBPS;

    Mutated line:
                 maxTakes = (factorData.maxTakeX * ethOrderSize / PRECISION + factorData.maxTakeY) * tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 676
    Result: Lived
    Original line:
                 maxTakes = (factorData.maxTakeX * ethOrderSize / PRECISION + factorData.maxTakeY) / tokenFactorBPS;

    Mutated line:
                 maxTakes = (factorData.maxTakeX * ethOrderSize / PRECISION - factorData.maxTakeY) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 676
    Result: Lived
    Original line:
                 maxTakes = (factorData.maxTakeX * ethOrderSize / PRECISION + factorData.maxTakeY) / tokenFactorBPS;

    Mutated line:
                 maxTakes = (factorData.maxTakeX * ethOrderSize * PRECISION + factorData.maxTakeY) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 676
    Result: Lived
    Original line:
                 maxTakes = (factorData.maxTakeX * ethOrderSize / PRECISION + factorData.maxTakeY) / tokenFactorBPS;

    Mutated line:
                 maxTakes = (factorData.maxTakeX / ethOrderSize / PRECISION + factorData.maxTakeY) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 679
    Result: Lived
    Original line:
                 uint minETHAmount = (factorData.minOrderSizeX * ethOrderSize + factorData.minOrderSizeY * PRECISION) / tokenFactorBPS;

    Mutated line:
                 uint minETHAmount = (factorData.minOrderSizeX * ethOrderSize + factorData.minOrderSizeY * PRECISION) * tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 679
    Result: Lived
    Original line:
                 uint minETHAmount = (factorData.minOrderSizeX * ethOrderSize + factorData.minOrderSizeY * PRECISION) / tokenFactorBPS;

    Mutated line:
                 uint minETHAmount = (factorData.minOrderSizeX * ethOrderSize - factorData.minOrderSizeY * PRECISION) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 679
    Result: Lived
    Original line:
                 uint minETHAmount = (factorData.minOrderSizeX * ethOrderSize + factorData.minOrderSizeY * PRECISION) / tokenFactorBPS;

    Mutated line:
                 uint minETHAmount = (factorData.minOrderSizeX / ethOrderSize + factorData.minOrderSizeY * PRECISION) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 679
    Result: Lived
    Original line:
                 uint minETHAmount = (factorData.minOrderSizeX * ethOrderSize + factorData.minOrderSizeY * PRECISION) / tokenFactorBPS;

    Mutated line:
                 uint minETHAmount = (factorData.minOrderSizeX * ethOrderSize + factorData.minOrderSizeY / PRECISION) / tokenFactorBPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 682
    Result: Lived
    Original line:
                 minPayAmount = isEthToToken ? minETHAmount : minETHAmount * order0Pay / order0Buy;

    Mutated line:
                 minPayAmount = isEthToToken ? minETHAmount : minETHAmount * order0Pay * order0Buy;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 682
    Result: Lived
    Original line:
                 minPayAmount = isEthToToken ? minETHAmount : minETHAmount * order0Pay / order0Buy;

    Mutated line:
                 minPayAmount = isEthToToken ? minETHAmount : minETHAmount / order0Pay / order0Buy;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 713
    Result: Lived
    Original line:
                 uint x1 = ask.payAmount * bid.payAmount;

    Mutated line:
                 uint x1 = ask.payAmount / bid.payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 714
    Result: Lived
    Original line:
                 uint x2 = ask.buyAmount * bid.buyAmount;

    Mutated line:
                 uint x2 = ask.buyAmount / bid.buyAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 723
    Result: Lived
    Original line:
                 if (BPS * (x1 - x2) <= x2 * minSpreadBps) { return false; }

    Mutated line:
                 if (BPS / (x1 - x2) <= x2 * minSpreadBps) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 723
    Result: Lived
    Original line:
                 if (BPS * (x1 - x2) <= x2 * minSpreadBps) { return false; }

    Mutated line:
                 if (BPS * (x1 + x2) <= x2 * minSpreadBps) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 723
    Result: Lived
    Original line:
                 if (BPS * (x1 - x2) <= x2 * minSpreadBps) { return false; }

    Mutated line:
                 if (BPS * (x1 - x2) <= x2 / minSpreadBps) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 762
    Result: Lived
    Original line:
                 data = minSpreadBps & (POW_2_32 - 1);

    Mutated line:
                 data = minSpreadBps | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 762
    Result: Lived
    Original line:
                 data = minSpreadBps & (POW_2_32 - 1);

    Mutated line:
                 data = minSpreadBps & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 763
    Result: Lived
    Original line:
                 data |= (premiumBps & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (premiumBps & (POW_2_32 - 1)) / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 763
    Result: Lived
    Original line:
                 data |= (premiumBps & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (premiumBps | (POW_2_32 - 1)) * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 763
    Result: Lived
    Original line:
                 data |= (premiumBps & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (premiumBps & (POW_2_32 + 1)) * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 764
    Result: Lived
    Original line:
                 data |= (maxTokenBal & (POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (maxTokenBal & (POW_2_96 - 1)) * POW_2_32 / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 764
    Result: Lived
    Original line:
                 data |= (maxTokenBal & (POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (maxTokenBal & (POW_2_96 - 1)) / POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 764
    Result: Lived
    Original line:
                 data |= (maxTokenBal & (POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (maxTokenBal | (POW_2_96 - 1)) * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 764
    Result: Lived
    Original line:
                 data |= (maxTokenBal & (POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (maxTokenBal & (POW_2_96 + 1)) * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 765
    Result: Lived
    Original line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 765
    Result: Lived
    Original line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 / POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 765
    Result: Lived
    Original line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) / POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 765
    Result: Lived
    Original line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (minTokenBal | (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 765
    Result: Lived
    Original line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (minTokenBal & (POW_2_96 / 2 + 1)) * POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 765
    Result: Lived
    Original line:
                 data |= (minTokenBal & (POW_2_96 / 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (minTokenBal & (POW_2_96 * 2 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 766
    Result: Lived
    Original line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) * POW_2_96 * POW_2_32 / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 766
    Result: Lived
    Original line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) * POW_2_96 / POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 766
    Result: Lived
    Original line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) / POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 766
    Result: Lived
    Original line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (isEnabled ? 1 : 0) / (POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 766
    Result: Lived
    Original line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (isEnabled ? 1 : 0) * (POW_2_96 * 2) * POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 773
    Result: Lived
    Original line:
                 minSpreadBps = data & (POW_2_32 - 1);

    Mutated line:
                 minSpreadBps = data | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 773
    Result: Lived
    Original line:
                 minSpreadBps = data & (POW_2_32 - 1);

    Mutated line:
                 minSpreadBps = data & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 774
    Result: Lived
    Original line:
                 premiumBps = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 premiumBps = (data / POW_2_32) | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 774
    Result: Lived
    Original line:
                 premiumBps = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 premiumBps = (data * POW_2_32) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 774
    Result: Lived
    Original line:
                 premiumBps = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 premiumBps = (data / POW_2_32) & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 775
    Result: Lived
    Original line:
                 maxTokenBal = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 - 1);

    Mutated line:
                 maxTokenBal = (data / (POW_2_32 * POW_2_32)) | (POW_2_96 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 775
    Result: Lived
    Original line:
                 maxTokenBal = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 - 1);

    Mutated line:
                 maxTokenBal = (data * (POW_2_32 * POW_2_32)) & (POW_2_96 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 775
    Result: Lived
    Original line:
                 maxTokenBal = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 - 1);

    Mutated line:
                 maxTokenBal = (data / (POW_2_32 / POW_2_32)) & (POW_2_96 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 775
    Result: Lived
    Original line:
                 maxTokenBal = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 - 1);

    Mutated line:
                 maxTokenBal = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 776
    Result: Lived
    Original line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);

    Mutated line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) | (POW_2_96 / 2 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 776
    Result: Lived
    Original line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);

    Mutated line:
                 minTokenBal = (data * (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 776
    Result: Lived
    Original line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);

    Mutated line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 / POW_2_32)) & (POW_2_96 / 2 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 776
    Result: Lived
    Original line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);

    Mutated line:
                 minTokenBal = (data / (POW_2_96 / POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 776
    Result: Lived
    Original line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);

    Mutated line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 776
    Result: Lived
    Original line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 / 2 - 1);

    Mutated line:
                 minTokenBal = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_96 * 2 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 777
    Result: Lived
    Original line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;

    Mutated line:
                 isEnabled = (data * ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 777
    Result: Lived
    Original line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;

    Mutated line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 / POW_2_32)) % 2 == 0 ? false : true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 777
    Result: Lived
    Original line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;

    Mutated line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 / POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 777
    Result: Lived
    Original line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;

    Mutated line:
                 isEnabled = (data / ((POW_2_96 / 2) / POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 777
    Result: Lived
    Original line:
                 isEnabled = (data / ((POW_2_96 / 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;

    Mutated line:
                 isEnabled = (data / ((POW_2_96 * 2) * POW_2_96 * POW_2_32 * POW_2_32)) % 2 == 0 ? false : true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 787
    Result: Lived
    Original line:
                 data = maxTakes & (POW_2_32 - 1);

    Mutated line:
                 data = maxTakes | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 787
    Result: Lived
    Original line:
                 data = maxTakes & (POW_2_32 - 1);

    Mutated line:
                 data = maxTakes & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 788
    Result: Lived
    Original line:
                 data |= (maxTraverse & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (maxTraverse & (POW_2_32 - 1)) / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 788
    Result: Lived
    Original line:
                 data |= (maxTraverse & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (maxTraverse | (POW_2_32 - 1)) * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 788
    Result: Lived
    Original line:
                 data |= (maxTraverse & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (maxTraverse & (POW_2_32 + 1)) * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 789
    Result: Lived
    Original line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 - 1)) * POW_2_32 / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 789
    Result: Lived
    Original line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 - 1)) / POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 789
    Result: Lived
    Original line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (ethSize | (POW_2_96 * POW_2_96 - 1)) * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 789
    Result: Lived
    Original line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 + 1)) * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 789
    Result: Lived
    Original line:
                 data |= (ethSize & (POW_2_96 * POW_2_96 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (ethSize & (POW_2_96 / POW_2_96 - 1)) * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 796
    Result: Lived
    Original line:
                 maxTakes = data & (POW_2_32 - 1);

    Mutated line:
                 maxTakes = data | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 796
    Result: Lived
    Original line:
                 maxTakes = data & (POW_2_32 - 1);

    Mutated line:
                 maxTakes = data & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 797
    Result: Lived
    Original line:
                 maxTraverse = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 maxTraverse = (data / POW_2_32) | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 797
    Result: Lived
    Original line:
                 maxTraverse = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 maxTraverse = (data * POW_2_32) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 797
    Result: Lived
    Original line:
                 maxTraverse = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 maxTraverse = (data / POW_2_32) & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 798
    Result: Lived
    Original line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 * POW_2_96 - 1);

    Mutated line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) | (POW_2_96 * POW_2_96 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 798
    Result: Lived
    Original line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 * POW_2_96 - 1);

    Mutated line:
                 ethSize = (data * (POW_2_32 * POW_2_32)) & (POW_2_96 * POW_2_96 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 798
    Result: Lived
    Original line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 * POW_2_96 - 1);

    Mutated line:
                 ethSize = (data / (POW_2_32 / POW_2_32)) & (POW_2_96 * POW_2_96 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 798
    Result: Lived
    Original line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 * POW_2_96 - 1);

    Mutated line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 * POW_2_96 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 798
    Result: Lived
    Original line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 * POW_2_96 - 1);

    Mutated line:
                 ethSize = (data / (POW_2_32 * POW_2_32)) & (POW_2_96 / POW_2_96 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 811
    Result: Lived
    Original line:
                 data = (minSizeY & (POW_2_32 - 1));

    Mutated line:
                 data = (minSizeY | (POW_2_32 - 1));


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 811
    Result: Lived
    Original line:
                 data = (minSizeY & (POW_2_32 - 1));

    Mutated line:
                 data = (minSizeY & (POW_2_32 + 1));


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 812
    Result: Lived
    Original line:
                 data |= (minSizeX & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (minSizeX & (POW_2_32 - 1)) / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 812
    Result: Lived
    Original line:
                 data |= (minSizeX & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (minSizeX | (POW_2_32 - 1)) * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 812
    Result: Lived
    Original line:
                 data |= (minSizeX & (POW_2_32 - 1)) * POW_2_32;

    Mutated line:
                 data |= (minSizeX & (POW_2_32 + 1)) * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 813
    Result: Lived
    Original line:
                 data |= (takeY & (POW_2_32 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (takeY & (POW_2_32 - 1)) * POW_2_32 / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 813
    Result: Lived
    Original line:
                 data |= (takeY & (POW_2_32 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (takeY & (POW_2_32 - 1)) / POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 813
    Result: Lived
    Original line:
                 data |= (takeY & (POW_2_32 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (takeY | (POW_2_32 - 1)) * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 813
    Result: Lived
    Original line:
                 data |= (takeY & (POW_2_32 - 1)) * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (takeY & (POW_2_32 + 1)) * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 814
    Result: Lived
    Original line:
                 data |= (takeX & (POW_2_32 - 1)) * POW_2_96;

    Mutated line:
                 data |= (takeX & (POW_2_32 - 1)) / POW_2_96;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 814
    Result: Lived
    Original line:
                 data |= (takeX & (POW_2_32 - 1)) * POW_2_96;

    Mutated line:
                 data |= (takeX | (POW_2_32 - 1)) * POW_2_96;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 814
    Result: Lived
    Original line:
                 data |= (takeX & (POW_2_32 - 1)) * POW_2_96;

    Mutated line:
                 data |= (takeX & (POW_2_32 + 1)) * POW_2_96;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 815
    Result: Lived
    Original line:
                 data |= (traverseY & (POW_2_32 - 1)) * POW_2_96 * POW_2_32;

    Mutated line:
                 data |= (traverseY & (POW_2_32 - 1)) * POW_2_96 / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 815
    Result: Lived
    Original line:
                 data |= (traverseY & (POW_2_32 - 1)) * POW_2_96 * POW_2_32;

    Mutated line:
                 data |= (traverseY & (POW_2_32 - 1)) / POW_2_96 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 815
    Result: Lived
    Original line:
                 data |= (traverseY & (POW_2_32 - 1)) * POW_2_96 * POW_2_32;

    Mutated line:
                 data |= (traverseY | (POW_2_32 - 1)) * POW_2_96 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 815
    Result: Lived
    Original line:
                 data |= (traverseY & (POW_2_32 - 1)) * POW_2_96 * POW_2_32;

    Mutated line:
                 data |= (traverseY & (POW_2_32 + 1)) * POW_2_96 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 816
    Result: Lived
    Original line:
                 data |= (traverseX & (POW_2_32 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (traverseX & (POW_2_32 - 1)) * POW_2_96 * POW_2_32 / POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 816
    Result: Lived
    Original line:
                 data |= (traverseX & (POW_2_32 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (traverseX & (POW_2_32 - 1)) * POW_2_96 / POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 816
    Result: Lived
    Original line:
                 data |= (traverseX & (POW_2_32 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (traverseX & (POW_2_32 - 1)) / POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 816
    Result: Lived
    Original line:
                 data |= (traverseX & (POW_2_32 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (traverseX | (POW_2_32 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 816
    Result: Lived
    Original line:
                 data |= (traverseX & (POW_2_32 - 1)) * POW_2_96 * POW_2_32 * POW_2_32;

    Mutated line:
                 data |= (traverseX & (POW_2_32 + 1)) * POW_2_96 * POW_2_32 * POW_2_32;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 823
    Result: Lived
    Original line:
                 minSizeY = data & (POW_2_32 - 1);

    Mutated line:
                 minSizeY = data | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 823
    Result: Lived
    Original line:
                 minSizeY = data & (POW_2_32 - 1);

    Mutated line:
                 minSizeY = data & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 824
    Result: Lived
    Original line:
                 minSizeX = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 minSizeX = (data / POW_2_32) | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 824
    Result: Lived
    Original line:
                 minSizeX = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 minSizeX = (data * POW_2_32) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 824
    Result: Lived
    Original line:
                 minSizeX = (data / POW_2_32) & (POW_2_32 - 1);

    Mutated line:
                 minSizeX = (data / POW_2_32) & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 825
    Result: Lived
    Original line:
                 takeY = (data / (POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 takeY = (data / (POW_2_32 * POW_2_32)) | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 825
    Result: Lived
    Original line:
                 takeY = (data / (POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 takeY = (data * (POW_2_32 * POW_2_32)) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 825
    Result: Lived
    Original line:
                 takeY = (data / (POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 takeY = (data / (POW_2_32 / POW_2_32)) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 825
    Result: Lived
    Original line:
                 takeY = (data / (POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 takeY = (data / (POW_2_32 * POW_2_32)) & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 826
    Result: Lived
    Original line:
                 takeX = (data / POW_2_96) & (POW_2_32 - 1);

    Mutated line:
                 takeX = (data / POW_2_96) | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 826
    Result: Lived
    Original line:
                 takeX = (data / POW_2_96) & (POW_2_32 - 1);

    Mutated line:
                 takeX = (data * POW_2_96) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 826
    Result: Lived
    Original line:
                 takeX = (data / POW_2_96) & (POW_2_32 - 1);

    Mutated line:
                 takeX = (data / POW_2_96) & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 827
    Result: Lived
    Original line:
                 traverseY = (data / (POW_2_96 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseY = (data / (POW_2_96 * POW_2_32)) | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 827
    Result: Lived
    Original line:
                 traverseY = (data / (POW_2_96 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseY = (data * (POW_2_96 * POW_2_32)) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 827
    Result: Lived
    Original line:
                 traverseY = (data / (POW_2_96 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseY = (data / (POW_2_96 / POW_2_32)) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 827
    Result: Lived
    Original line:
                 traverseY = (data / (POW_2_96 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseY = (data / (POW_2_96 * POW_2_32)) & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 828
    Result: Lived
    Original line:
                 traverseX = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseX = (data / (POW_2_96 * POW_2_32 * POW_2_32)) | (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 828
    Result: Lived
    Original line:
                 traverseX = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseX = (data * (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 828
    Result: Lived
    Original line:
                 traverseX = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseX = (data / (POW_2_96 * POW_2_32 / POW_2_32)) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 828
    Result: Lived
    Original line:
                 traverseX = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseX = (data / (POW_2_96 / POW_2_32 * POW_2_32)) & (POW_2_32 - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 828
    Result: Lived
    Original line:
                 traverseX = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_32 - 1);

    Mutated line:
                 traverseX = (data / (POW_2_96 * POW_2_32 * POW_2_32)) & (POW_2_32 + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 472
    Result: Lived
    Original line:
                     remainingSrcAmount -= payAmount;

    Mutated line:
                     remainingSrcAmount += payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 614
    Result: Lived
    Original line:
                         totalDestAmount += offers[numTakenOffer].buyAmount;

    Mutated line:
                         totalDestAmount -= offers[numTakenOffer].buyAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 615
    Result: Lived
    Original line:
                         remainingSrcAmount -= offers[numTakenOffer].payAmount;

    Mutated line:
                         remainingSrcAmount += offers[numTakenOffer].payAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 608
    Result: Lived
    Original line:
                         totalDestAmount += offers[numTakenOffer].buyAmount;

    Mutated line:
                         totalDestAmount -= offers[numTakenOffer].buyAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 601
    Result: Lived
    Original line:
                         totalDestAmount += offers[numTakenOffer].buyAmount;

    Mutated line:
                         totalDestAmount -= offers[numTakenOffer].buyAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 69
    Result: Lived
    Original line:
                 public Withdrawable2(_admin)

    Mutated line:
                 public 


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 197
    Result: Lived
    Original line:
                 public onlyAdmin

    Mutated line:
                 public 


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 219
    Result: Lived
    Original line:
             function enableTrade() public onlyAdmin returns(bool) {

    Mutated line:
             function enableTrade() public  returns(bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 226
    Result: Lived
    Original line:
             function disableTrade() public onlyAlerter returns(bool) {

    Mutated line:
             function disableTrade() public  returns(bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 235
    Result: Lived
    Original line:
             function setContracts(address _kyberNetwork, address _otc) public onlyAdmin {

    Mutated line:
             function setContracts(address _kyberNetwork, address _otc) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 261
    Result: Lived
    Original line:
                 public onlyAdmin

    Mutated line:
                 public 


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 276
    Result: Lived
    Original line:
             function listToken(IERC20 token) public onlyAdmin {

    Mutated line:
             function listToken(IERC20 token) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 291
    Result: Lived
    Original line:
             function delistToken(IERC20 token) public onlyAdmin {

    Mutated line:
             function delistToken(IERC20 token) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/Eth2DaiReserve.sol
    Line nr: 307
    Result: Lived
    Original line:
             function setFeeBps(uint _feeBps) public onlyAdmin {

    Mutated line:
             function setFeeBps(uint _feeBps) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 46
    Result: Lived
    Original line:
                     splitAmount = (i == tradingReserves.splitValuesBps.length - 1) ?

    Mutated line:
                     splitAmount = (i != tradingReserves.splitValuesBps.length - 1) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 64
    Result: Lived
    Original line:
                         if (tradingReserves.rates[i] == 0) {

    Mutated line:
                         if (tradingReserves.rates[i] != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 53
    Result: Lived
    Original line:
                         if (tradingReserves.rates[i] == 0) {

    Mutated line:
                         if (tradingReserves.rates[i] != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 43
    Result: Lived
    Original line:
                 for (uint i = 0; i < tradingReserves.addresses.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= tradingReserves.addresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 94
    Result: Lived
    Original line:
                 if (src == dest) return (IKyberReserve(0), PRECISION, false);

    Mutated line:
                 if (src != dest) return (IKyberReserve(0), PRECISION, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 96
    Result: Lived
    Original line:
                 if (reserveArr.length == 0) return (IKyberReserve(0), 0, false);

    Mutated line:
                 if (reserveArr.length != 0) return (IKyberReserve(0), 0, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 109
    Result: Lived
    Original line:
                     if (src == ETH_TOKEN_ADDRESS && isFeePaying) {

    Mutated line:
                     if (src != ETH_TOKEN_ADDRESS && isFeePaying) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 110
    Result: Lived
    Original line:
                         require(srcAmount > networkFee, "fee >= e2t tradeAmt");

    Mutated line:
                         require(srcAmount >= networkFee, "fee >= e2t tradeAmt");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 118
    Result: Lived
    Original line:
                     destAmount = (dest == ETH_TOKEN_ADDRESS && isFeePaying) ?

    Mutated line:
                     destAmount = (dest != ETH_TOKEN_ADDRESS && isFeePaying) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 122
    Result: Lived
    Original line:
                     if (destAmount > bestReserve.destAmount) {

    Mutated line:
                     if (destAmount >= bestReserve.destAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 105
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserveArr.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= reserveArr.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 129
    Result: Lived
    Original line:
                 if (bestReserve.destAmount == 0) return (reserveArr[bestReserve.index], 0, false);

    Mutated line:
                 if (bestReserve.destAmount != 0) return (reserveArr[bestReserve.index], 0, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 138
    Result: Lived
    Original line:
                     if (i == bestReserve.index) continue;

    Mutated line:
                     if (i != bestReserve.index) continue;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 141
    Result: Lived
    Original line:
                     srcAmountWithFee = ((src == ETH_TOKEN_ADDRESS) && isFeePaying) ?

    Mutated line:
                     srcAmountWithFee = ((src != ETH_TOKEN_ADDRESS) && isFeePaying) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 145
    Result: Lived
    Original line:
                     destAmount = (dest == ETH_TOKEN_ADDRESS && isFeePaying) ?

    Mutated line:
                     destAmount = (dest != ETH_TOKEN_ADDRESS && isFeePaying) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 149
    Result: Lived
    Original line:
                     if (destAmount > bestReserve.destAmount) {

    Mutated line:
                     if (destAmount >= bestReserve.destAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 136
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserveArr.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= reserveArr.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 154
    Result: Lived
    Original line:
                 if (bestReserve.numRelevantReserves > 1) {

    Mutated line:
                 if (bestReserve.numRelevantReserves >= 1) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 166
    Result: Lived
    Original line:
                 if (changePriceInBps == 10000) { // taken all reserve's balance

    Mutated line:
                 if (changePriceInBps != 10000) { // taken all reserve's balance


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 167
    Result: Lived
    Original line:
                     destAmount = dest == ETH_TOKEN_ADDRESS ? address(reserve).balance : dest.balanceOf(address(reserve));

    Mutated line:
                     destAmount = dest != ETH_TOKEN_ADDRESS ? address(reserve).balance : dest.balanceOf(address(reserve));


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 46
    Result: Lived
    Original line:
                     splitAmount = (i == tradingReserves.splitValuesBps.length - 1) ?

    Mutated line:
                     splitAmount = (i != tradingReserves.splitValuesBps.length - 1) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 64
    Result: Lived
    Original line:
                         if (tradingReserves.rates[i] == 0) {

    Mutated line:
                         if (tradingReserves.rates[i] != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 53
    Result: Lived
    Original line:
                         if (tradingReserves.rates[i] == 0) {

    Mutated line:
                         if (tradingReserves.rates[i] != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 43
    Result: Lived
    Original line:
                 for (uint i = 0; i < tradingReserves.addresses.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= tradingReserves.addresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 94
    Result: Lived
    Original line:
                 if (src == dest) return (IKyberReserve(0), PRECISION, false);

    Mutated line:
                 if (src != dest) return (IKyberReserve(0), PRECISION, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 96
    Result: Lived
    Original line:
                 if (reserveArr.length == 0) return (IKyberReserve(0), 0, false);

    Mutated line:
                 if (reserveArr.length != 0) return (IKyberReserve(0), 0, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 109
    Result: Lived
    Original line:
                     if (src == ETH_TOKEN_ADDRESS && isFeePaying) {

    Mutated line:
                     if (src != ETH_TOKEN_ADDRESS && isFeePaying) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 110
    Result: Lived
    Original line:
                         require(srcAmount > networkFee, "fee >= e2t tradeAmt");

    Mutated line:
                         require(srcAmount <= networkFee, "fee >= e2t tradeAmt");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 118
    Result: Lived
    Original line:
                     destAmount = (dest == ETH_TOKEN_ADDRESS && isFeePaying) ?

    Mutated line:
                     destAmount = (dest != ETH_TOKEN_ADDRESS && isFeePaying) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 122
    Result: Lived
    Original line:
                     if (destAmount > bestReserve.destAmount) {

    Mutated line:
                     if (destAmount <= bestReserve.destAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 105
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserveArr.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= reserveArr.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 129
    Result: Lived
    Original line:
                 if (bestReserve.destAmount == 0) return (reserveArr[bestReserve.index], 0, false);

    Mutated line:
                 if (bestReserve.destAmount != 0) return (reserveArr[bestReserve.index], 0, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 138
    Result: Lived
    Original line:
                     if (i == bestReserve.index) continue;

    Mutated line:
                     if (i != bestReserve.index) continue;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 141
    Result: Lived
    Original line:
                     srcAmountWithFee = ((src == ETH_TOKEN_ADDRESS) && isFeePaying) ?

    Mutated line:
                     srcAmountWithFee = ((src != ETH_TOKEN_ADDRESS) && isFeePaying) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 145
    Result: Lived
    Original line:
                     destAmount = (dest == ETH_TOKEN_ADDRESS && isFeePaying) ?

    Mutated line:
                     destAmount = (dest != ETH_TOKEN_ADDRESS && isFeePaying) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 149
    Result: Lived
    Original line:
                     if (destAmount > bestReserve.destAmount) {

    Mutated line:
                     if (destAmount <= bestReserve.destAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 136
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserveArr.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= reserveArr.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 154
    Result: Lived
    Original line:
                 if (bestReserve.numRelevantReserves > 1) {

    Mutated line:
                 if (bestReserve.numRelevantReserves <= 1) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 166
    Result: Lived
    Original line:
                 if (changePriceInBps == 10000) { // taken all reserve's balance

    Mutated line:
                 if (changePriceInBps != 10000) { // taken all reserve's balance


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 167
    Result: Lived
    Original line:
                     destAmount = dest == ETH_TOKEN_ADDRESS ? address(reserve).balance : dest.balanceOf(address(reserve));

    Mutated line:
                     destAmount = dest != ETH_TOKEN_ADDRESS ? address(reserve).balance : dest.balanceOf(address(reserve));


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 46
    Result: Lived
    Original line:
                     splitAmount = (i == tradingReserves.splitValuesBps.length - 1) ?

    Mutated line:
                     splitAmount = (i == tradingReserves.splitValuesBps.length + 1) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 48
    Result: Lived
    Original line:
                                         tradingReserves.splitValuesBps[i] * tradeAmt / BPS;

    Mutated line:
                                         tradingReserves.splitValuesBps[i] * tradeAmt * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 48
    Result: Lived
    Original line:
                                         tradingReserves.splitValuesBps[i] * tradeAmt / BPS;

    Mutated line:
                                         tradingReserves.splitValuesBps[i] / tradeAmt / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 47
    Result: Lived
    Original line:
                                         (tradeAmt - amountSoFar) :

    Mutated line:
                                         (tradeAmt + amountSoFar) :


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 111
    Result: Lived
    Original line:
                         srcAmountWithFee = srcAmount - networkFee;

    Mutated line:
                         srcAmountWithFee = srcAmount + networkFee;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 119
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS :

    Mutated line:
                         destAmount * (BPS - networkFee) * BPS :


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 119
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS :

    Mutated line:
                         destAmount / (BPS - networkFee) / BPS :


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 119
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS :

    Mutated line:
                         destAmount * (BPS + networkFee) / BPS :


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 134
    Result: Lived
    Original line:
                 bestReserve.destAmount = bestReserve.destAmount * BPS / (BPS + negligibleRateDiffBps);

    Mutated line:
                 bestReserve.destAmount = bestReserve.destAmount * BPS * (BPS + negligibleRateDiffBps);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 134
    Result: Lived
    Original line:
                 bestReserve.destAmount = bestReserve.destAmount * BPS / (BPS + negligibleRateDiffBps);

    Mutated line:
                 bestReserve.destAmount = bestReserve.destAmount / BPS / (BPS + negligibleRateDiffBps);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 134
    Result: Lived
    Original line:
                 bestReserve.destAmount = bestReserve.destAmount * BPS / (BPS + negligibleRateDiffBps);

    Mutated line:
                 bestReserve.destAmount = bestReserve.destAmount * BPS / (BPS - negligibleRateDiffBps);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 142
    Result: Lived
    Original line:
                         srcAmount - networkFee :

    Mutated line:
                         srcAmount + networkFee :


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 146
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS :

    Mutated line:
                         destAmount * (BPS - networkFee) * BPS :


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 146
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS :

    Mutated line:
                         destAmount / (BPS - networkFee) / BPS :


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 146
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS :

    Mutated line:
                         destAmount * (BPS + networkFee) / BPS :


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 156
    Result: Lived
    Original line:
                     bestReserve.index = reserveCandidates[uint(blockhash(block.number-1)) % bestReserve.numRelevantReserves];

    Mutated line:
                     bestReserve.index = reserveCandidates[uint(blockhash(block.number + 1)) % bestReserve.numRelevantReserves];


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 176
    Result: Lived
    Original line:
                     rate = rate * uint(10000 + changePriceInBps) / 10000;

    Mutated line:
                     rate = rate * uint(10000 + changePriceInBps) * 10000;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 176
    Result: Lived
    Original line:
                     rate = rate * uint(10000 + changePriceInBps) / 10000;

    Mutated line:
                     rate = rate / uint(10000 + changePriceInBps) / 10000;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 176
    Result: Lived
    Original line:
                     rate = rate * uint(10000 + changePriceInBps) / 10000;

    Mutated line:
                     rate = rate * uint(10000 - changePriceInBps) / 10000;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 49
    Result: Lived
    Original line:
                     amountSoFar += splitAmount;

    Mutated line:
                     amountSoFar -= splitAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 67
    Result: Lived
    Original line:
                         destQty += destAmount;

    Mutated line:
                         destQty -= destAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 56
    Result: Lived
    Original line:
                         destQty += destAmount;

    Mutated line:
                         destQty -= destAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 58
    Result: Lived
    Original line:
                             feePayingReservesBps += tradingReserves.splitValuesBps[i];

    Mutated line:
                             feePayingReservesBps -= tradingReserves.splitValuesBps[i];


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockMatchingEngineManipulateRate.sol
    Line nr: 15
    Result: Lived
    Original line:
                 KyberMatchingEngine(_admin)

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockReserve.sol
    Line nr: 30
    Result: Lived
    Original line:
                 rate = (src == ETH_TOKEN_ADDRESS) ? buyTokenRates[address(dest)] : sellTokenRates[address(src)];

    Mutated line:
                 rate = (src != ETH_TOKEN_ADDRESS) ? buyTokenRates[address(dest)] : sellTokenRates[address(src)];


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockReserve.sol
    Line nr: 47
    Result: Lived
    Original line:
                 if (srcToken == ETH_TOKEN_ADDRESS)

    Mutated line:
                 if (srcToken != ETH_TOKEN_ADDRESS)


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockReserve.sol
    Line nr: 50
    Result: Lived
    Original line:
                     require(msg.value == 0, "ETH was sent for token -> ETH trade");

    Mutated line:
                     require(msg.value != 0, "ETH was sent for token -> ETH trade");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockReserve.sol
    Line nr: 48
    Result: Lived
    Original line:
                     require(msg.value == srcAmount, "ETH sent != srcAmount");

    Mutated line:
                     require(msg.value != srcAmount, "ETH sent != srcAmount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockReserve.sol
    Line nr: 62
    Result: Lived
    Original line:
                 if (destToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (destToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockReserve.sol
    Line nr: 30
    Result: Lived
    Original line:
                 rate = (src == ETH_TOKEN_ADDRESS) ? buyTokenRates[address(dest)] : sellTokenRates[address(src)];

    Mutated line:
                 rate = (src != ETH_TOKEN_ADDRESS) ? buyTokenRates[address(dest)] : sellTokenRates[address(src)];


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockReserve.sol
    Line nr: 47
    Result: Lived
    Original line:
                 if (srcToken == ETH_TOKEN_ADDRESS)

    Mutated line:
                 if (srcToken != ETH_TOKEN_ADDRESS)


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockReserve.sol
    Line nr: 50
    Result: Lived
    Original line:
                     require(msg.value == 0, "ETH was sent for token -> ETH trade");

    Mutated line:
                     require(msg.value != 0, "ETH was sent for token -> ETH trade");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockReserve.sol
    Line nr: 48
    Result: Lived
    Original line:
                     require(msg.value == srcAmount, "ETH sent != srcAmount");

    Mutated line:
                     require(msg.value != srcAmount, "ETH sent != srcAmount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockReserve.sol
    Line nr: 57
    Result: Lived
    Original line:
                 if (srcToken != ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (srcToken == ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockReserve.sol
    Line nr: 62
    Result: Lived
    Original line:
                 if (destToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (destToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/WethToken.sol
    Line nr: 19
    Result: Lived
    Original line:
                 require(balances[msg.sender] >= wad);

    Mutated line:
                 require(balances[msg.sender] < wad);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/WethToken.sol
    Line nr: 12
    Result: Lived
    Original line:
                 balances[msg.sender] += msg.value;

    Mutated line:
                 balances[msg.sender] -= msg.value;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/WethToken.sol
    Line nr: 20
    Result: Lived
    Original line:
                 balances[msg.sender] -= wad;

    Mutated line:
                 balances[msg.sender] += wad;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/WethToken.sol
    Line nr: 7
    Result: Lived
    Original line:
             constructor(string memory _name, string memory _symbol, uint _decimals) Token(_name, _symbol, _decimals) public {}

    Mutated line:
             constructor(string memory _name, string memory _symbol, uint _decimals)  public {}


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeERC20.sol
    Line nr: 32
    Result: Lived
    Original line:
                 require((value == 0) || (token.allowance(address(this), spender) == 0),

    Mutated line:
                 require((value != 0) || (token.allowance(address(this), spender) == 0),


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeERC20.sol
    Line nr: 32
    Result: Lived
    Original line:
                 require((value == 0) || (token.allowance(address(this), spender) == 0),

    Mutated line:
                 require((value == 0) || (token.allowance(address(this), spender) != 0),


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeERC20.sol
    Line nr: 69
    Result: Lived
    Original line:
                 if (returndata.length > 0) { // Return data is optional

    Mutated line:
                 if (returndata.length >= 0) { // Return data is optional


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeERC20.sol
    Line nr: 32
    Result: Lived
    Original line:
                 require((value == 0) || (token.allowance(address(this), spender) == 0),

    Mutated line:
                 require((value != 0) || (token.allowance(address(this), spender) == 0),


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeERC20.sol
    Line nr: 32
    Result: Lived
    Original line:
                 require((value == 0) || (token.allowance(address(this), spender) == 0),

    Mutated line:
                 require((value == 0) || (token.allowance(address(this), spender) != 0),


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeERC20.sol
    Line nr: 69
    Result: Lived
    Original line:
                 if (returndata.length > 0) { // Return data is optional

    Mutated line:
                 if (returndata.length <= 0) { // Return data is optional


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeERC20.sol
    Line nr: 20
    Result: Lived
    Original line:
                 callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeERC20.sol
    Line nr: 24
    Result: Lived
    Original line:
                 callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeERC20.sol
    Line nr: 35
    Result: Lived
    Original line:
                 callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeERC20.sol
    Line nr: 40
    Result: Lived
    Original line:
                 callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeERC20.sol
    Line nr: 45
    Result: Lived
    Original line:
                 callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 43
    Result: Lived
    Original line:
                     if (sellOffers[i].id == id) {

    Mutated line:
                     if (sellOffers[i].id != id) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 42
    Result: Lived
    Original line:
                 for(uint i = 0; i < sellOffers.length; i++) {

    Mutated line:
                 for(uint i = 0; i <= sellOffers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 48
    Result: Lived
    Original line:
                     if (buyOffers[i].id == id) {

    Mutated line:
                     if (buyOffers[i].id != id) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 47
    Result: Lived
    Original line:
                 for(uint i = 0; i < buyOffers.length; i++) {

    Mutated line:
                 for(uint i = 0; i <= buyOffers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 56
    Result: Lived
    Original line:
                 if (offerSellGem == daiToken && offerBuyGem != wethToken) { return 0; }

    Mutated line:
                 if (offerSellGem != daiToken && offerBuyGem != wethToken) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 57
    Result: Lived
    Original line:
                 if (offerSellGem == wethToken && offerBuyGem != daiToken) { return 0; }

    Mutated line:
                 if (offerSellGem != wethToken && offerBuyGem != daiToken) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 58
    Result: Lived
    Original line:
                 if (offerSellGem == daiToken) {

    Mutated line:
                 if (offerSellGem != daiToken) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 60
    Result: Lived
    Original line:
                     if (buyOffers.length == 0) { return 0; }

    Mutated line:
                     if (buyOffers.length != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 63
    Result: Lived
    Original line:
                 if (sellOffers.length == 0) { return 0; }

    Mutated line:
                 if (sellOffers.length != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 70
    Result: Lived
    Original line:
                     if (sellOffers[i].id == id) {

    Mutated line:
                     if (sellOffers[i].id != id) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 71
    Result: Lived
    Original line:
                         if (i + 1 < sellOffers.length) {

    Mutated line:
                         if (i + 1 <= sellOffers.length) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 69
    Result: Lived
    Original line:
                 for(uint i = 0; i < sellOffers.length; i++) {

    Mutated line:
                 for(uint i = 0; i <= sellOffers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 78
    Result: Lived
    Original line:
                     if (buyOffers[i].id == id) {

    Mutated line:
                     if (buyOffers[i].id != id) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 79
    Result: Lived
    Original line:
                         if (i + 1 < buyOffers.length) {

    Mutated line:
                         if (i + 1 <= buyOffers.length) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 77
    Result: Lived
    Original line:
                 for(uint i = 0; i < buyOffers.length; i++) {

    Mutated line:
                 for(uint i = 0; i <= buyOffers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 98
    Result: Lived
    Original line:
                 require(uint128(takerBuyAmount) == takerBuyAmount);

    Mutated line:
                 require(uint128(takerBuyAmount) != takerBuyAmount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 99
    Result: Lived
    Original line:
                 require(uint128(takerPayAmount) == takerPayAmount);

    Mutated line:
                 require(uint128(takerPayAmount) != takerPayAmount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 43
    Result: Lived
    Original line:
                     if (sellOffers[i].id == id) {

    Mutated line:
                     if (sellOffers[i].id != id) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 42
    Result: Lived
    Original line:
                 for(uint i = 0; i < sellOffers.length; i++) {

    Mutated line:
                 for(uint i = 0; i >= sellOffers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 48
    Result: Lived
    Original line:
                     if (buyOffers[i].id == id) {

    Mutated line:
                     if (buyOffers[i].id != id) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 47
    Result: Lived
    Original line:
                 for(uint i = 0; i < buyOffers.length; i++) {

    Mutated line:
                 for(uint i = 0; i >= buyOffers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 56
    Result: Lived
    Original line:
                 if (offerSellGem == daiToken && offerBuyGem != wethToken) { return 0; }

    Mutated line:
                 if (offerSellGem != daiToken && offerBuyGem != wethToken) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 56
    Result: Lived
    Original line:
                 if (offerSellGem == daiToken && offerBuyGem != wethToken) { return 0; }

    Mutated line:
                 if (offerSellGem == daiToken && offerBuyGem == wethToken) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 57
    Result: Lived
    Original line:
                 if (offerSellGem == wethToken && offerBuyGem != daiToken) { return 0; }

    Mutated line:
                 if (offerSellGem != wethToken && offerBuyGem != daiToken) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 57
    Result: Lived
    Original line:
                 if (offerSellGem == wethToken && offerBuyGem != daiToken) { return 0; }

    Mutated line:
                 if (offerSellGem == wethToken && offerBuyGem == daiToken) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 58
    Result: Lived
    Original line:
                 if (offerSellGem == daiToken) {

    Mutated line:
                 if (offerSellGem != daiToken) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 60
    Result: Lived
    Original line:
                     if (buyOffers.length == 0) { return 0; }

    Mutated line:
                     if (buyOffers.length != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 63
    Result: Lived
    Original line:
                 if (sellOffers.length == 0) { return 0; }

    Mutated line:
                 if (sellOffers.length != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 70
    Result: Lived
    Original line:
                     if (sellOffers[i].id == id) {

    Mutated line:
                     if (sellOffers[i].id != id) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 71
    Result: Lived
    Original line:
                         if (i + 1 < sellOffers.length) {

    Mutated line:
                         if (i + 1 >= sellOffers.length) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 69
    Result: Lived
    Original line:
                 for(uint i = 0; i < sellOffers.length; i++) {

    Mutated line:
                 for(uint i = 0; i >= sellOffers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 78
    Result: Lived
    Original line:
                     if (buyOffers[i].id == id) {

    Mutated line:
                     if (buyOffers[i].id != id) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 79
    Result: Lived
    Original line:
                         if (i + 1 < buyOffers.length) {

    Mutated line:
                         if (i + 1 >= buyOffers.length) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 77
    Result: Lived
    Original line:
                 for(uint i = 0; i < buyOffers.length; i++) {

    Mutated line:
                 for(uint i = 0; i >= buyOffers.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 98
    Result: Lived
    Original line:
                 require(uint128(takerBuyAmount) == takerBuyAmount);

    Mutated line:
                 require(uint128(takerBuyAmount) != takerBuyAmount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 99
    Result: Lived
    Original line:
                 require(uint128(takerPayAmount) == takerPayAmount);

    Mutated line:
                 require(uint128(takerPayAmount) != takerPayAmount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 71
    Result: Lived
    Original line:
                         if (i + 1 < sellOffers.length) {

    Mutated line:
                         if (i - 1 < sellOffers.length) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 72
    Result: Lived
    Original line:
                             return sellOffers[i + 1].id;

    Mutated line:
                             return sellOffers[i - 1].id;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 79
    Result: Lived
    Original line:
                         if (i + 1 < buyOffers.length) {

    Mutated line:
                         if (i - 1 < buyOffers.length) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 80
    Result: Lived
    Original line:
                             return buyOffers[i + 1].id;

    Mutated line:
                             return buyOffers[i - 1].id;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 96
    Result: Lived
    Original line:
                 uint takerPayAmount = takerBuyAmount * offerBuyAmt / offerPayAmt;

    Mutated line:
                 uint takerPayAmount = takerBuyAmount * offerBuyAmt * offerPayAmt;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 96
    Result: Lived
    Original line:
                 uint takerPayAmount = takerBuyAmount * offerBuyAmt / offerPayAmt;

    Mutated line:
                 uint takerPayAmount = takerBuyAmount / offerBuyAmt / offerPayAmt;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/MockOtcOrderbook.sol
    Line nr: 100
    Result: Lived
    Original line:
                 buy(offerBuyGem, takerPayAmount, offerPayGem, takerBuyAmount);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(msg.sender == campaignCreator, "only campaign creator");

    Mutated line:
                 require(msg.sender != campaignCreator, "only campaign creator");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 59
    Result: Lived
    Original line:
                 require(pendingCampCreator == msg.sender, "only pending campaign creator");

    Mutated line:
                 require(pendingCampCreator != msg.sender, "only pending campaign creator");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 146
    Result: Lived
    Original line:
                 require(_epochPeriod > 0, "ctor: epoch period is 0");

    Mutated line:
                 require(_epochPeriod >= 0, "ctor: epoch period is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 153
    Result: Lived
    Original line:
                 require(_defaultNetworkFeeBps < BPS / 2, "ctor: network fee high");

    Mutated line:
                 require(_defaultNetworkFeeBps <= BPS / 2, "ctor: network fee high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 156
    Result: Lived
    Original line:
                 require(staking.EPOCH_PERIOD_BLOCKS() == _epochPeriod, "ctor: diff epoch period");

    Mutated line:
                 require(staking.EPOCH_PERIOD_BLOCKS() != _epochPeriod, "ctor: diff epoch period");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 157
    Result: Lived
    Original line:
                 require(staking.FIRST_EPOCH_START_BLOCK() == _startBlock, "ctor: diff start block");

    Mutated line:
                 require(staking.FIRST_EPOCH_START_BLOCK() != _startBlock, "ctor: diff start block");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 169
    Result: Lived
    Original line:
                 require(msg.sender == address(staking), "only staking contract");

    Mutated line:
                 require(msg.sender != address(staking), "only staking contract");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 180
    Result: Lived
    Original line:
                 if (reduceAmount == 0) { return false; }

    Mutated line:
                 if (reduceAmount != 0) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 186
    Result: Lived
    Original line:
                 if (numVotes == 0) { return true; }

    Mutated line:
                 if (numVotes != 0) { return true; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 197
    Result: Lived
    Original line:
                     if (votedOption > 0 && campaignData[campID].endBlock >= block.number) {

    Mutated line:
                     if (votedOption >= 0 && campaignData[campID].endBlock >= block.number) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 193
    Result: Lived
    Original line:
                 for (uint i = 0; i < campIDs.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= campIDs.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 237
    Result: Lived
    Original line:
                     epochCampaigns[campEpoch].length < MAX_EPOCH_CAMPS,

    Mutated line:
                     epochCampaigns[campEpoch].length <= MAX_EPOCH_CAMPS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 248
    Result: Lived
    Original line:
                 if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 250
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 251
    Result: Lived
    Original line:
                     require(brrCampaign[campEpoch] == 0, "newCampaign: alr had brr for this epoch");

    Mutated line:
                     require(brrCampaign[campEpoch] != 0, "newCampaign: alr had brr for this epoch");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 249
    Result: Lived
    Original line:
                     require(networkFeeCamp[campEpoch] == 0, "newCampaign: alr had network fee for this epoch");

    Mutated line:
                     require(networkFeeCamp[campEpoch] != 0, "newCampaign: alr had network fee for this epoch");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 261
    Result: Lived
    Original line:
                 if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 263
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 306
    Result: Lived
    Original line:
                 require(camp.startBlock > block.number, "cancelCampaign: campaign alr started");

    Mutated line:
                 require(camp.startBlock >= block.number, "cancelCampaign: campaign alr started");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 312
    Result: Lived
    Original line:
                 if (camp.campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (camp.campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 314
    Result: Lived
    Original line:
                 } else if (camp.campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (camp.campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 323
    Result: Lived
    Original line:
                     if (campIDs[i] == campID) {

    Mutated line:
                     if (campIDs[i] != campID) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 322
    Result: Lived
    Original line:
                 for (uint i = 0; i < campIDs.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= campIDs.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 350
    Result: Lived
    Original line:
                 uint totalStake = dAddress == staker ? stake.add(dStake) : dStake;

    Mutated line:
                 uint totalStake = dAddress != staker ? stake.add(dStake) : dStake;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 353
    Result: Lived
    Original line:
                 if (lastVotedOption == 0) {

    Mutated line:
                 if (lastVotedOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 383
    Result: Lived
    Original line:
                 require(epoch < curEpoch, "claimReward: only for past epochs");

    Mutated line:
                 require(epoch <= curEpoch, "claimReward: only for past epochs");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 387
    Result: Lived
    Original line:
                 require(perInPrecision > 0, "claimReward: No reward");

    Mutated line:
                 require(perInPrecision >= 0, "claimReward: No reward");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 408
    Result: Lived
    Original line:
                 if (curEpoch == 0) {

    Mutated line:
                 if (curEpoch != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 413
    Result: Lived
    Original line:
                 if (campID == 0) {

    Mutated line:
                 if (campID != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 421
    Result: Lived
    Original line:
                 if (winningOption == 0) {

    Mutated line:
                 if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 442
    Result: Lived
    Original line:
                 if (epoch > 0) {

    Mutated line:
                 if (epoch >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 447
    Result: Lived
    Original line:
                         if (winningOption == 0) {

    Mutated line:
                         if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 469
    Result: Lived
    Original line:
                 return totalEpochPoints[epoch] == 0;

    Mutated line:
                 return totalEpochPoints[epoch] != 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 494
    Result: Lived
    Original line:
                 if (votes.length == 0) {

    Mutated line:
                 if (votes.length != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 499
    Result: Lived
    Original line:
                 for (uint i = 0; i < voteCounts.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= voteCounts.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 520
    Result: Lived
    Original line:
                 if (camp.endBlock == 0 || camp.endBlock > block.number) { return (0, 0); }

    Mutated line:
                 if (camp.endBlock != 0 || camp.endBlock > block.number) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 520
    Result: Lived
    Original line:
                 if (camp.endBlock == 0 || camp.endBlock > block.number) { return (0, 0); }

    Mutated line:
                 if (camp.endBlock == 0 || camp.endBlock >= block.number) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 524
    Result: Lived
    Original line:
                 if (totalSupply == 0) { return (0, 0); }

    Mutated line:
                 if (totalSupply != 0) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 532
    Result: Lived
    Original line:
                     if (voteCounts[i] > maxVotedCount) {

    Mutated line:
                     if (voteCounts[i] >= maxVotedCount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 535
    Result: Lived
    Original line:
                     } else if (voteCounts[i] == maxVotedCount) {

    Mutated line:
                     } else if (voteCounts[i] != maxVotedCount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 531
    Result: Lived
    Original line:
                 for (uint i = 1; i < voteCounts.length; i++) {

    Mutated line:
                 for (uint i = 1; i <= voteCounts.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 540
    Result: Lived
    Original line:
                 if (winningOption == 0) { return (0, 0); }

    Mutated line:
                 if (winningOption != 0) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 549
    Result: Lived
    Original line:
                 if (formulaData.minPercentageInPrecision > votedPercentage) { return (0, 0); }

    Mutated line:
                 if (formulaData.minPercentageInPrecision >= votedPercentage) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 553
    Result: Lived
    Original line:
                 if (x <= formulaData.cInPrecision) {

    Mutated line:
                 if (x < formulaData.cInPrecision) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 557
    Result: Lived
    Original line:
                     if (maxVotedCount.mul(PRECISION) < y.mul(totalVotes)) { return (0, 0); }

    Mutated line:
                     if (maxVotedCount.mul(PRECISION) <= y.mul(totalVotes)) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 572
    Result: Lived
    Original line:
                 if (curEpoch == 0) {

    Mutated line:
                 if (curEpoch != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 576
    Result: Lived
    Original line:
                 if (campID == 0) {

    Mutated line:
                 if (campID != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 583
    Result: Lived
    Original line:
                 if (winningOption == 0) {

    Mutated line:
                 if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 596
    Result: Lived
    Original line:
                 if (epoch > curEpoch) { return 0; }

    Mutated line:
                 if (epoch >= curEpoch) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 600
    Result: Lived
    Original line:
                 if (numVotes == 0) { return 0; }

    Mutated line:
                 if (numVotes != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 603
    Result: Lived
    Original line:
                 uint totalStake = delegatedAddr == staker ? stake.add(delegatedStake) : delegatedStake;

    Mutated line:
                 uint totalStake = delegatedAddr != staker ? stake.add(delegatedStake) : delegatedStake;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 604
    Result: Lived
    Original line:
                 if (totalStake == 0) { return 0; }

    Mutated line:
                 if (totalStake != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 608
    Result: Lived
    Original line:
                 if (totalPts == 0) { return 0; }

    Mutated line:
                 if (totalPts != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 610
    Result: Lived
    Original line:
                 if (points > totalPts) { return 0; }

    Mutated line:
                 if (points >= totalPts) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 631
    Result: Lived
    Original line:
                 if (epoch > 0) {

    Mutated line:
                 if (epoch >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 636
    Result: Lived
    Original line:
                         if (winningOption == 0) {

    Mutated line:
                         if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 664
    Result: Lived
    Original line:
                 require(rewardInBps.add(rebateInBps) <= BPS, "reward plus rebate high");

    Mutated line:
                 require(rewardInBps.add(rebateInBps) < BPS, "reward plus rebate high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 694
    Result: Lived
    Original line:
                     startEpoch == endEpoch,

    Mutated line:
                     startEpoch != endEpoch,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 699
    Result: Lived
    Original line:
                     startEpoch <= currentEpoch.add(1),

    Mutated line:
                     startEpoch < currentEpoch.add(1),


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 706
    Result: Lived
    Original line:
                     numOptions > 1 && numOptions <= MAX_CAMP_OPTIONS,

    Mutated line:
                     numOptions >= 1 && numOptions <= MAX_CAMP_OPTIONS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 706
    Result: Lived
    Original line:
                     numOptions > 1 && numOptions <= MAX_CAMP_OPTIONS,

    Mutated line:
                     numOptions > 1 && numOptions < MAX_CAMP_OPTIONS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 711
    Result: Lived
    Original line:
                 if (campType == CampaignType.GENERAL) {

    Mutated line:
                 if (campType != CampaignType.GENERAL) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 719
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 } else if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 735
    Result: Lived
    Original line:
                             rewardInBps.add(rebateInBps) <= BPS,

    Mutated line:
                             rewardInBps.add(rebateInBps) < BPS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 731
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i <= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 725
    Result: Lived
    Original line:
                             options[i] < BPS / 2,

    Mutated line:
                             options[i] <= BPS / 2,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 721
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i <= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 715
    Result: Lived
    Original line:
                             options[i] > 0,

    Mutated line:
                             options[i] >= 0,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 713
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i <= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 743
    Result: Lived
    Original line:
                     minPercentageInPrecision <= PRECISION,

    Mutated line:
                     minPercentageInPrecision < PRECISION,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 749
    Result: Lived
    Original line:
                     cInPrecision <= POWER_128,

    Mutated line:
                     cInPrecision < POWER_128,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 754
    Result: Lived
    Original line:
                     tInPrecision <= POWER_128,

    Mutated line:
                     tInPrecision < POWER_128,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 769
    Result: Lived
    Original line:
                 require(camp.startBlock <= block.number, "vote: campaign not started");

    Mutated line:
                 require(camp.startBlock < block.number, "vote: campaign not started");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 772
    Result: Lived
    Original line:
                 require(option > 0, "vote: option is 0");

    Mutated line:
                 require(option >= 0, "vote: option is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 773
    Result: Lived
    Original line:
                 require(option <= camp.options.length, "vote: option is not in range");

    Mutated line:
                 require(option < camp.options.length, "vote: option is not in range");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(_campCreator != address(0), "campCreator is 0");

    Mutated line:
                 require(_campCreator == address(0), "campCreator is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(msg.sender == campaignCreator, "only campaign creator");

    Mutated line:
                 require(msg.sender != campaignCreator, "only campaign creator");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 37
    Result: Lived
    Original line:
                 require(newCampCreator != address(0), "newCampCreator is 0");

    Mutated line:
                 require(newCampCreator == address(0), "newCampCreator is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 47
    Result: Lived
    Original line:
                 require(newCampCreator != address(0), "newCampCreator is 0");

    Mutated line:
                 require(newCampCreator == address(0), "newCampCreator is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 59
    Result: Lived
    Original line:
                 require(pendingCampCreator == msg.sender, "only pending campaign creator");

    Mutated line:
                 require(pendingCampCreator != msg.sender, "only pending campaign creator");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 146
    Result: Lived
    Original line:
                 require(_epochPeriod > 0, "ctor: epoch period is 0");

    Mutated line:
                 require(_epochPeriod <= 0, "ctor: epoch period is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 147
    Result: Lived
    Original line:
                 require(_startBlock >= block.number, "ctor: start in the past");

    Mutated line:
                 require(_startBlock < block.number, "ctor: start in the past");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 148
    Result: Lived
    Original line:
                 require(_staking != address(0), "ctor: staking is missing");

    Mutated line:
                 require(_staking == address(0), "ctor: staking is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 149
    Result: Lived
    Original line:
                 require(_feeHandler != address(0), "ctor: feeHandler is missing");

    Mutated line:
                 require(_feeHandler == address(0), "ctor: feeHandler is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 150
    Result: Lived
    Original line:
                 require(_knc != address(0), "ctor: knc token is missing");

    Mutated line:
                 require(_knc == address(0), "ctor: knc token is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 153
    Result: Lived
    Original line:
                 require(_defaultNetworkFeeBps < BPS / 2, "ctor: network fee high");

    Mutated line:
                 require(_defaultNetworkFeeBps >= BPS / 2, "ctor: network fee high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 156
    Result: Lived
    Original line:
                 require(staking.EPOCH_PERIOD_BLOCKS() == _epochPeriod, "ctor: diff epoch period");

    Mutated line:
                 require(staking.EPOCH_PERIOD_BLOCKS() != _epochPeriod, "ctor: diff epoch period");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 157
    Result: Lived
    Original line:
                 require(staking.FIRST_EPOCH_START_BLOCK() == _startBlock, "ctor: diff start block");

    Mutated line:
                 require(staking.FIRST_EPOCH_START_BLOCK() != _startBlock, "ctor: diff start block");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 169
    Result: Lived
    Original line:
                 require(msg.sender == address(staking), "only staking contract");

    Mutated line:
                 require(msg.sender != address(staking), "only staking contract");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 180
    Result: Lived
    Original line:
                 if (reduceAmount == 0) { return false; }

    Mutated line:
                 if (reduceAmount != 0) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 186
    Result: Lived
    Original line:
                 if (numVotes == 0) { return true; }

    Mutated line:
                 if (numVotes != 0) { return true; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 197
    Result: Lived
    Original line:
                     if (votedOption > 0 && campaignData[campID].endBlock >= block.number) {

    Mutated line:
                     if (votedOption <= 0 && campaignData[campID].endBlock >= block.number) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 197
    Result: Lived
    Original line:
                     if (votedOption > 0 && campaignData[campID].endBlock >= block.number) {

    Mutated line:
                     if (votedOption > 0 && campaignData[campID].endBlock < block.number) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 193
    Result: Lived
    Original line:
                 for (uint i = 0; i < campIDs.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= campIDs.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 237
    Result: Lived
    Original line:
                     epochCampaigns[campEpoch].length < MAX_EPOCH_CAMPS,

    Mutated line:
                     epochCampaigns[campEpoch].length >= MAX_EPOCH_CAMPS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 248
    Result: Lived
    Original line:
                 if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 250
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 251
    Result: Lived
    Original line:
                     require(brrCampaign[campEpoch] == 0, "newCampaign: alr had brr for this epoch");

    Mutated line:
                     require(brrCampaign[campEpoch] != 0, "newCampaign: alr had brr for this epoch");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 249
    Result: Lived
    Original line:
                     require(networkFeeCamp[campEpoch] == 0, "newCampaign: alr had network fee for this epoch");

    Mutated line:
                     require(networkFeeCamp[campEpoch] != 0, "newCampaign: alr had network fee for this epoch");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 261
    Result: Lived
    Original line:
                 if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 263
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 306
    Result: Lived
    Original line:
                 require(camp.startBlock > block.number, "cancelCampaign: campaign alr started");

    Mutated line:
                 require(camp.startBlock <= block.number, "cancelCampaign: campaign alr started");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 312
    Result: Lived
    Original line:
                 if (camp.campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (camp.campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 314
    Result: Lived
    Original line:
                 } else if (camp.campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (camp.campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 323
    Result: Lived
    Original line:
                     if (campIDs[i] == campID) {

    Mutated line:
                     if (campIDs[i] != campID) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 322
    Result: Lived
    Original line:
                 for (uint i = 0; i < campIDs.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= campIDs.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 350
    Result: Lived
    Original line:
                 uint totalStake = dAddress == staker ? stake.add(dStake) : dStake;

    Mutated line:
                 uint totalStake = dAddress != staker ? stake.add(dStake) : dStake;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 353
    Result: Lived
    Original line:
                 if (lastVotedOption == 0) {

    Mutated line:
                 if (lastVotedOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 362
    Result: Lived
    Original line:
                 } else if (lastVotedOption != option) {

    Mutated line:
                 } else if (lastVotedOption == option) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 383
    Result: Lived
    Original line:
                 require(epoch < curEpoch, "claimReward: only for past epochs");

    Mutated line:
                 require(epoch >= curEpoch, "claimReward: only for past epochs");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 387
    Result: Lived
    Original line:
                 require(perInPrecision > 0, "claimReward: No reward");

    Mutated line:
                 require(perInPrecision <= 0, "claimReward: No reward");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 408
    Result: Lived
    Original line:
                 if (curEpoch == 0) {

    Mutated line:
                 if (curEpoch != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 413
    Result: Lived
    Original line:
                 if (campID == 0) {

    Mutated line:
                 if (campID != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 421
    Result: Lived
    Original line:
                 if (winningOption == 0) {

    Mutated line:
                 if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 442
    Result: Lived
    Original line:
                 if (epoch > 0) {

    Mutated line:
                 if (epoch <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 444
    Result: Lived
    Original line:
                     if (campID != 0) {

    Mutated line:
                     if (campID == 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 447
    Result: Lived
    Original line:
                         if (winningOption == 0) {

    Mutated line:
                         if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 468
    Result: Lived
    Original line:
                 if (epoch >= curEpoch) { return false; }

    Mutated line:
                 if (epoch < curEpoch) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 469
    Result: Lived
    Original line:
                 return totalEpochPoints[epoch] == 0;

    Mutated line:
                 return totalEpochPoints[epoch] != 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 494
    Result: Lived
    Original line:
                 if (votes.length == 0) {

    Mutated line:
                 if (votes.length != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 499
    Result: Lived
    Original line:
                 for (uint i = 0; i < voteCounts.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= voteCounts.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 520
    Result: Lived
    Original line:
                 if (camp.endBlock == 0 || camp.endBlock > block.number) { return (0, 0); }

    Mutated line:
                 if (camp.endBlock != 0 || camp.endBlock > block.number) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 520
    Result: Lived
    Original line:
                 if (camp.endBlock == 0 || camp.endBlock > block.number) { return (0, 0); }

    Mutated line:
                 if (camp.endBlock == 0 || camp.endBlock <= block.number) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 524
    Result: Lived
    Original line:
                 if (totalSupply == 0) { return (0, 0); }

    Mutated line:
                 if (totalSupply != 0) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 532
    Result: Lived
    Original line:
                     if (voteCounts[i] > maxVotedCount) {

    Mutated line:
                     if (voteCounts[i] <= maxVotedCount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 535
    Result: Lived
    Original line:
                     } else if (voteCounts[i] == maxVotedCount) {

    Mutated line:
                     } else if (voteCounts[i] != maxVotedCount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 531
    Result: Lived
    Original line:
                 for (uint i = 1; i < voteCounts.length; i++) {

    Mutated line:
                 for (uint i = 1; i >= voteCounts.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 540
    Result: Lived
    Original line:
                 if (winningOption == 0) { return (0, 0); }

    Mutated line:
                 if (winningOption != 0) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 549
    Result: Lived
    Original line:
                 if (formulaData.minPercentageInPrecision > votedPercentage) { return (0, 0); }

    Mutated line:
                 if (formulaData.minPercentageInPrecision <= votedPercentage) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 553
    Result: Lived
    Original line:
                 if (x <= formulaData.cInPrecision) {

    Mutated line:
                 if (x > formulaData.cInPrecision) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 557
    Result: Lived
    Original line:
                     if (maxVotedCount.mul(PRECISION) < y.mul(totalVotes)) { return (0, 0); }

    Mutated line:
                     if (maxVotedCount.mul(PRECISION) >= y.mul(totalVotes)) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 572
    Result: Lived
    Original line:
                 if (curEpoch == 0) {

    Mutated line:
                 if (curEpoch != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 576
    Result: Lived
    Original line:
                 if (campID == 0) {

    Mutated line:
                 if (campID != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 583
    Result: Lived
    Original line:
                 if (winningOption == 0) {

    Mutated line:
                 if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 596
    Result: Lived
    Original line:
                 if (epoch > curEpoch) { return 0; }

    Mutated line:
                 if (epoch <= curEpoch) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 600
    Result: Lived
    Original line:
                 if (numVotes == 0) { return 0; }

    Mutated line:
                 if (numVotes != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 603
    Result: Lived
    Original line:
                 uint totalStake = delegatedAddr == staker ? stake.add(delegatedStake) : delegatedStake;

    Mutated line:
                 uint totalStake = delegatedAddr != staker ? stake.add(delegatedStake) : delegatedStake;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 604
    Result: Lived
    Original line:
                 if (totalStake == 0) { return 0; }

    Mutated line:
                 if (totalStake != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 608
    Result: Lived
    Original line:
                 if (totalPts == 0) { return 0; }

    Mutated line:
                 if (totalPts != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 610
    Result: Lived
    Original line:
                 if (points > totalPts) { return 0; }

    Mutated line:
                 if (points <= totalPts) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 631
    Result: Lived
    Original line:
                 if (epoch > 0) {

    Mutated line:
                 if (epoch <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 633
    Result: Lived
    Original line:
                     if (campID != 0) {

    Mutated line:
                     if (campID == 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 636
    Result: Lived
    Original line:
                         if (winningOption == 0) {

    Mutated line:
                         if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 664
    Result: Lived
    Original line:
                 require(rewardInBps.add(rebateInBps) <= BPS, "reward plus rebate high");

    Mutated line:
                 require(rewardInBps.add(rebateInBps) > BPS, "reward plus rebate high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 680
    Result: Lived
    Original line:
                     startBlock >= block.number,

    Mutated line:
                     startBlock < block.number,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 686
    Result: Lived
    Original line:
                     endBlock.add(1) >= startBlock.add(MIN_CAMP_DURATION_BLOCKS),

    Mutated line:
                     endBlock.add(1) < startBlock.add(MIN_CAMP_DURATION_BLOCKS),


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 694
    Result: Lived
    Original line:
                     startEpoch == endEpoch,

    Mutated line:
                     startEpoch != endEpoch,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 699
    Result: Lived
    Original line:
                     startEpoch <= currentEpoch.add(1),

    Mutated line:
                     startEpoch > currentEpoch.add(1),


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 706
    Result: Lived
    Original line:
                     numOptions > 1 && numOptions <= MAX_CAMP_OPTIONS,

    Mutated line:
                     numOptions <= 1 && numOptions <= MAX_CAMP_OPTIONS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 706
    Result: Lived
    Original line:
                     numOptions > 1 && numOptions <= MAX_CAMP_OPTIONS,

    Mutated line:
                     numOptions > 1 && numOptions > MAX_CAMP_OPTIONS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 711
    Result: Lived
    Original line:
                 if (campType == CampaignType.GENERAL) {

    Mutated line:
                 if (campType != CampaignType.GENERAL) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 719
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 } else if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 735
    Result: Lived
    Original line:
                             rewardInBps.add(rebateInBps) <= BPS,

    Mutated line:
                             rewardInBps.add(rebateInBps) > BPS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 731
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i >= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 725
    Result: Lived
    Original line:
                             options[i] < BPS / 2,

    Mutated line:
                             options[i] >= BPS / 2,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 721
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i >= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 715
    Result: Lived
    Original line:
                             options[i] > 0,

    Mutated line:
                             options[i] <= 0,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 713
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i >= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 743
    Result: Lived
    Original line:
                     minPercentageInPrecision <= PRECISION,

    Mutated line:
                     minPercentageInPrecision > PRECISION,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 749
    Result: Lived
    Original line:
                     cInPrecision <= POWER_128,

    Mutated line:
                     cInPrecision > POWER_128,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 754
    Result: Lived
    Original line:
                     tInPrecision <= POWER_128,

    Mutated line:
                     tInPrecision > POWER_128,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 769
    Result: Lived
    Original line:
                 require(camp.startBlock <= block.number, "vote: campaign not started");

    Mutated line:
                 require(camp.startBlock > block.number, "vote: campaign not started");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 770
    Result: Lived
    Original line:
                 require(camp.endBlock >= block.number, "vote: campaign alr ended");

    Mutated line:
                 require(camp.endBlock < block.number, "vote: campaign alr ended");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 772
    Result: Lived
    Original line:
                 require(option > 0, "vote: option is 0");

    Mutated line:
                 require(option <= 0, "vote: option is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 773
    Result: Lived
    Original line:
                 require(option <= camp.options.length, "vote: option is not in range");

    Mutated line:
                 require(option > camp.options.length, "vote: option is not in range");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 153
    Result: Lived
    Original line:
                 require(_defaultNetworkFeeBps < BPS / 2, "ctor: network fee high");

    Mutated line:
                 require(_defaultNetworkFeeBps < BPS * 2, "ctor: network fee high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 285
    Result: Lived
    Original line:
                 campOptionVotes[campID] = new uint[](options.length + 1);

    Mutated line:
                 campOptionVotes[campID] = new uint[](options.length - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 325
    Result: Lived
    Original line:
                         campIDs[i] = campIDs[campIDs.length - 1];

    Mutated line:
                         campIDs[i] = campIDs[campIDs.length + 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 326
    Result: Lived
    Original line:
                         delete campIDs[campIDs.length - 1];

    Mutated line:
                         delete campIDs[campIDs.length + 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 498
    Result: Lived
    Original line:
                 voteCounts = new uint[](votes.length - 1);

    Mutated line:
                 voteCounts = new uint[](votes.length + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 500
    Result: Lived
    Original line:
                     voteCounts[i] = votes[i + 1];

    Mutated line:
                     voteCounts[i] = votes[i - 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 561
    Result: Lived
    Original line:
                 value = camp.options[optionID - 1];

    Mutated line:
                 value = camp.options[optionID + 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 652
    Result: Lived
    Original line:
                 rewardInBps = data & (POWER_128.sub(1));

    Mutated line:
                 rewardInBps = data | (POWER_128.sub(1));


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 653
    Result: Lived
    Original line:
                 rebateInBps = (data.div(POWER_128)) & (POWER_128.sub(1));

    Mutated line:
                 rebateInBps = (data.div(POWER_128)) | (POWER_128.sub(1));


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 725
    Result: Lived
    Original line:
                             options[i] < BPS / 2,

    Mutated line:
                             options[i] < BPS * 2,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 36
    Result: Lived
    Original line:
             function transferCampaignCreator(address newCampCreator) public onlyCampaignCreator {

    Mutated line:
             function transferCampaignCreator(address newCampCreator) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 46
    Result: Lived
    Original line:
             function transferCampaignCreatorQuickly(address newCampCreator) public onlyCampaignCreator {

    Mutated line:
             function transferCampaignCreatorQuickly(address newCampCreator) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 145
    Result: Lived
    Original line:
             ) public CampPermissionGroups(_campaignCreator) {

    Mutated line:
             ) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 178
    Result: Lived
    Original line:
             function handleWithdrawal(address staker, uint reduceAmount) public onlyStakingContract returns(bool) {

    Mutated line:
             function handleWithdrawal(address staker, uint reduceAmount) public  returns(bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 230
    Result: Lived
    Original line:
                 public onlyCampaignCreator returns(uint campID)

    Mutated line:
                 public  returns(uint campID)


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 301
    Result: Lived
    Original line:
             function cancelCampaign(uint campID) public onlyCampaignCreator {

    Mutated line:
             function cancelCampaign(uint campID) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 381
    Result: Lived
    Original line:
             function claimReward(address staker, uint epoch) public nonReentrant {

    Mutated line:
             function claimReward(address staker, uint epoch) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork2.sol
    Line nr: 32
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee > 0, "0 rate");

    Mutated line:
                 require(tData.rateOnlyNetworkFee >= 0, "0 rate");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork2.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee < MAX_RATE, "rate > MAX_RATE");

    Mutated line:
                 require(tData.rateOnlyNetworkFee <= MAX_RATE, "rate > MAX_RATE");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork2.sol
    Line nr: 43
    Result: Lived
    Original line:
                 if (tData.actualDestAmount > tData.input.maxDestAmount) {

    Mutated line:
                 if (tData.actualDestAmount >= tData.input.maxDestAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork2.sol
    Line nr: 53
    Result: Lived
    Original line:
                 if (tData.input.srcAmount == 1717) {

    Mutated line:
                 if (tData.input.srcAmount != 1717) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork2.sol
    Line nr: 32
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee > 0, "0 rate");

    Mutated line:
                 require(tData.rateOnlyNetworkFee <= 0, "0 rate");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork2.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee < MAX_RATE, "rate > MAX_RATE");

    Mutated line:
                 require(tData.rateOnlyNetworkFee >= MAX_RATE, "rate > MAX_RATE");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork2.sol
    Line nr: 34
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee >= tData.input.minConversionRate, "rate < minConvRate");

    Mutated line:
                 require(tData.rateOnlyNetworkFee < tData.input.minConversionRate, "rate < minConvRate");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork2.sol
    Line nr: 36
    Result: Lived
    Original line:
                 if (gasHelper != IGasHelper(0)) {

    Mutated line:
                 if (gasHelper == IGasHelper(0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork2.sol
    Line nr: 43
    Result: Lived
    Original line:
                 if (tData.actualDestAmount > tData.input.maxDestAmount) {

    Mutated line:
                 if (tData.actualDestAmount <= tData.input.maxDestAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork2.sol
    Line nr: 53
    Result: Lived
    Original line:
                 if (tData.input.srcAmount == 1717) {

    Mutated line:
                 if (tData.input.srcAmount != 1717) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork2.sol
    Line nr: 70
    Result: Lived
    Original line:
                         tData.tradeWei - tData.networkFeeWei - tData.platformFeeWei,

    Mutated line:
                         tData.tradeWei - tData.networkFeeWei + tData.platformFeeWei,


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork2.sol
    Line nr: 70
    Result: Lived
    Original line:
                         tData.tradeWei - tData.networkFeeWei - tData.platformFeeWei,

    Mutated line:
                         tData.tradeWei + tData.networkFeeWei - tData.platformFeeWei,


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork2.sol
    Line nr: 29
    Result: Lived
    Original line:
                 calcRatesAndAmounts(tData.input.src, tData.input.dest, tData.input.srcAmount, tData, hint);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork2.sol
    Line nr: 11
    Result: Lived
    Original line:
             constructor(address _admin) public KyberNetwork(_admin) { }

    Mutated line:
             constructor(address _admin) public  { }


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GenerousKyberNetwork2.sol
    Line nr: 20
    Result: Lived
    Original line:
                 nonReentrant

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockGasHelper.sol
    Line nr: 22
    Result: Lived
    Original line:
                 require(platformWallet == _platformWallet);

    Mutated line:
                 require(platformWallet != _platformWallet);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockGasHelper.sol
    Line nr: 22
    Result: Lived
    Original line:
                 require(platformWallet == _platformWallet);

    Mutated line:
                 require(platformWallet != _platformWallet);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousReserve.sol
    Line nr: 36
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) { return buyTokenRates[address(dest)]; }

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) { return buyTokenRates[address(dest)]; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousReserve.sol
    Line nr: 52
    Result: Lived
    Original line:
                 require(srcToken == ETH_TOKEN_ADDRESS, "not buy token");

    Mutated line:
                 require(srcToken != ETH_TOKEN_ADDRESS, "not buy token");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousReserve.sol
    Line nr: 54
    Result: Lived
    Original line:
                 if (numRecursive > 0) {

    Mutated line:
                 if (numRecursive >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousReserve.sol
    Line nr: 61
    Result: Lived
    Original line:
                 require(msg.value == srcAmount, "ETH sent != srcAmount");

    Mutated line:
                 require(msg.value != srcAmount, "ETH sent != srcAmount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousReserve.sol
    Line nr: 36
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) { return buyTokenRates[address(dest)]; }

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) { return buyTokenRates[address(dest)]; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousReserve.sol
    Line nr: 52
    Result: Lived
    Original line:
                 require(srcToken == ETH_TOKEN_ADDRESS, "not buy token");

    Mutated line:
                 require(srcToken != ETH_TOKEN_ADDRESS, "not buy token");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousReserve.sol
    Line nr: 54
    Result: Lived
    Original line:
                 if (numRecursive > 0) {

    Mutated line:
                 if (numRecursive <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousReserve.sol
    Line nr: 61
    Result: Lived
    Original line:
                 require(msg.value == srcAmount, "ETH sent != srcAmount");

    Mutated line:
                 require(msg.value != srcAmount, "ETH sent != srcAmount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousReserve.sol
    Line nr: 57
    Result: Lived
    Original line:
                     doTrade();

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(msg.sender == campaignCreator, "only campaign creator");

    Mutated line:
                 require(msg.sender != campaignCreator, "only campaign creator");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 59
    Result: Lived
    Original line:
                 require(pendingCampCreator == msg.sender, "only pending campaign creator");

    Mutated line:
                 require(pendingCampCreator != msg.sender, "only pending campaign creator");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 146
    Result: Lived
    Original line:
                 require(_epochPeriod > 0, "ctor: epoch period is 0");

    Mutated line:
                 require(_epochPeriod >= 0, "ctor: epoch period is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 153
    Result: Lived
    Original line:
                 require(_defaultNetworkFeeBps < BPS / 2, "ctor: network fee high");

    Mutated line:
                 require(_defaultNetworkFeeBps <= BPS / 2, "ctor: network fee high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 156
    Result: Lived
    Original line:
                 require(staking.EPOCH_PERIOD_BLOCKS() == _epochPeriod, "ctor: diff epoch period");

    Mutated line:
                 require(staking.EPOCH_PERIOD_BLOCKS() != _epochPeriod, "ctor: diff epoch period");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 157
    Result: Lived
    Original line:
                 require(staking.FIRST_EPOCH_START_BLOCK() == _startBlock, "ctor: diff start block");

    Mutated line:
                 require(staking.FIRST_EPOCH_START_BLOCK() != _startBlock, "ctor: diff start block");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 169
    Result: Lived
    Original line:
                 require(msg.sender == address(staking), "only staking contract");

    Mutated line:
                 require(msg.sender != address(staking), "only staking contract");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 180
    Result: Lived
    Original line:
                 if (reduceAmount == 0) { return false; }

    Mutated line:
                 if (reduceAmount != 0) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 186
    Result: Lived
    Original line:
                 if (numVotes == 0) { return true; }

    Mutated line:
                 if (numVotes != 0) { return true; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 197
    Result: Lived
    Original line:
                     if (votedOption > 0 && campaignData[campID].endBlock >= block.number) {

    Mutated line:
                     if (votedOption >= 0 && campaignData[campID].endBlock >= block.number) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 193
    Result: Lived
    Original line:
                 for (uint i = 0; i < campIDs.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= campIDs.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 237
    Result: Lived
    Original line:
                     epochCampaigns[campEpoch].length < MAX_EPOCH_CAMPS,

    Mutated line:
                     epochCampaigns[campEpoch].length <= MAX_EPOCH_CAMPS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 248
    Result: Lived
    Original line:
                 if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 250
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 251
    Result: Lived
    Original line:
                     require(brrCampaign[campEpoch] == 0, "newCampaign: alr had brr for this epoch");

    Mutated line:
                     require(brrCampaign[campEpoch] != 0, "newCampaign: alr had brr for this epoch");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 249
    Result: Lived
    Original line:
                     require(networkFeeCamp[campEpoch] == 0, "newCampaign: alr had network fee for this epoch");

    Mutated line:
                     require(networkFeeCamp[campEpoch] != 0, "newCampaign: alr had network fee for this epoch");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 261
    Result: Lived
    Original line:
                 if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 263
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 306
    Result: Lived
    Original line:
                 require(camp.startBlock > block.number, "cancelCampaign: campaign alr started");

    Mutated line:
                 require(camp.startBlock >= block.number, "cancelCampaign: campaign alr started");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 312
    Result: Lived
    Original line:
                 if (camp.campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (camp.campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 314
    Result: Lived
    Original line:
                 } else if (camp.campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (camp.campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 323
    Result: Lived
    Original line:
                     if (campIDs[i] == campID) {

    Mutated line:
                     if (campIDs[i] != campID) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 322
    Result: Lived
    Original line:
                 for (uint i = 0; i < campIDs.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= campIDs.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 350
    Result: Lived
    Original line:
                 uint totalStake = dAddress == staker ? stake.add(dStake) : dStake;

    Mutated line:
                 uint totalStake = dAddress != staker ? stake.add(dStake) : dStake;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 353
    Result: Lived
    Original line:
                 if (lastVotedOption == 0) {

    Mutated line:
                 if (lastVotedOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 383
    Result: Lived
    Original line:
                 require(epoch < curEpoch, "claimReward: only for past epochs");

    Mutated line:
                 require(epoch <= curEpoch, "claimReward: only for past epochs");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 387
    Result: Lived
    Original line:
                 require(perInPrecision > 0, "claimReward: No reward");

    Mutated line:
                 require(perInPrecision >= 0, "claimReward: No reward");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 408
    Result: Lived
    Original line:
                 if (curEpoch == 0) {

    Mutated line:
                 if (curEpoch != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 413
    Result: Lived
    Original line:
                 if (campID == 0) {

    Mutated line:
                 if (campID != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 421
    Result: Lived
    Original line:
                 if (winningOption == 0) {

    Mutated line:
                 if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 442
    Result: Lived
    Original line:
                 if (epoch > 0) {

    Mutated line:
                 if (epoch >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 447
    Result: Lived
    Original line:
                         if (winningOption == 0) {

    Mutated line:
                         if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 469
    Result: Lived
    Original line:
                 return totalEpochPoints[epoch] == 0;

    Mutated line:
                 return totalEpochPoints[epoch] != 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 494
    Result: Lived
    Original line:
                 if (votes.length == 0) {

    Mutated line:
                 if (votes.length != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 499
    Result: Lived
    Original line:
                 for (uint i = 0; i < voteCounts.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= voteCounts.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 520
    Result: Lived
    Original line:
                 if (camp.endBlock == 0 || camp.endBlock > block.number) { return (0, 0); }

    Mutated line:
                 if (camp.endBlock != 0 || camp.endBlock > block.number) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 520
    Result: Lived
    Original line:
                 if (camp.endBlock == 0 || camp.endBlock > block.number) { return (0, 0); }

    Mutated line:
                 if (camp.endBlock == 0 || camp.endBlock >= block.number) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 524
    Result: Lived
    Original line:
                 if (totalSupply == 0) { return (0, 0); }

    Mutated line:
                 if (totalSupply != 0) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 532
    Result: Lived
    Original line:
                     if (voteCounts[i] > maxVotedCount) {

    Mutated line:
                     if (voteCounts[i] >= maxVotedCount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 535
    Result: Lived
    Original line:
                     } else if (voteCounts[i] == maxVotedCount) {

    Mutated line:
                     } else if (voteCounts[i] != maxVotedCount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 531
    Result: Lived
    Original line:
                 for (uint i = 1; i < voteCounts.length; i++) {

    Mutated line:
                 for (uint i = 1; i <= voteCounts.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 540
    Result: Lived
    Original line:
                 if (winningOption == 0) { return (0, 0); }

    Mutated line:
                 if (winningOption != 0) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 549
    Result: Lived
    Original line:
                 if (formulaData.minPercentageInPrecision > votedPercentage) { return (0, 0); }

    Mutated line:
                 if (formulaData.minPercentageInPrecision >= votedPercentage) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 553
    Result: Lived
    Original line:
                 if (x <= formulaData.cInPrecision) {

    Mutated line:
                 if (x < formulaData.cInPrecision) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 557
    Result: Lived
    Original line:
                     if (maxVotedCount.mul(PRECISION) < y.mul(totalVotes)) { return (0, 0); }

    Mutated line:
                     if (maxVotedCount.mul(PRECISION) <= y.mul(totalVotes)) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 572
    Result: Lived
    Original line:
                 if (curEpoch == 0) {

    Mutated line:
                 if (curEpoch != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 576
    Result: Lived
    Original line:
                 if (campID == 0) {

    Mutated line:
                 if (campID != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 583
    Result: Lived
    Original line:
                 if (winningOption == 0) {

    Mutated line:
                 if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 596
    Result: Lived
    Original line:
                 if (epoch > curEpoch) { return 0; }

    Mutated line:
                 if (epoch >= curEpoch) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 600
    Result: Lived
    Original line:
                 if (numVotes == 0) { return 0; }

    Mutated line:
                 if (numVotes != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 603
    Result: Lived
    Original line:
                 uint totalStake = delegatedAddr == staker ? stake.add(delegatedStake) : delegatedStake;

    Mutated line:
                 uint totalStake = delegatedAddr != staker ? stake.add(delegatedStake) : delegatedStake;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 604
    Result: Lived
    Original line:
                 if (totalStake == 0) { return 0; }

    Mutated line:
                 if (totalStake != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 608
    Result: Lived
    Original line:
                 if (totalPts == 0) { return 0; }

    Mutated line:
                 if (totalPts != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 610
    Result: Lived
    Original line:
                 if (points > totalPts) { return 0; }

    Mutated line:
                 if (points >= totalPts) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 631
    Result: Lived
    Original line:
                 if (epoch > 0) {

    Mutated line:
                 if (epoch >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 636
    Result: Lived
    Original line:
                         if (winningOption == 0) {

    Mutated line:
                         if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 664
    Result: Lived
    Original line:
                 require(rewardInBps.add(rebateInBps) <= BPS, "reward plus rebate high");

    Mutated line:
                 require(rewardInBps.add(rebateInBps) < BPS, "reward plus rebate high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 694
    Result: Lived
    Original line:
                     startEpoch == endEpoch,

    Mutated line:
                     startEpoch != endEpoch,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 699
    Result: Lived
    Original line:
                     startEpoch <= currentEpoch.add(1),

    Mutated line:
                     startEpoch < currentEpoch.add(1),


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 706
    Result: Lived
    Original line:
                     numOptions > 1 && numOptions <= MAX_CAMP_OPTIONS,

    Mutated line:
                     numOptions >= 1 && numOptions <= MAX_CAMP_OPTIONS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 706
    Result: Lived
    Original line:
                     numOptions > 1 && numOptions <= MAX_CAMP_OPTIONS,

    Mutated line:
                     numOptions > 1 && numOptions < MAX_CAMP_OPTIONS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 711
    Result: Lived
    Original line:
                 if (campType == CampaignType.GENERAL) {

    Mutated line:
                 if (campType != CampaignType.GENERAL) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 719
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 } else if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 735
    Result: Lived
    Original line:
                             rewardInBps.add(rebateInBps) <= BPS,

    Mutated line:
                             rewardInBps.add(rebateInBps) < BPS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 731
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i <= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 725
    Result: Lived
    Original line:
                             options[i] < BPS / 2,

    Mutated line:
                             options[i] <= BPS / 2,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 721
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i <= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 715
    Result: Lived
    Original line:
                             options[i] > 0,

    Mutated line:
                             options[i] >= 0,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 713
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i <= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 743
    Result: Lived
    Original line:
                     minPercentageInPrecision <= PRECISION,

    Mutated line:
                     minPercentageInPrecision < PRECISION,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 749
    Result: Lived
    Original line:
                     cInPrecision <= POWER_128,

    Mutated line:
                     cInPrecision < POWER_128,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 754
    Result: Lived
    Original line:
                     tInPrecision <= POWER_128,

    Mutated line:
                     tInPrecision < POWER_128,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 769
    Result: Lived
    Original line:
                 require(camp.startBlock <= block.number, "vote: campaign not started");

    Mutated line:
                 require(camp.startBlock < block.number, "vote: campaign not started");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 772
    Result: Lived
    Original line:
                 require(option > 0, "vote: option is 0");

    Mutated line:
                 require(option >= 0, "vote: option is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 773
    Result: Lived
    Original line:
                 require(option <= camp.options.length, "vote: option is not in range");

    Mutated line:
                 require(option < camp.options.length, "vote: option is not in range");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(_campCreator != address(0), "campCreator is 0");

    Mutated line:
                 require(_campCreator == address(0), "campCreator is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(msg.sender == campaignCreator, "only campaign creator");

    Mutated line:
                 require(msg.sender != campaignCreator, "only campaign creator");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 37
    Result: Lived
    Original line:
                 require(newCampCreator != address(0), "newCampCreator is 0");

    Mutated line:
                 require(newCampCreator == address(0), "newCampCreator is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 47
    Result: Lived
    Original line:
                 require(newCampCreator != address(0), "newCampCreator is 0");

    Mutated line:
                 require(newCampCreator == address(0), "newCampCreator is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 59
    Result: Lived
    Original line:
                 require(pendingCampCreator == msg.sender, "only pending campaign creator");

    Mutated line:
                 require(pendingCampCreator != msg.sender, "only pending campaign creator");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 146
    Result: Lived
    Original line:
                 require(_epochPeriod > 0, "ctor: epoch period is 0");

    Mutated line:
                 require(_epochPeriod <= 0, "ctor: epoch period is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 147
    Result: Lived
    Original line:
                 require(_startBlock >= block.number, "ctor: start in the past");

    Mutated line:
                 require(_startBlock < block.number, "ctor: start in the past");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 148
    Result: Lived
    Original line:
                 require(_staking != address(0), "ctor: staking is missing");

    Mutated line:
                 require(_staking == address(0), "ctor: staking is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 149
    Result: Lived
    Original line:
                 require(_feeHandler != address(0), "ctor: feeHandler is missing");

    Mutated line:
                 require(_feeHandler == address(0), "ctor: feeHandler is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 150
    Result: Lived
    Original line:
                 require(_knc != address(0), "ctor: knc token is missing");

    Mutated line:
                 require(_knc == address(0), "ctor: knc token is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 153
    Result: Lived
    Original line:
                 require(_defaultNetworkFeeBps < BPS / 2, "ctor: network fee high");

    Mutated line:
                 require(_defaultNetworkFeeBps >= BPS / 2, "ctor: network fee high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 156
    Result: Lived
    Original line:
                 require(staking.EPOCH_PERIOD_BLOCKS() == _epochPeriod, "ctor: diff epoch period");

    Mutated line:
                 require(staking.EPOCH_PERIOD_BLOCKS() != _epochPeriod, "ctor: diff epoch period");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 157
    Result: Lived
    Original line:
                 require(staking.FIRST_EPOCH_START_BLOCK() == _startBlock, "ctor: diff start block");

    Mutated line:
                 require(staking.FIRST_EPOCH_START_BLOCK() != _startBlock, "ctor: diff start block");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 169
    Result: Lived
    Original line:
                 require(msg.sender == address(staking), "only staking contract");

    Mutated line:
                 require(msg.sender != address(staking), "only staking contract");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 180
    Result: Lived
    Original line:
                 if (reduceAmount == 0) { return false; }

    Mutated line:
                 if (reduceAmount != 0) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 186
    Result: Lived
    Original line:
                 if (numVotes == 0) { return true; }

    Mutated line:
                 if (numVotes != 0) { return true; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 197
    Result: Lived
    Original line:
                     if (votedOption > 0 && campaignData[campID].endBlock >= block.number) {

    Mutated line:
                     if (votedOption <= 0 && campaignData[campID].endBlock >= block.number) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 197
    Result: Lived
    Original line:
                     if (votedOption > 0 && campaignData[campID].endBlock >= block.number) {

    Mutated line:
                     if (votedOption > 0 && campaignData[campID].endBlock < block.number) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 193
    Result: Lived
    Original line:
                 for (uint i = 0; i < campIDs.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= campIDs.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 237
    Result: Lived
    Original line:
                     epochCampaigns[campEpoch].length < MAX_EPOCH_CAMPS,

    Mutated line:
                     epochCampaigns[campEpoch].length >= MAX_EPOCH_CAMPS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 248
    Result: Lived
    Original line:
                 if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 250
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 251
    Result: Lived
    Original line:
                     require(brrCampaign[campEpoch] == 0, "newCampaign: alr had brr for this epoch");

    Mutated line:
                     require(brrCampaign[campEpoch] != 0, "newCampaign: alr had brr for this epoch");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 249
    Result: Lived
    Original line:
                     require(networkFeeCamp[campEpoch] == 0, "newCampaign: alr had network fee for this epoch");

    Mutated line:
                     require(networkFeeCamp[campEpoch] != 0, "newCampaign: alr had network fee for this epoch");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 261
    Result: Lived
    Original line:
                 if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 263
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 306
    Result: Lived
    Original line:
                 require(camp.startBlock > block.number, "cancelCampaign: campaign alr started");

    Mutated line:
                 require(camp.startBlock <= block.number, "cancelCampaign: campaign alr started");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 312
    Result: Lived
    Original line:
                 if (camp.campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (camp.campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 314
    Result: Lived
    Original line:
                 } else if (camp.campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (camp.campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 323
    Result: Lived
    Original line:
                     if (campIDs[i] == campID) {

    Mutated line:
                     if (campIDs[i] != campID) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 322
    Result: Lived
    Original line:
                 for (uint i = 0; i < campIDs.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= campIDs.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 350
    Result: Lived
    Original line:
                 uint totalStake = dAddress == staker ? stake.add(dStake) : dStake;

    Mutated line:
                 uint totalStake = dAddress != staker ? stake.add(dStake) : dStake;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 353
    Result: Lived
    Original line:
                 if (lastVotedOption == 0) {

    Mutated line:
                 if (lastVotedOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 362
    Result: Lived
    Original line:
                 } else if (lastVotedOption != option) {

    Mutated line:
                 } else if (lastVotedOption == option) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 383
    Result: Lived
    Original line:
                 require(epoch < curEpoch, "claimReward: only for past epochs");

    Mutated line:
                 require(epoch >= curEpoch, "claimReward: only for past epochs");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 387
    Result: Lived
    Original line:
                 require(perInPrecision > 0, "claimReward: No reward");

    Mutated line:
                 require(perInPrecision <= 0, "claimReward: No reward");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 408
    Result: Lived
    Original line:
                 if (curEpoch == 0) {

    Mutated line:
                 if (curEpoch != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 413
    Result: Lived
    Original line:
                 if (campID == 0) {

    Mutated line:
                 if (campID != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 421
    Result: Lived
    Original line:
                 if (winningOption == 0) {

    Mutated line:
                 if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 442
    Result: Lived
    Original line:
                 if (epoch > 0) {

    Mutated line:
                 if (epoch <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 444
    Result: Lived
    Original line:
                     if (campID != 0) {

    Mutated line:
                     if (campID == 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 447
    Result: Lived
    Original line:
                         if (winningOption == 0) {

    Mutated line:
                         if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 468
    Result: Lived
    Original line:
                 if (epoch >= curEpoch) { return false; }

    Mutated line:
                 if (epoch < curEpoch) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 469
    Result: Lived
    Original line:
                 return totalEpochPoints[epoch] == 0;

    Mutated line:
                 return totalEpochPoints[epoch] != 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 494
    Result: Lived
    Original line:
                 if (votes.length == 0) {

    Mutated line:
                 if (votes.length != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 499
    Result: Lived
    Original line:
                 for (uint i = 0; i < voteCounts.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= voteCounts.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 520
    Result: Lived
    Original line:
                 if (camp.endBlock == 0 || camp.endBlock > block.number) { return (0, 0); }

    Mutated line:
                 if (camp.endBlock != 0 || camp.endBlock > block.number) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 520
    Result: Lived
    Original line:
                 if (camp.endBlock == 0 || camp.endBlock > block.number) { return (0, 0); }

    Mutated line:
                 if (camp.endBlock == 0 || camp.endBlock <= block.number) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 524
    Result: Lived
    Original line:
                 if (totalSupply == 0) { return (0, 0); }

    Mutated line:
                 if (totalSupply != 0) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 532
    Result: Lived
    Original line:
                     if (voteCounts[i] > maxVotedCount) {

    Mutated line:
                     if (voteCounts[i] <= maxVotedCount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 535
    Result: Lived
    Original line:
                     } else if (voteCounts[i] == maxVotedCount) {

    Mutated line:
                     } else if (voteCounts[i] != maxVotedCount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 531
    Result: Lived
    Original line:
                 for (uint i = 1; i < voteCounts.length; i++) {

    Mutated line:
                 for (uint i = 1; i >= voteCounts.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 540
    Result: Lived
    Original line:
                 if (winningOption == 0) { return (0, 0); }

    Mutated line:
                 if (winningOption != 0) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 549
    Result: Lived
    Original line:
                 if (formulaData.minPercentageInPrecision > votedPercentage) { return (0, 0); }

    Mutated line:
                 if (formulaData.minPercentageInPrecision <= votedPercentage) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 553
    Result: Lived
    Original line:
                 if (x <= formulaData.cInPrecision) {

    Mutated line:
                 if (x > formulaData.cInPrecision) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 557
    Result: Lived
    Original line:
                     if (maxVotedCount.mul(PRECISION) < y.mul(totalVotes)) { return (0, 0); }

    Mutated line:
                     if (maxVotedCount.mul(PRECISION) >= y.mul(totalVotes)) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 572
    Result: Lived
    Original line:
                 if (curEpoch == 0) {

    Mutated line:
                 if (curEpoch != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 576
    Result: Lived
    Original line:
                 if (campID == 0) {

    Mutated line:
                 if (campID != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 583
    Result: Lived
    Original line:
                 if (winningOption == 0) {

    Mutated line:
                 if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 596
    Result: Lived
    Original line:
                 if (epoch > curEpoch) { return 0; }

    Mutated line:
                 if (epoch <= curEpoch) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 600
    Result: Lived
    Original line:
                 if (numVotes == 0) { return 0; }

    Mutated line:
                 if (numVotes != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 603
    Result: Lived
    Original line:
                 uint totalStake = delegatedAddr == staker ? stake.add(delegatedStake) : delegatedStake;

    Mutated line:
                 uint totalStake = delegatedAddr != staker ? stake.add(delegatedStake) : delegatedStake;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 604
    Result: Lived
    Original line:
                 if (totalStake == 0) { return 0; }

    Mutated line:
                 if (totalStake != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 608
    Result: Lived
    Original line:
                 if (totalPts == 0) { return 0; }

    Mutated line:
                 if (totalPts != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 610
    Result: Lived
    Original line:
                 if (points > totalPts) { return 0; }

    Mutated line:
                 if (points <= totalPts) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 631
    Result: Lived
    Original line:
                 if (epoch > 0) {

    Mutated line:
                 if (epoch <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 633
    Result: Lived
    Original line:
                     if (campID != 0) {

    Mutated line:
                     if (campID == 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 636
    Result: Lived
    Original line:
                         if (winningOption == 0) {

    Mutated line:
                         if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 664
    Result: Lived
    Original line:
                 require(rewardInBps.add(rebateInBps) <= BPS, "reward plus rebate high");

    Mutated line:
                 require(rewardInBps.add(rebateInBps) > BPS, "reward plus rebate high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 680
    Result: Lived
    Original line:
                     startBlock >= block.number,

    Mutated line:
                     startBlock < block.number,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 686
    Result: Lived
    Original line:
                     endBlock.add(1) >= startBlock.add(MIN_CAMP_DURATION_BLOCKS),

    Mutated line:
                     endBlock.add(1) < startBlock.add(MIN_CAMP_DURATION_BLOCKS),


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 694
    Result: Lived
    Original line:
                     startEpoch == endEpoch,

    Mutated line:
                     startEpoch != endEpoch,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 699
    Result: Lived
    Original line:
                     startEpoch <= currentEpoch.add(1),

    Mutated line:
                     startEpoch > currentEpoch.add(1),


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 706
    Result: Lived
    Original line:
                     numOptions > 1 && numOptions <= MAX_CAMP_OPTIONS,

    Mutated line:
                     numOptions <= 1 && numOptions <= MAX_CAMP_OPTIONS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 706
    Result: Lived
    Original line:
                     numOptions > 1 && numOptions <= MAX_CAMP_OPTIONS,

    Mutated line:
                     numOptions > 1 && numOptions > MAX_CAMP_OPTIONS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 711
    Result: Lived
    Original line:
                 if (campType == CampaignType.GENERAL) {

    Mutated line:
                 if (campType != CampaignType.GENERAL) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 719
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 } else if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 735
    Result: Lived
    Original line:
                             rewardInBps.add(rebateInBps) <= BPS,

    Mutated line:
                             rewardInBps.add(rebateInBps) > BPS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 731
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i >= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 725
    Result: Lived
    Original line:
                             options[i] < BPS / 2,

    Mutated line:
                             options[i] >= BPS / 2,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 721
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i >= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 715
    Result: Lived
    Original line:
                             options[i] > 0,

    Mutated line:
                             options[i] <= 0,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 713
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i >= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 743
    Result: Lived
    Original line:
                     minPercentageInPrecision <= PRECISION,

    Mutated line:
                     minPercentageInPrecision > PRECISION,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 749
    Result: Lived
    Original line:
                     cInPrecision <= POWER_128,

    Mutated line:
                     cInPrecision > POWER_128,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 754
    Result: Lived
    Original line:
                     tInPrecision <= POWER_128,

    Mutated line:
                     tInPrecision > POWER_128,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 769
    Result: Lived
    Original line:
                 require(camp.startBlock <= block.number, "vote: campaign not started");

    Mutated line:
                 require(camp.startBlock > block.number, "vote: campaign not started");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 770
    Result: Lived
    Original line:
                 require(camp.endBlock >= block.number, "vote: campaign alr ended");

    Mutated line:
                 require(camp.endBlock < block.number, "vote: campaign alr ended");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 772
    Result: Lived
    Original line:
                 require(option > 0, "vote: option is 0");

    Mutated line:
                 require(option <= 0, "vote: option is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 773
    Result: Lived
    Original line:
                 require(option <= camp.options.length, "vote: option is not in range");

    Mutated line:
                 require(option > camp.options.length, "vote: option is not in range");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 153
    Result: Lived
    Original line:
                 require(_defaultNetworkFeeBps < BPS / 2, "ctor: network fee high");

    Mutated line:
                 require(_defaultNetworkFeeBps < BPS * 2, "ctor: network fee high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 285
    Result: Lived
    Original line:
                 campOptionVotes[campID] = new uint[](options.length + 1);

    Mutated line:
                 campOptionVotes[campID] = new uint[](options.length - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 325
    Result: Lived
    Original line:
                         campIDs[i] = campIDs[campIDs.length - 1];

    Mutated line:
                         campIDs[i] = campIDs[campIDs.length + 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 326
    Result: Lived
    Original line:
                         delete campIDs[campIDs.length - 1];

    Mutated line:
                         delete campIDs[campIDs.length + 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 498
    Result: Lived
    Original line:
                 voteCounts = new uint[](votes.length - 1);

    Mutated line:
                 voteCounts = new uint[](votes.length + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 500
    Result: Lived
    Original line:
                     voteCounts[i] = votes[i + 1];

    Mutated line:
                     voteCounts[i] = votes[i - 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 561
    Result: Lived
    Original line:
                 value = camp.options[optionID - 1];

    Mutated line:
                 value = camp.options[optionID + 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 652
    Result: Lived
    Original line:
                 rewardInBps = data & (POWER_128.sub(1));

    Mutated line:
                 rewardInBps = data | (POWER_128.sub(1));


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 653
    Result: Lived
    Original line:
                 rebateInBps = (data.div(POWER_128)) & (POWER_128.sub(1));

    Mutated line:
                 rebateInBps = (data.div(POWER_128)) | (POWER_128.sub(1));


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 725
    Result: Lived
    Original line:
                             options[i] < BPS / 2,

    Mutated line:
                             options[i] < BPS * 2,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 36
    Result: Lived
    Original line:
             function transferCampaignCreator(address newCampCreator) public onlyCampaignCreator {

    Mutated line:
             function transferCampaignCreator(address newCampCreator) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 46
    Result: Lived
    Original line:
             function transferCampaignCreatorQuickly(address newCampCreator) public onlyCampaignCreator {

    Mutated line:
             function transferCampaignCreatorQuickly(address newCampCreator) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 145
    Result: Lived
    Original line:
             ) public CampPermissionGroups(_campaignCreator) {

    Mutated line:
             ) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 178
    Result: Lived
    Original line:
             function handleWithdrawal(address staker, uint reduceAmount) public onlyStakingContract returns(bool) {

    Mutated line:
             function handleWithdrawal(address staker, uint reduceAmount) public  returns(bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 230
    Result: Lived
    Original line:
                 public onlyCampaignCreator returns(uint campID)

    Mutated line:
                 public  returns(uint campID)


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 301
    Result: Lived
    Original line:
             function cancelCampaign(uint campID) public onlyCampaignCreator {

    Mutated line:
             function cancelCampaign(uint campID) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 381
    Result: Lived
    Original line:
             function claimReward(address staker, uint epoch) public nonReentrant {

    Mutated line:
             function claimReward(address staker, uint epoch) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a != 0 || c / a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c / a != b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(b > 0, "divider <= 0");

    Mutated line:
                 require(b >= 0, "divider <= 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a != b * c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(b <= a, "sub underflow");

    Mutated line:
                 require(b < a, "sub underflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 48
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a <= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 56
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a <= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length <= size + 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 140
    Result: Lived
    Original line:
                 require(_value <= _allowance, "transfer more then allowed");

    Mutated line:
                 require(_value < _allowance, "transfer more then allowed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a != 0 || c / a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c / a != b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(b > 0, "divider <= 0");

    Mutated line:
                 require(b <= 0, "divider <= 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a != b * c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(b <= a, "sub underflow");

    Mutated line:
                 require(b > a, "sub underflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 39
    Result: Lived
    Original line:
                 require(c >= a, "add overflow");

    Mutated line:
                 require(c < a, "add overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 44
    Result: Lived
    Original line:
                 return a >= b ? a : b;

    Mutated line:
                 return a < b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 48
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a >= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 52
    Result: Lived
    Original line:
                 return a >= b ? a : b;

    Mutated line:
                 return a < b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 56
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a >= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length >= size + 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 140
    Result: Lived
    Original line:
                 require(_value <= _allowance, "transfer more then allowed");

    Mutated line:
                 require(_value > _allowance, "transfer more then allowed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 20
    Result: Lived
    Original line:
                 uint c = a * b;

    Mutated line:
                 uint c = a / b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c * a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 27
    Result: Lived
    Original line:
                 uint c = a / b;

    Mutated line:
                 uint c = a * b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a == b * c - a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a == b / c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 34
    Result: Lived
    Original line:
                 return a - b;

    Mutated line:
                 return a + b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 38
    Result: Lived
    Original line:
                 uint c = a + b;

    Mutated line:
                 uint c = a - b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length < size - 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 109
    Result: Lived
    Original line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 * 32) returns (bool) {

    Mutated line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 / 32) returns (bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 174
    Result: Lived
    Original line:
             uint public INITIAL_SUPPLY = 10**(50+18);

    Mutated line:
             uint public INITIAL_SUPPLY = 10**(50 - 18);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 104
    Result: Lived
    Original line:
                     revert("short address");

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 109
    Result: Lived
    Original line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 * 32) returns (bool) {

    Mutated line:
             function transfer(address _to, uint _value)  public  returns (bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 93
    Result: Lived
    Original line:
                     msg.sender == address(kyberDAO),

    Mutated line:
                     msg.sender != address(kyberDAO),


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 101
    Result: Lived
    Original line:
                     msg.sender == address(kyberNetwork),

    Mutated line:
                     msg.sender != address(kyberNetwork),


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 133
    Result: Lived
    Original line:
                 if (feeBRR == 0) {

    Mutated line:
                 if (feeBRR != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 143
    Result: Lived
    Original line:
                 for (uint i = 0; i < rebateWallets.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= rebateWallets.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 170
    Result: Lived
    Original line:
                 require(percentageInPrecision <= PRECISION, "percentage high");

    Mutated line:
                 require(percentageInPrecision < PRECISION, "percentage high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 174
    Result: Lived
    Original line:
                 require(rewardsPaidPerEpoch[epoch] + amount <= rewardsPerEpoch[epoch], "paid per epoch high");

    Mutated line:
                 require(rewardsPaidPerEpoch[epoch] + amount < rewardsPerEpoch[epoch], "paid per epoch high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 193
    Result: Lived
    Original line:
                 require(rebatePerWallet[rebateWallet] > 1, "no rebate to claim");

    Mutated line:
                 require(rebatePerWallet[rebateWallet] >= 1, "no rebate to claim");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 217
    Result: Lived
    Original line:
                 require(feePerPlatformWallet[platformWallet] > 1, "no fee to claim");

    Mutated line:
                 require(feePerPlatformWallet[platformWallet] >= 1, "no fee to claim");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 238
    Result: Lived
    Original line:
                 require(msg.sender == daoSetter, "Only daoSetter");

    Mutated line:
                 require(msg.sender != daoSetter, "Only daoSetter");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 252
    Result: Lived
    Original line:
                 require(block.number > lastBurnBlock + burnBlockInterval, "Wait more block to burn");

    Mutated line:
                 require(block.number >= lastBurnBlock + burnBlockInterval, "Wait more block to burn");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 262
    Result: Lived
    Original line:
                 srcQty = srcQty > WEI_TO_BURN ? WEI_TO_BURN : srcQty;

    Mutated line:
                 srcQty = srcQty >= WEI_TO_BURN ? WEI_TO_BURN : srcQty;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 268
    Result: Lived
    Original line:
                 require(kyberEthKncRate <= MAX_RATE && kyberKncEthRate <= MAX_RATE, "KNC rate out of bounds");

    Mutated line:
                 require(kyberEthKncRate < MAX_RATE && kyberKncEthRate <= MAX_RATE, "KNC rate out of bounds");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 268
    Result: Lived
    Original line:
                 require(kyberEthKncRate <= MAX_RATE && kyberKncEthRate <= MAX_RATE, "KNC rate out of bounds");

    Mutated line:
                 require(kyberEthKncRate <= MAX_RATE && kyberKncEthRate < MAX_RATE, "KNC rate out of bounds");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 269
    Result: Lived
    Original line:
                 require(kyberEthKncRate * kyberKncEthRate <= PRECISION ** 2, "internal KNC arb");

    Mutated line:
                 require(kyberEthKncRate * kyberKncEthRate < PRECISION ** 2, "internal KNC arb");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 270
    Result: Lived
    Original line:
                 require(kyberEthKncRate * kyberKncEthRate > PRECISION ** 2 / 2, "high KNC spread");

    Mutated line:
                 require(kyberEthKncRate * kyberKncEthRate >= PRECISION ** 2 / 2, "high KNC spread");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 302
    Result: Lived
    Original line:
                 require(rewardAmount > 0, "reward is 0");

    Mutated line:
                 require(rewardAmount >= 0, "reward is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 326
    Result: Lived
    Original line:
                 if (block.number > expiryBlock && kyberDAO != IKyberDAO(0)) {

    Mutated line:
                 if (block.number >= expiryBlock && kyberDAO != IKyberDAO(0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 330
    Result: Lived
    Original line:
                     require(burnBps + rewardBps + rebateBps == BPS, "Bad BRR values");

    Mutated line:
                     require(burnBps + rewardBps + rebateBps != BPS, "Bad BRR values");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 331
    Result: Lived
    Original line:
                     require(burnBps <= BPS, "burnBps overflow");

    Mutated line:
                     require(burnBps < BPS, "burnBps overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 332
    Result: Lived
    Original line:
                     require(rewardBps <= BPS, "rewardBps overflow");

    Mutated line:
                     require(rewardBps < BPS, "rewardBps overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 333
    Result: Lived
    Original line:
                     require(rebateBps <= BPS, "rebateBps overflow");

    Mutated line:
                     require(rebateBps < BPS, "rebateBps overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 343
    Result: Lived
    Original line:
                 require(expiryBlock < 2 ** 64, "expiry block overflow");

    Mutated line:
                 require(expiryBlock <= 2 ** 64, "expiry block overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 344
    Result: Lived
    Original line:
                 require(epoch < 2 ** 32, "epoch overflow");

    Mutated line:
                 require(epoch <= 2 ** 32, "epoch overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 69
    Result: Lived
    Original line:
                 require(address(_daoSetter) != address(0), "FeeHandler: daoSetter 0");

    Mutated line:
                 require(address(_daoSetter) == address(0), "FeeHandler: daoSetter 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 70
    Result: Lived
    Original line:
                 require(address(_networkProxy) != address(0), "FeeHandler: KyberNetworkProxy 0");

    Mutated line:
                 require(address(_networkProxy) == address(0), "FeeHandler: KyberNetworkProxy 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 71
    Result: Lived
    Original line:
                 require(address(_kyberNetwork) != address(0), "FeeHandler: KyberNetwork 0");

    Mutated line:
                 require(address(_kyberNetwork) == address(0), "FeeHandler: KyberNetwork 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 72
    Result: Lived
    Original line:
                 require(address(_knc) != address(0), "FeeHandler: KNC 0");

    Mutated line:
                 require(address(_knc) == address(0), "FeeHandler: KNC 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 73
    Result: Lived
    Original line:
                 require(_burnBlockInterval != 0, "FeeHandler: _burnBlockInterval 0");

    Mutated line:
                 require(_burnBlockInterval == 0, "FeeHandler: _burnBlockInterval 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 93
    Result: Lived
    Original line:
                     msg.sender == address(kyberDAO),

    Mutated line:
                     msg.sender != address(kyberDAO),


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 101
    Result: Lived
    Original line:
                     msg.sender == address(kyberNetwork),

    Mutated line:
                     msg.sender != address(kyberNetwork),


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 126
    Result: Lived
    Original line:
                 require(msg.value >= platformFeeWei, "msg.value low");

    Mutated line:
                 require(msg.value < platformFeeWei, "msg.value low");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 133
    Result: Lived
    Original line:
                 if (feeBRR == 0) {

    Mutated line:
                 if (feeBRR != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 143
    Result: Lived
    Original line:
                 for (uint i = 0; i < rebateWallets.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= rebateWallets.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 170
    Result: Lived
    Original line:
                 require(percentageInPrecision <= PRECISION, "percentage high");

    Mutated line:
                 require(percentageInPrecision > PRECISION, "percentage high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 173
    Result: Lived
    Original line:
                 require(totalPayoutBalance >= amount, "Amount underflow");

    Mutated line:
                 require(totalPayoutBalance < amount, "Amount underflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 174
    Result: Lived
    Original line:
                 require(rewardsPaidPerEpoch[epoch] + amount <= rewardsPerEpoch[epoch], "paid per epoch high");

    Mutated line:
                 require(rewardsPaidPerEpoch[epoch] + amount > rewardsPerEpoch[epoch], "paid per epoch high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 193
    Result: Lived
    Original line:
                 require(rebatePerWallet[rebateWallet] > 1, "no rebate to claim");

    Mutated line:
                 require(rebatePerWallet[rebateWallet] <= 1, "no rebate to claim");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 197
    Result: Lived
    Original line:
                 require(totalPayoutBalance >= amount, "amount too high");

    Mutated line:
                 require(totalPayoutBalance < amount, "amount too high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 217
    Result: Lived
    Original line:
                 require(feePerPlatformWallet[platformWallet] > 1, "no fee to claim");

    Mutated line:
                 require(feePerPlatformWallet[platformWallet] <= 1, "no fee to claim");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 221
    Result: Lived
    Original line:
                 require(totalPayoutBalance >= amount, "amount too high");

    Mutated line:
                 require(totalPayoutBalance < amount, "amount too high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 238
    Result: Lived
    Original line:
                 require(msg.sender == daoSetter, "Only daoSetter");

    Mutated line:
                 require(msg.sender != daoSetter, "Only daoSetter");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 252
    Result: Lived
    Original line:
                 require(block.number > lastBurnBlock + burnBlockInterval, "Wait more block to burn");

    Mutated line:
                 require(block.number <= lastBurnBlock + burnBlockInterval, "Wait more block to burn");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 259
    Result: Lived
    Original line:
                 require(balance >= totalPayoutBalance, "contract balance too low");

    Mutated line:
                 require(balance < totalPayoutBalance, "contract balance too low");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 262
    Result: Lived
    Original line:
                 srcQty = srcQty > WEI_TO_BURN ? WEI_TO_BURN : srcQty;

    Mutated line:
                 srcQty = srcQty <= WEI_TO_BURN ? WEI_TO_BURN : srcQty;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 268
    Result: Lived
    Original line:
                 require(kyberEthKncRate <= MAX_RATE && kyberKncEthRate <= MAX_RATE, "KNC rate out of bounds");

    Mutated line:
                 require(kyberEthKncRate > MAX_RATE && kyberKncEthRate <= MAX_RATE, "KNC rate out of bounds");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 268
    Result: Lived
    Original line:
                 require(kyberEthKncRate <= MAX_RATE && kyberKncEthRate <= MAX_RATE, "KNC rate out of bounds");

    Mutated line:
                 require(kyberEthKncRate <= MAX_RATE && kyberKncEthRate > MAX_RATE, "KNC rate out of bounds");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 269
    Result: Lived
    Original line:
                 require(kyberEthKncRate * kyberKncEthRate <= PRECISION ** 2, "internal KNC arb");

    Mutated line:
                 require(kyberEthKncRate * kyberKncEthRate > PRECISION ** 2, "internal KNC arb");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 270
    Result: Lived
    Original line:
                 require(kyberEthKncRate * kyberKncEthRate > PRECISION ** 2 / 2, "high KNC spread");

    Mutated line:
                 require(kyberEthKncRate * kyberKncEthRate <= PRECISION ** 2 / 2, "high KNC spread");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 297
    Result: Lived
    Original line:
                 require(address(kyberDAO) != address(0), "kyberDAO addr missing");

    Mutated line:
                 require(address(kyberDAO) == address(0), "kyberDAO addr missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 302
    Result: Lived
    Original line:
                 require(rewardAmount > 0, "reward is 0");

    Mutated line:
                 require(rewardAmount <= 0, "reward is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 304
    Result: Lived
    Original line:
                 require(totalPayoutBalance >= rewardAmount, "total reward less than epoch reward");

    Mutated line:
                 require(totalPayoutBalance < rewardAmount, "total reward less than epoch reward");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 326
    Result: Lived
    Original line:
                 if (block.number > expiryBlock && kyberDAO != IKyberDAO(0)) {

    Mutated line:
                 if (block.number <= expiryBlock && kyberDAO != IKyberDAO(0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 326
    Result: Lived
    Original line:
                 if (block.number > expiryBlock && kyberDAO != IKyberDAO(0)) {

    Mutated line:
                 if (block.number > expiryBlock && kyberDAO == IKyberDAO(0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 330
    Result: Lived
    Original line:
                     require(burnBps + rewardBps + rebateBps == BPS, "Bad BRR values");

    Mutated line:
                     require(burnBps + rewardBps + rebateBps != BPS, "Bad BRR values");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 331
    Result: Lived
    Original line:
                     require(burnBps <= BPS, "burnBps overflow");

    Mutated line:
                     require(burnBps > BPS, "burnBps overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 332
    Result: Lived
    Original line:
                     require(rewardBps <= BPS, "rewardBps overflow");

    Mutated line:
                     require(rewardBps > BPS, "rewardBps overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 333
    Result: Lived
    Original line:
                     require(rebateBps <= BPS, "rebateBps overflow");

    Mutated line:
                     require(rebateBps > BPS, "rebateBps overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 343
    Result: Lived
    Original line:
                 require(expiryBlock < 2 ** 64, "expiry block overflow");

    Mutated line:
                 require(expiryBlock >= 2 ** 64, "expiry block overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 344
    Result: Lived
    Original line:
                 require(epoch < 2 ** 32, "epoch overflow");

    Mutated line:
                 require(epoch >= 2 ** 32, "epoch overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 36
    Result: Lived
    Original line:
             uint public constant   WEI_TO_BURN = 2 * 10 ** ETH_DECIMALS;

    Mutated line:
             uint public constant   WEI_TO_BURN = 2 / 10 ** ETH_DECIMALS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 131
    Result: Lived
    Original line:
                 uint feeBRR = msg.value - platformFeeWei;

    Mutated line:
                 uint feeBRR = msg.value + platformFeeWei;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 145
    Result: Lived
    Original line:
                     rebatePerWallet[rebateWallets[i]] += rebateWei * rebateBpsPerWallet[i] / BPS;

    Mutated line:
                     rebatePerWallet[rebateWallets[i]] += rebateWei * rebateBpsPerWallet[i] * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 145
    Result: Lived
    Original line:
                     rebatePerWallet[rebateWallets[i]] += rebateWei * rebateBpsPerWallet[i] / BPS;

    Mutated line:
                     rebatePerWallet[rebateWallets[i]] += rebateWei / rebateBpsPerWallet[i] / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 151
    Result: Lived
    Original line:
                 totalPayoutBalance += (platformFeeWei + rewardWei + rebateWei);

    Mutated line:
                 totalPayoutBalance += (platformFeeWei + rewardWei - rebateWei);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 151
    Result: Lived
    Original line:
                 totalPayoutBalance += (platformFeeWei + rewardWei + rebateWei);

    Mutated line:
                 totalPayoutBalance += (platformFeeWei - rewardWei + rebateWei);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 154
    Result: Lived
    Original line:
                     (feeBRR - rewardWei - rebateWei));

    Mutated line:
                     (feeBRR - rewardWei + rebateWei));


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 154
    Result: Lived
    Original line:
                     (feeBRR - rewardWei - rebateWei));

    Mutated line:
                     (feeBRR + rewardWei - rebateWei));


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 171
    Result: Lived
    Original line:
                 uint amount = rewardsPerEpoch[epoch] * percentageInPrecision / PRECISION;

    Mutated line:
                 uint amount = rewardsPerEpoch[epoch] * percentageInPrecision * PRECISION;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 171
    Result: Lived
    Original line:
                 uint amount = rewardsPerEpoch[epoch] * percentageInPrecision / PRECISION;

    Mutated line:
                 uint amount = rewardsPerEpoch[epoch] / percentageInPrecision / PRECISION;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 174
    Result: Lived
    Original line:
                 require(rewardsPaidPerEpoch[epoch] + amount <= rewardsPerEpoch[epoch], "paid per epoch high");

    Mutated line:
                 require(rewardsPaidPerEpoch[epoch] - amount <= rewardsPerEpoch[epoch], "paid per epoch high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 195
    Result: Lived
    Original line:
                 uint amount = rebatePerWallet[rebateWallet] - 1;

    Mutated line:
                 uint amount = rebatePerWallet[rebateWallet] + 1;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 219
    Result: Lived
    Original line:
                 uint amount = feePerPlatformWallet[platformWallet] - 1;

    Mutated line:
                 uint amount = feePerPlatformWallet[platformWallet] + 1;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 252
    Result: Lived
    Original line:
                 require(block.number > lastBurnBlock + burnBlockInterval, "Wait more block to burn");

    Mutated line:
                 require(block.number > lastBurnBlock - burnBlockInterval, "Wait more block to burn");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 261
    Result: Lived
    Original line:
                 uint srcQty = balance - totalPayoutBalance;

    Mutated line:
                 uint srcQty = balance + totalPayoutBalance;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 269
    Result: Lived
    Original line:
                 require(kyberEthKncRate * kyberKncEthRate <= PRECISION ** 2, "internal KNC arb");

    Mutated line:
                 require(kyberEthKncRate / kyberKncEthRate <= PRECISION ** 2, "internal KNC arb");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 270
    Result: Lived
    Original line:
                 require(kyberEthKncRate * kyberKncEthRate > PRECISION ** 2 / 2, "high KNC spread");

    Mutated line:
                 require(kyberEthKncRate / kyberKncEthRate > PRECISION ** 2 / 2, "high KNC spread");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 270
    Result: Lived
    Original line:
                 require(kyberEthKncRate * kyberKncEthRate > PRECISION ** 2 / 2, "high KNC spread");

    Mutated line:
                 require(kyberEthKncRate * kyberKncEthRate > PRECISION ** 2 * 2, "high KNC spread");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 279
    Result: Lived
    Original line:
                     kyberEthKncRate * 97 / 100,

    Mutated line:
                     kyberEthKncRate * 97 * 100,


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 279
    Result: Lived
    Original line:
                     kyberEthKncRate * 97 / 100,

    Mutated line:
                     kyberEthKncRate / 97 / 100,


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 330
    Result: Lived
    Original line:
                     require(burnBps + rewardBps + rebateBps == BPS, "Bad BRR values");

    Mutated line:
                     require(burnBps + rewardBps - rebateBps == BPS, "Bad BRR values");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 330
    Result: Lived
    Original line:
                     require(burnBps + rewardBps + rebateBps == BPS, "Bad BRR values");

    Mutated line:
                     require(burnBps - rewardBps + rebateBps == BPS, "Bad BRR values");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 360
    Result: Lived
    Original line:
                 rebateWei = RRAmountWei * rebateInBps / BPS;

    Mutated line:
                 rebateWei = RRAmountWei * rebateInBps * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 360
    Result: Lived
    Original line:
                 rebateWei = RRAmountWei * rebateInBps / BPS;

    Mutated line:
                 rebateWei = RRAmountWei / rebateInBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 361
    Result: Lived
    Original line:
                 rewardWei = RRAmountWei * rewardInBps / BPS;

    Mutated line:
                 rewardWei = RRAmountWei * rewardInBps * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 361
    Result: Lived
    Original line:
                 rewardWei = RRAmountWei * rewardInBps / BPS;

    Mutated line:
                 rewardWei = RRAmountWei / rewardInBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 129
    Result: Lived
    Original line:
                 feePerPlatformWallet[platformWallet] += platformFeeWei;

    Mutated line:
                 feePerPlatformWallet[platformWallet] -= platformFeeWei;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 135
    Result: Lived
    Original line:
                     totalPayoutBalance += platformFeeWei;

    Mutated line:
                     totalPayoutBalance -= platformFeeWei;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 145
    Result: Lived
    Original line:
                     rebatePerWallet[rebateWallets[i]] += rebateWei * rebateBpsPerWallet[i] / BPS;

    Mutated line:
                     rebatePerWallet[rebateWallets[i]] -= rebateWei * rebateBpsPerWallet[i] / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 148
    Result: Lived
    Original line:
                 rewardsPerEpoch[epoch] += rewardWei;

    Mutated line:
                 rewardsPerEpoch[epoch] -= rewardWei;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 151
    Result: Lived
    Original line:
                 totalPayoutBalance += (platformFeeWei + rewardWei + rebateWei);

    Mutated line:
                 totalPayoutBalance -= (platformFeeWei + rewardWei + rebateWei);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 175
    Result: Lived
    Original line:
                 rewardsPaidPerEpoch[epoch] += amount;

    Mutated line:
                 rewardsPaidPerEpoch[epoch] -= amount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 176
    Result: Lived
    Original line:
                 totalPayoutBalance -= amount;

    Mutated line:
                 totalPayoutBalance += amount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 198
    Result: Lived
    Original line:
                 totalPayoutBalance -= amount;

    Mutated line:
                 totalPayoutBalance += amount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 222
    Result: Lived
    Original line:
                 totalPayoutBalance -= amount;

    Mutated line:
                 totalPayoutBalance += amount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 305
    Result: Lived
    Original line:
                 totalPayoutBalance -= rewardAmount;

    Mutated line:
                 totalPayoutBalance += rewardAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 82
    Result: Lived
    Original line:
                 updateBRRData(DEFAULT_REWARD_BPS, DEFAULT_REBATE_BPS, block.number, 0);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 337
    Result: Lived
    Original line:
                     updateBRRData(rewardBps, rebateBps, expiryBlock, epoch);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 124
    Result: Lived
    Original line:
                 external payable onlyKyberNetwork returns(bool)

    Mutated line:
                 external payable  returns(bool)


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberFeeHandler.sol
    Line nr: 167
    Result: Lived
    Original line:
                 external onlyDAO returns(bool)

    Mutated line:
                 external  returns(bool)


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 38
    Result: Lived
    Original line:
                 require(_epochPeriod > 0, "ctor: epoch duration must be positive");

    Mutated line:
                 require(_epochPeriod >= 0, "ctor: epoch duration must be positive");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 50
    Result: Lived
    Original line:
                 require(msg.sender == daoContractSetter, "sender is not daoContractSetter");

    Mutated line:
                 require(msg.sender != daoContractSetter, "sender is not daoContractSetter");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 67
    Result: Lived
    Original line:
                 require(daoContract.EPOCH_PERIOD_BLOCKS() == EPOCH_PERIOD_BLOCKS, "updateDAO: DAO and Staking have different epoch period");

    Mutated line:
                 require(daoContract.EPOCH_PERIOD_BLOCKS() != EPOCH_PERIOD_BLOCKS, "updateDAO: DAO and Staking have different epoch period");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 68
    Result: Lived
    Original line:
                 require(daoContract.FIRST_EPOCH_START_BLOCK() == FIRST_EPOCH_START_BLOCK, "updateDAO: DAO and Staking have different start block");

    Mutated line:
                 require(daoContract.FIRST_EPOCH_START_BLOCK() != FIRST_EPOCH_START_BLOCK, "updateDAO: DAO and Staking have different start block");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 92
    Result: Lived
    Original line:
                 if (dAddr == curDAddr) { return false; }

    Mutated line:
                 if (dAddr != curDAddr) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 135
    Result: Lived
    Original line:
                 require(amount > 0, "deposit: amount to deposit should be positive");

    Mutated line:
                 require(amount >= 0, "deposit: amount to deposit should be positive");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 166
    Result: Lived
    Original line:
                 require(amount > 0, "withdraw: amount is 0");

    Mutated line:
                 require(amount >= 0, "withdraw: amount is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 186
    Result: Lived
    Original line:
                 if (reduceAmount > 0) {

    Mutated line:
                 if (reduceAmount >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 226
    Result: Lived
    Original line:
                 require(msg.sender == address(daoContract), "initAndReturnData: sender is not DAO address");

    Mutated line:
                 require(msg.sender != address(daoContract), "initAndReturnData: sender is not DAO address");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 254
    Result: Lived
    Original line:
                 if (epoch > curEpoch + 1) { return 0; }

    Mutated line:
                 if (epoch >= curEpoch + 1) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 258
    Result: Lived
    Original line:
                     if (i == 0) { break; }

    Mutated line:
                     if (i != 0) { break; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 269
    Result: Lived
    Original line:
                 if (epoch > curEpoch + 1) { return 0; }

    Mutated line:
                 if (epoch >= curEpoch + 1) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 273
    Result: Lived
    Original line:
                     if (i == 0) { break; }

    Mutated line:
                     if (i != 0) { break; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 284
    Result: Lived
    Original line:
                 if (epoch > curEpoch + 1) { return address(0); }

    Mutated line:
                 if (epoch >= curEpoch + 1) { return address(0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 288
    Result: Lived
    Original line:
                     if (i == 0) { break; }

    Mutated line:
                     if (i != 0) { break; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 296
    Result: Lived
    Original line:
                 return latestDelegatedAddress[staker] == address(0) ? staker : latestDelegatedAddress[staker];

    Mutated line:
                 return latestDelegatedAddress[staker] != address(0) ? staker : latestDelegatedAddress[staker];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 315
    Result: Lived
    Original line:
                 if (ldAddress == address(0)) {

    Mutated line:
                 if (ldAddress != address(0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 38
    Result: Lived
    Original line:
                 require(_epochPeriod > 0, "ctor: epoch duration must be positive");

    Mutated line:
                 require(_epochPeriod <= 0, "ctor: epoch duration must be positive");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 39
    Result: Lived
    Original line:
                 require(_startBlock >= block.number, "ctor: start block should not be in the past");

    Mutated line:
                 require(_startBlock < block.number, "ctor: start block should not be in the past");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 40
    Result: Lived
    Original line:
                 require(_kncToken != address(0), "ctor: KNC address is missing");

    Mutated line:
                 require(_kncToken == address(0), "ctor: KNC address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 41
    Result: Lived
    Original line:
                 require(_daoContractSetter != address(0), "ctor: daoContractSetter address is missing");

    Mutated line:
                 require(_daoContractSetter == address(0), "ctor: daoContractSetter address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 50
    Result: Lived
    Original line:
                 require(msg.sender == daoContractSetter, "sender is not daoContractSetter");

    Mutated line:
                 require(msg.sender != daoContractSetter, "sender is not daoContractSetter");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 63
    Result: Lived
    Original line:
                 require(_daoAddress != address(0), "updateDAO: DAO address is missing");

    Mutated line:
                 require(_daoAddress == address(0), "updateDAO: DAO address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 67
    Result: Lived
    Original line:
                 require(daoContract.EPOCH_PERIOD_BLOCKS() == EPOCH_PERIOD_BLOCKS, "updateDAO: DAO and Staking have different epoch period");

    Mutated line:
                 require(daoContract.EPOCH_PERIOD_BLOCKS() != EPOCH_PERIOD_BLOCKS, "updateDAO: DAO and Staking have different epoch period");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 68
    Result: Lived
    Original line:
                 require(daoContract.FIRST_EPOCH_START_BLOCK() == FIRST_EPOCH_START_BLOCK, "updateDAO: DAO and Staking have different start block");

    Mutated line:
                 require(daoContract.FIRST_EPOCH_START_BLOCK() != FIRST_EPOCH_START_BLOCK, "updateDAO: DAO and Staking have different start block");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 84
    Result: Lived
    Original line:
                 require(dAddr != address(0), "delegate: delegated address should not be 0x0");

    Mutated line:
                 require(dAddr == address(0), "delegate: delegated address should not be 0x0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 92
    Result: Lived
    Original line:
                 if (dAddr == curDAddr) { return false; }

    Mutated line:
                 if (dAddr != curDAddr) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 97
    Result: Lived
    Original line:
                 if (curDAddr != staker) {

    Mutated line:
                 if (curDAddr == staker) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 101
    Result: Lived
    Original line:
                         delegatedStake[curEpoch + 1][curDAddr] >= updatedStake,

    Mutated line:
                         delegatedStake[curEpoch + 1][curDAddr] < updatedStake,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 105
    Result: Lived
    Original line:
                         latestDelegatedStake[curDAddr] >= updatedStake,

    Mutated line:
                         latestDelegatedStake[curDAddr] < updatedStake,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 119
    Result: Lived
    Original line:
                 if (dAddr != staker) {

    Mutated line:
                 if (dAddr == staker) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 135
    Result: Lived
    Original line:
                 require(amount > 0, "deposit: amount to deposit should be positive");

    Mutated line:
                 require(amount <= 0, "deposit: amount to deposit should be positive");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 150
    Result: Lived
    Original line:
                 if (dAddr != staker) {

    Mutated line:
                 if (dAddr == staker) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 166
    Result: Lived
    Original line:
                 require(amount > 0, "withdraw: amount is 0");

    Mutated line:
                 require(amount <= 0, "withdraw: amount is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 171
    Result: Lived
    Original line:
                 require(latestStake[staker] >= amount, "withdraw: latest amount staked < withdrawal amount");

    Mutated line:
                 require(latestStake[staker] < amount, "withdraw: latest amount staked < withdrawal amount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 175
    Result: Lived
    Original line:
                 require(stake[curEpoch + 1][staker] >= amount, "withdraw: next epoch staked amt < withdrawal amount");

    Mutated line:
                 require(stake[curEpoch + 1][staker] < amount, "withdraw: next epoch staked amt < withdrawal amount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 186
    Result: Lived
    Original line:
                 if (reduceAmount > 0) {

    Mutated line:
                 if (reduceAmount <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 187
    Result: Lived
    Original line:
                     if (dAddr != staker) {

    Mutated line:
                     if (dAddr == staker) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 194
    Result: Lived
    Original line:
                     if (address(daoContract) != address(0)) {

    Mutated line:
                     if (address(daoContract) == address(0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 199
    Result: Lived
    Original line:
                 if (dAddr != staker) {

    Mutated line:
                 if (dAddr == staker) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 202
    Result: Lived
    Original line:
                         delegatedStake[curEpoch + 1][dAddr] >= amount,

    Mutated line:
                         delegatedStake[curEpoch + 1][dAddr] < amount,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 206
    Result: Lived
    Original line:
                         latestDelegatedStake[dAddr] >= amount,

    Mutated line:
                         latestDelegatedStake[dAddr] < amount,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 226
    Result: Lived
    Original line:
                 require(msg.sender == address(daoContract), "initAndReturnData: sender is not DAO address");

    Mutated line:
                 require(msg.sender != address(daoContract), "initAndReturnData: sender is not DAO address");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 254
    Result: Lived
    Original line:
                 if (epoch > curEpoch + 1) { return 0; }

    Mutated line:
                 if (epoch <= curEpoch + 1) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 258
    Result: Lived
    Original line:
                     if (i == 0) { break; }

    Mutated line:
                     if (i != 0) { break; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 269
    Result: Lived
    Original line:
                 if (epoch > curEpoch + 1) { return 0; }

    Mutated line:
                 if (epoch <= curEpoch + 1) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 273
    Result: Lived
    Original line:
                     if (i == 0) { break; }

    Mutated line:
                     if (i != 0) { break; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 284
    Result: Lived
    Original line:
                 if (epoch > curEpoch + 1) { return address(0); }

    Mutated line:
                 if (epoch <= curEpoch + 1) { return address(0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 288
    Result: Lived
    Original line:
                     if (i == 0) { break; }

    Mutated line:
                     if (i != 0) { break; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 296
    Result: Lived
    Original line:
                 return latestDelegatedAddress[staker] == address(0) ? staker : latestDelegatedAddress[staker];

    Mutated line:
                 return latestDelegatedAddress[staker] != address(0) ? staker : latestDelegatedAddress[staker];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 315
    Result: Lived
    Original line:
                 if (ldAddress == address(0)) {

    Mutated line:
                 if (ldAddress != address(0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 90
    Result: Lived
    Original line:
                 address curDAddr = delegatedAddress[curEpoch + 1][staker];

    Mutated line:
                 address curDAddr = delegatedAddress[curEpoch - 1][staker];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 94
    Result: Lived
    Original line:
                 uint updatedStake = stake[curEpoch + 1][staker];

    Mutated line:
                 uint updatedStake = stake[curEpoch - 1][staker];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 101
    Result: Lived
    Original line:
                         delegatedStake[curEpoch + 1][curDAddr] >= updatedStake,

    Mutated line:
                         delegatedStake[curEpoch - 1][curDAddr] >= updatedStake,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 109
    Result: Lived
    Original line:
                     delegatedStake[curEpoch + 1][curDAddr] = delegatedStake[curEpoch + 1][curDAddr].sub(updatedStake);

    Mutated line:
                     delegatedStake[curEpoch - 1][curDAddr] = delegatedStake[curEpoch + 1][curDAddr].sub(updatedStake);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 109
    Result: Lived
    Original line:
                     delegatedStake[curEpoch + 1][curDAddr] = delegatedStake[curEpoch + 1][curDAddr].sub(updatedStake);

    Mutated line:
                     delegatedStake[curEpoch + 1][curDAddr] = delegatedStake[curEpoch - 1][curDAddr].sub(updatedStake);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 116
    Result: Lived
    Original line:
                 delegatedAddress[curEpoch + 1][staker] = dAddr;

    Mutated line:
                 delegatedAddress[curEpoch - 1][staker] = dAddr;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 121
    Result: Lived
    Original line:
                     delegatedStake[curEpoch + 1][dAddr] = delegatedStake[curEpoch + 1][dAddr].add(updatedStake);

    Mutated line:
                     delegatedStake[curEpoch - 1][dAddr] = delegatedStake[curEpoch + 1][dAddr].add(updatedStake);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 121
    Result: Lived
    Original line:
                     delegatedStake[curEpoch + 1][dAddr] = delegatedStake[curEpoch + 1][dAddr].add(updatedStake);

    Mutated line:
                     delegatedStake[curEpoch + 1][dAddr] = delegatedStake[curEpoch - 1][dAddr].add(updatedStake);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 145
    Result: Lived
    Original line:
                 stake[curEpoch + 1][staker] = stake[curEpoch + 1][staker].add(amount);

    Mutated line:
                 stake[curEpoch - 1][staker] = stake[curEpoch + 1][staker].add(amount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 145
    Result: Lived
    Original line:
                 stake[curEpoch + 1][staker] = stake[curEpoch + 1][staker].add(amount);

    Mutated line:
                 stake[curEpoch + 1][staker] = stake[curEpoch - 1][staker].add(amount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 149
    Result: Lived
    Original line:
                 address dAddr = delegatedAddress[curEpoch + 1][staker];

    Mutated line:
                 address dAddr = delegatedAddress[curEpoch - 1][staker];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 152
    Result: Lived
    Original line:
                     delegatedStake[curEpoch + 1][dAddr] = delegatedStake[curEpoch + 1][dAddr].add(amount);

    Mutated line:
                     delegatedStake[curEpoch - 1][dAddr] = delegatedStake[curEpoch + 1][dAddr].add(amount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 152
    Result: Lived
    Original line:
                     delegatedStake[curEpoch + 1][dAddr] = delegatedStake[curEpoch + 1][dAddr].add(amount);

    Mutated line:
                     delegatedStake[curEpoch + 1][dAddr] = delegatedStake[curEpoch - 1][dAddr].add(amount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 175
    Result: Lived
    Original line:
                 require(stake[curEpoch + 1][staker] >= amount, "withdraw: next epoch staked amt < withdrawal amount");

    Mutated line:
                 require(stake[curEpoch - 1][staker] >= amount, "withdraw: next epoch staked amt < withdrawal amount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 177
    Result: Lived
    Original line:
                 stake[curEpoch + 1][staker] = stake[curEpoch + 1][staker].sub(amount);

    Mutated line:
                 stake[curEpoch - 1][staker] = stake[curEpoch + 1][staker].sub(amount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 177
    Result: Lived
    Original line:
                 stake[curEpoch + 1][staker] = stake[curEpoch + 1][staker].sub(amount);

    Mutated line:
                 stake[curEpoch + 1][staker] = stake[curEpoch - 1][staker].sub(amount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 198
    Result: Lived
    Original line:
                 dAddr = delegatedAddress[curEpoch + 1][staker];

    Mutated line:
                 dAddr = delegatedAddress[curEpoch - 1][staker];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 202
    Result: Lived
    Original line:
                         delegatedStake[curEpoch + 1][dAddr] >= amount,

    Mutated line:
                         delegatedStake[curEpoch - 1][dAddr] >= amount,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 209
    Result: Lived
    Original line:
                     delegatedStake[curEpoch + 1][dAddr] = delegatedStake[curEpoch + 1][dAddr].sub(amount);

    Mutated line:
                     delegatedStake[curEpoch - 1][dAddr] = delegatedStake[curEpoch + 1][dAddr].sub(amount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 209
    Result: Lived
    Original line:
                     delegatedStake[curEpoch + 1][dAddr] = delegatedStake[curEpoch + 1][dAddr].sub(amount);

    Mutated line:
                     delegatedStake[curEpoch + 1][dAddr] = delegatedStake[curEpoch - 1][dAddr].sub(amount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 254
    Result: Lived
    Original line:
                 if (epoch > curEpoch + 1) { return 0; }

    Mutated line:
                 if (epoch > curEpoch - 1) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 269
    Result: Lived
    Original line:
                 if (epoch > curEpoch + 1) { return 0; }

    Mutated line:
                 if (epoch > curEpoch - 1) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 284
    Result: Lived
    Original line:
                 if (epoch > curEpoch + 1) { return address(0); }

    Mutated line:
                 if (epoch > curEpoch - 1) { return address(0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 333
    Result: Lived
    Original line:
                 if (!hasInited[epoch + 1][staker]) {

    Mutated line:
                 if (!hasInited[epoch - 1][staker]) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 334
    Result: Lived
    Original line:
                     hasInited[epoch + 1][staker] = true;

    Mutated line:
                     hasInited[epoch - 1][staker] = true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 335
    Result: Lived
    Original line:
                     delegatedAddress[epoch + 1][staker] = ldAddress;

    Mutated line:
                     delegatedAddress[epoch - 1][staker] = ldAddress;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 336
    Result: Lived
    Original line:
                     delegatedStake[epoch + 1][staker] = ldStake;

    Mutated line:
                     delegatedStake[epoch - 1][staker] = ldStake;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 337
    Result: Lived
    Original line:
                     stake[epoch + 1][staker] = lStakeBal;

    Mutated line:
                     stake[epoch - 1][staker] = lStakeBal;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 190
    Result: Lived
    Original line:
                         delegatedStake[curEpoch][dAddr] -= reduceAmount;

    Mutated line:
                         delegatedStake[curEpoch][dAddr] += reduceAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 88
    Result: Lived
    Original line:
                 initDataIfNeeded(staker, curEpoch);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 98
    Result: Lived
    Original line:
                     initDataIfNeeded(curDAddr, curEpoch);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 120
    Result: Lived
    Original line:
                     initDataIfNeeded(dAddr, curEpoch);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 143
    Result: Lived
    Original line:
                 initDataIfNeeded(staker, curEpoch);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 151
    Result: Lived
    Original line:
                     initDataIfNeeded(dAddr, curEpoch);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 173
    Result: Lived
    Original line:
                 initDataIfNeeded(staker, curEpoch);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 188
    Result: Lived
    Original line:
                         initDataIfNeeded(dAddr, curEpoch);

    Mutated line:
                         


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 200
    Result: Lived
    Original line:
                     initDataIfNeeded(dAddr, curEpoch);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 229
    Result: Lived
    Original line:
                 initDataIfNeeded(staker, curEpoch);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 62
    Result: Lived
    Original line:
             function updateDAOAddressAndRemoveSetter(address _daoAddress) public onlyDAOContractSetter {

    Mutated line:
             function updateDAOAddressAndRemoveSetter(address _daoAddress) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberStaking.sol
    Line nr: 165
    Result: Lived
    Original line:
             function withdraw(uint amount) public nonReentrant {

    Mutated line:
             function withdraw(uint amount) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockDAO.sol
    Line nr: 56
    Result: Lived
    Original line:
                 return (BPS - rewardInBPS - rebateInBPS, rewardInBPS, rebateInBPS, epoch, expiryBlockNumber);

    Mutated line:
                 return (BPS - rewardInBPS + rebateInBPS, rewardInBPS, rebateInBPS, epoch, expiryBlockNumber);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockDAO.sol
    Line nr: 56
    Result: Lived
    Original line:
                 return (BPS - rewardInBPS - rebateInBPS, rewardInBPS, rebateInBPS, epoch, expiryBlockNumber);

    Mutated line:
                 return (BPS + rewardInBPS - rebateInBPS, rewardInBPS, rebateInBPS, epoch, expiryBlockNumber);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockDAO.sol
    Line nr: 90
    Result: Lived
    Original line:
                 expiryBlockNumber = block.number + epochPeriod;

    Mutated line:
                 expiryBlockNumber = block.number - epochPeriod;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Withdrawable2.sol
    Line nr: 9
    Result: Lived
    Original line:
                 PermissionGroups2(_admin) 

    Mutated line:
                  


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Withdrawable2.sol
    Line nr: 18
    Result: Lived
    Original line:
             function withdrawToken(IERC20 token, uint amount, address sendTo) external onlyAdmin {

    Mutated line:
             function withdrawToken(IERC20 token, uint amount, address sendTo) external  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Withdrawable2.sol
    Line nr: 28
    Result: Lived
    Original line:
             function withdrawEther(uint amount, address payable sendTo) external onlyAdmin {

    Mutated line:
             function withdrawEther(uint amount, address payable sendTo) external  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberStakingMalicious.sol
    Line nr: 7
    Result: Lived
    Original line:
                 KyberStaking(_kncToken, _epochPeriod, _startBlock, _admin) public { }

    Mutated line:
                  public { }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockStakingContract.sol
    Line nr: 31
    Result: Lived
    Original line:
                 require(stake == expectedStake, "stake is incorrect");

    Mutated line:
                 require(stake != expectedStake, "stake is incorrect");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockStakingContract.sol
    Line nr: 32
    Result: Lived
    Original line:
                 require(delegatedStake == expectedDelegatedStake, "delegated stake is incorrect");

    Mutated line:
                 require(delegatedStake != expectedDelegatedStake, "delegated stake is incorrect");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockStakingContract.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(delegatedAddr == expectedDelegatedAddress, "delegated stake is incorrect");

    Mutated line:
                 require(delegatedAddr != expectedDelegatedAddress, "delegated stake is incorrect");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockStakingContract.sol
    Line nr: 31
    Result: Lived
    Original line:
                 require(stake == expectedStake, "stake is incorrect");

    Mutated line:
                 require(stake != expectedStake, "stake is incorrect");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockStakingContract.sol
    Line nr: 32
    Result: Lived
    Original line:
                 require(delegatedStake == expectedDelegatedStake, "delegated stake is incorrect");

    Mutated line:
                 require(delegatedStake != expectedDelegatedStake, "delegated stake is incorrect");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockStakingContract.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(delegatedAddr == expectedDelegatedAddress, "delegated stake is incorrect");

    Mutated line:
                 require(delegatedAddr != expectedDelegatedAddress, "delegated stake is incorrect");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockStakingContract.sol
    Line nr: 7
    Result: Lived
    Original line:
                 KyberStaking(_kncToken, _epochPeriod, _startBlock, _admin) public { }

    Mutated line:
                  public { }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockFeeHandlerNoContructor.sol
    Line nr: 19
    Result: Lived
    Original line:
                 require(rewardToClaim <= address(this).balance);

    Mutated line:
                 require(rewardToClaim < address(this).balance);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockFeeHandlerNoContructor.sol
    Line nr: 19
    Result: Lived
    Original line:
                 require(rewardToClaim <= address(this).balance);

    Mutated line:
                 require(rewardToClaim > address(this).balance);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockFeeHandlerNoContructor.sol
    Line nr: 18
    Result: Lived
    Original line:
                 uint rewardToClaim = percentInPrecision * reward / PRECISION;

    Mutated line:
                 uint rewardToClaim = percentInPrecision * reward * PRECISION;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockFeeHandlerNoContructor.sol
    Line nr: 18
    Result: Lived
    Original line:
                 uint rewardToClaim = percentInPrecision * reward / PRECISION;

    Mutated line:
                 uint rewardToClaim = percentInPrecision / reward / PRECISION;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 19
    Result: Lived
    Original line:
                 require(msg.sender == admin, "ONLY_ADMIN");

    Mutated line:
                 require(msg.sender != admin, "ONLY_ADMIN");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 70
    Result: Lived
    Original line:
                 require(pendingAdmin == msg.sender, "NOT_PENDING");

    Mutated line:
                 require(pendingAdmin != msg.sender, "NOT_PENDING");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 80
    Result: Lived
    Original line:
                 require(alertersGroup.length < MAX_GROUP_SIZE, "MAX_ALRTR_NUM");

    Mutated line:
                 require(alertersGroup.length <= MAX_GROUP_SIZE, "MAX_ALRTR_NUM");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 92
    Result: Lived
    Original line:
                     if (alertersGroup[i] == alerter) {

    Mutated line:
                     if (alertersGroup[i] != alerter) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 91
    Result: Lived
    Original line:
                 for (uint i = 0; i < alertersGroup.length; ++i) {

    Mutated line:
                 for (uint i = 0; i <= alertersGroup.length; ++i) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 105
    Result: Lived
    Original line:
                 require(operatorsGroup.length < MAX_GROUP_SIZE, "MAX_OPRTR_NUM");

    Mutated line:
                 require(operatorsGroup.length <= MAX_GROUP_SIZE, "MAX_OPRTR_NUM");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 117
    Result: Lived
    Original line:
                     if (operatorsGroup[i] == operator) {

    Mutated line:
                     if (operatorsGroup[i] != operator) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 116
    Result: Lived
    Original line:
                 for (uint i = 0; i < operatorsGroup.length; ++i) {

    Mutated line:
                 for (uint i = 0; i <= operatorsGroup.length; ++i) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 14
    Result: Lived
    Original line:
                 require(_admin != address(0), "Admin 0");

    Mutated line:
                 require(_admin == address(0), "Admin 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 19
    Result: Lived
    Original line:
                 require(msg.sender == admin, "ONLY_ADMIN");

    Mutated line:
                 require(msg.sender != admin, "ONLY_ADMIN");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 48
    Result: Lived
    Original line:
                 require(newAdmin != address(0), "TRANS_ADD_0");

    Mutated line:
                 require(newAdmin == address(0), "TRANS_ADD_0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 58
    Result: Lived
    Original line:
                 require(newAdmin != address(0), "TRANSQ_ADD_0");

    Mutated line:
                 require(newAdmin == address(0), "TRANSQ_ADD_0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 70
    Result: Lived
    Original line:
                 require(pendingAdmin == msg.sender, "NOT_PENDING");

    Mutated line:
                 require(pendingAdmin != msg.sender, "NOT_PENDING");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 80
    Result: Lived
    Original line:
                 require(alertersGroup.length < MAX_GROUP_SIZE, "MAX_ALRTR_NUM");

    Mutated line:
                 require(alertersGroup.length >= MAX_GROUP_SIZE, "MAX_ALRTR_NUM");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 92
    Result: Lived
    Original line:
                     if (alertersGroup[i] == alerter) {

    Mutated line:
                     if (alertersGroup[i] != alerter) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 91
    Result: Lived
    Original line:
                 for (uint i = 0; i < alertersGroup.length; ++i) {

    Mutated line:
                 for (uint i = 0; i >= alertersGroup.length; ++i) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 105
    Result: Lived
    Original line:
                 require(operatorsGroup.length < MAX_GROUP_SIZE, "MAX_OPRTR_NUM");

    Mutated line:
                 require(operatorsGroup.length >= MAX_GROUP_SIZE, "MAX_OPRTR_NUM");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 117
    Result: Lived
    Original line:
                     if (operatorsGroup[i] == operator) {

    Mutated line:
                     if (operatorsGroup[i] != operator) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 116
    Result: Lived
    Original line:
                 for (uint i = 0; i < operatorsGroup.length; ++i) {

    Mutated line:
                 for (uint i = 0; i >= operatorsGroup.length; ++i) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 93
    Result: Lived
    Original line:
                         alertersGroup[i] = alertersGroup[alertersGroup.length - 1];

    Mutated line:
                         alertersGroup[i] = alertersGroup[alertersGroup.length + 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 118
    Result: Lived
    Original line:
                         operatorsGroup[i] = operatorsGroup[operatorsGroup.length - 1];

    Mutated line:
                         operatorsGroup[i] = operatorsGroup[operatorsGroup.length + 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 119
    Result: Lived
    Original line:
                         operatorsGroup.length -= 1;

    Mutated line:
                         operatorsGroup.length += 1;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 47
    Result: Lived
    Original line:
             function transferAdmin(address newAdmin) public onlyAdmin {

    Mutated line:
             function transferAdmin(address newAdmin) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 57
    Result: Lived
    Original line:
             function transferAdminQuickly(address newAdmin) public onlyAdmin {

    Mutated line:
             function transferAdminQuickly(address newAdmin) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 78
    Result: Lived
    Original line:
             function addAlerter(address newAlerter) public onlyAdmin {

    Mutated line:
             function addAlerter(address newAlerter) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 87
    Result: Lived
    Original line:
             function removeAlerter (address alerter) public onlyAdmin {

    Mutated line:
             function removeAlerter (address alerter) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 103
    Result: Lived
    Original line:
             function addOperator(address newOperator) public onlyAdmin {

    Mutated line:
             function addOperator(address newOperator) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/PermissionGroups2.sol
    Line nr: 112
    Result: Lived
    Original line:
             function removeOperator (address operator) public onlyAdmin {

    Mutated line:
             function removeOperator (address operator) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 168
    Result: Lived
    Original line:
                 if (reserveIds.length > 0) {

    Mutated line:
                 if (reserveIds.length >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 173
    Result: Lived
    Original line:
                         if (keccak256(encodeOpcode(opcode)) == keccak256(encodeOpcode(TradeType.Split))) {

    Mutated line:
                         if (keccak256(encodeOpcode(opcode)) != keccak256(encodeOpcode(TradeType.Split))) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 171
    Result: Lived
    Original line:
                     for (uint i = 0; i < reserveIds.length; i++) {

    Mutated line:
                     for (uint i = 0; i <= reserveIds.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 178
    Result: Lived
    Original line:
                     require((bpsSoFar == BPS) || (bpsSoFar == 0), "BPS <> 10000");

    Mutated line:
                     require((bpsSoFar != BPS) || (bpsSoFar == 0), "BPS <> 10000");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 178
    Result: Lived
    Original line:
                     require((bpsSoFar == BPS) || (bpsSoFar == 0), "BPS <> 10000");

    Mutated line:
                     require((bpsSoFar == BPS) || (bpsSoFar != 0), "BPS <> 10000");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 197
    Result: Lived
    Original line:
                 if (opcodeKeccak == END_KECCAK) {

    Mutated line:
                 if (opcodeKeccak != END_KECCAK) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 199
    Result: Lived
    Original line:
                 } else if (opcodeKeccak == SEPARATOR_KECCAK) {

    Mutated line:
                 } else if (opcodeKeccak != SEPARATOR_KECCAK) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 201
    Result: Lived
    Original line:
                 } else if (opcodeKeccak == MASK_IN_KECCAK) {

    Mutated line:
                 } else if (opcodeKeccak != MASK_IN_KECCAK) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 204
    Result: Lived
    Original line:
                 } else if (opcodeKeccak == MASK_OUT_KECCAK) {

    Mutated line:
                 } else if (opcodeKeccak != MASK_OUT_KECCAK) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 207
    Result: Lived
    Original line:
                 } else if (opcodeKeccak == SPLIT_TRADE_KECCAK) {

    Mutated line:
                 } else if (opcodeKeccak != SPLIT_TRADE_KECCAK) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 240
    Result: Lived
    Original line:
                 for (uint i = 0; i < reservesLength; i++) {

    Mutated line:
                 for (uint i = 0; i <= reservesLength; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 258
    Result: Lived
    Original line:
                 if (bpsSoFar == BPS || bpsSoFar == 0) {

    Mutated line:
                 if (bpsSoFar != BPS || bpsSoFar == 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 258
    Result: Lived
    Original line:
                 if (bpsSoFar == BPS || bpsSoFar == 0) {

    Mutated line:
                 if (bpsSoFar == BPS || bpsSoFar != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 268
    Result: Lived
    Original line:
                 if (tradeType == TradeType.MaskIn) {

    Mutated line:
                 if (tradeType != TradeType.MaskIn) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 270
    Result: Lived
    Original line:
                 } else if (tradeType == TradeType.MaskOut) {

    Mutated line:
                 } else if (tradeType != TradeType.MaskOut) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 272
    Result: Lived
    Original line:
                 } else if (tradeType == TradeType.Split) {

    Mutated line:
                 } else if (tradeType != TradeType.Split) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 293
    Result: Lived
    Original line:
                 if (failedIndex == 0) {

    Mutated line:
                 if (failedIndex != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 296
    Result: Lived
    Original line:
                     for (uint i = 0; i < ethToTokenAddresses.length; i++) {

    Mutated line:
                     for (uint i = 0; i <= ethToTokenAddresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 316
    Result: Lived
    Original line:
                 if (failedIndex == 0) {

    Mutated line:
                 if (failedIndex != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 319
    Result: Lived
    Original line:
                     for (uint i = 0; i < tokenToEthAddresses.length; i++) {

    Mutated line:
                     for (uint i = 0; i <= tokenToEthAddresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 351
    Result: Lived
    Original line:
                 if (failedIndex == 0) {

    Mutated line:
                 if (failedIndex != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 355
    Result: Lived
    Original line:
                     for (uint i = 0; i < tokenToEthAddresses.length; i++) {

    Mutated line:
                     for (uint i = 0; i <= tokenToEthAddresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 358
    Result: Lived
    Original line:
                     for (uint i = 0; i < ethToTokenAddresses.length; i++) {

    Mutated line:
                     for (uint i = 0; i <= ethToTokenAddresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 168
    Result: Lived
    Original line:
                 if (reserveIds.length > 0) {

    Mutated line:
                 if (reserveIds.length <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 173
    Result: Lived
    Original line:
                         if (keccak256(encodeOpcode(opcode)) == keccak256(encodeOpcode(TradeType.Split))) {

    Mutated line:
                         if (keccak256(encodeOpcode(opcode)) != keccak256(encodeOpcode(TradeType.Split))) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 171
    Result: Lived
    Original line:
                     for (uint i = 0; i < reserveIds.length; i++) {

    Mutated line:
                     for (uint i = 0; i >= reserveIds.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 178
    Result: Lived
    Original line:
                     require((bpsSoFar == BPS) || (bpsSoFar == 0), "BPS <> 10000");

    Mutated line:
                     require((bpsSoFar != BPS) || (bpsSoFar == 0), "BPS <> 10000");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 178
    Result: Lived
    Original line:
                     require((bpsSoFar == BPS) || (bpsSoFar == 0), "BPS <> 10000");

    Mutated line:
                     require((bpsSoFar == BPS) || (bpsSoFar != 0), "BPS <> 10000");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 197
    Result: Lived
    Original line:
                 if (opcodeKeccak == END_KECCAK) {

    Mutated line:
                 if (opcodeKeccak != END_KECCAK) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 199
    Result: Lived
    Original line:
                 } else if (opcodeKeccak == SEPARATOR_KECCAK) {

    Mutated line:
                 } else if (opcodeKeccak != SEPARATOR_KECCAK) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 201
    Result: Lived
    Original line:
                 } else if (opcodeKeccak == MASK_IN_KECCAK) {

    Mutated line:
                 } else if (opcodeKeccak != MASK_IN_KECCAK) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 204
    Result: Lived
    Original line:
                 } else if (opcodeKeccak == MASK_OUT_KECCAK) {

    Mutated line:
                 } else if (opcodeKeccak != MASK_OUT_KECCAK) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 207
    Result: Lived
    Original line:
                 } else if (opcodeKeccak == SPLIT_TRADE_KECCAK) {

    Mutated line:
                 } else if (opcodeKeccak != SPLIT_TRADE_KECCAK) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 240
    Result: Lived
    Original line:
                 for (uint i = 0; i < reservesLength; i++) {

    Mutated line:
                 for (uint i = 0; i >= reservesLength; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 258
    Result: Lived
    Original line:
                 if (bpsSoFar == BPS || bpsSoFar == 0) {

    Mutated line:
                 if (bpsSoFar != BPS || bpsSoFar == 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 258
    Result: Lived
    Original line:
                 if (bpsSoFar == BPS || bpsSoFar == 0) {

    Mutated line:
                 if (bpsSoFar == BPS || bpsSoFar != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 268
    Result: Lived
    Original line:
                 if (tradeType == TradeType.MaskIn) {

    Mutated line:
                 if (tradeType != TradeType.MaskIn) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 270
    Result: Lived
    Original line:
                 } else if (tradeType == TradeType.MaskOut) {

    Mutated line:
                 } else if (tradeType != TradeType.MaskOut) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 272
    Result: Lived
    Original line:
                 } else if (tradeType == TradeType.Split) {

    Mutated line:
                 } else if (tradeType != TradeType.Split) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 293
    Result: Lived
    Original line:
                 if (failedIndex == 0) {

    Mutated line:
                 if (failedIndex != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 296
    Result: Lived
    Original line:
                     for (uint i = 0; i < ethToTokenAddresses.length; i++) {

    Mutated line:
                     for (uint i = 0; i >= ethToTokenAddresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 316
    Result: Lived
    Original line:
                 if (failedIndex == 0) {

    Mutated line:
                 if (failedIndex != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 319
    Result: Lived
    Original line:
                     for (uint i = 0; i < tokenToEthAddresses.length; i++) {

    Mutated line:
                     for (uint i = 0; i >= tokenToEthAddresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 351
    Result: Lived
    Original line:
                 if (failedIndex == 0) {

    Mutated line:
                 if (failedIndex != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 355
    Result: Lived
    Original line:
                     for (uint i = 0; i < tokenToEthAddresses.length; i++) {

    Mutated line:
                     for (uint i = 0; i >= tokenToEthAddresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 358
    Result: Lived
    Original line:
                     for (uint i = 0; i < ethToTokenAddresses.length; i++) {

    Mutated line:
                     for (uint i = 0; i >= ethToTokenAddresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 175
    Result: Lived
    Original line:
                             bpsSoFar += bps[i];

    Mutated line:
                             bpsSoFar -= bps[i];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 195
    Result: Lived
    Original line:
                 tradeHint.hintIndex += 1;

    Mutated line:
                 tradeHint.hintIndex -= 1;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 243
    Result: Lived
    Original line:
                     tradeHint.hintIndex += RESERVE_ID_LENGTH;

    Mutated line:
                     tradeHint.hintIndex -= RESERVE_ID_LENGTH;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 247
    Result: Lived
    Original line:
                         bpsSoFar += splitValuesBps[i];

    Mutated line:
                         bpsSoFar -= splitValuesBps[i];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 248
    Result: Lived
    Original line:
                         tradeHint.hintIndex += 2;

    Mutated line:
                         tradeHint.hintIndex -= 2;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 48
    Result: Lived
    Original line:
                 decodeOperation(hint, tradeHint, false);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 71
    Result: Lived
    Original line:
                 decodeOperation(hint, tradeHint, true);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 97
    Result: Lived
    Original line:
                 decodeOperation(hint, tradeHint, true);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 208
    Result: Lived
    Original line:
                     decodeReservesFromHint(true, hint, TradeType.Split, tradeHint, isTokenToEth);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 209
    Result: Lived
    Original line:
                     decodeOperation(hint, tradeHint, isTokenToEth);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 205
    Result: Lived
    Original line:
                     decodeReservesFromHint(false, hint, TradeType.MaskOut, tradeHint, isTokenToEth);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 206
    Result: Lived
    Original line:
                     decodeOperation(hint, tradeHint, isTokenToEth);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 202
    Result: Lived
    Original line:
                     decodeReservesFromHint(false, hint, TradeType.MaskIn, tradeHint, isTokenToEth);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 203
    Result: Lived
    Original line:
                     decodeOperation(hint, tradeHint, isTokenToEth);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 200
    Result: Lived
    Original line:
                     decodeOperation(hint, tradeHint, false);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberHintHandler.sol
    Line nr: 275
    Result: Lived
    Original line:
                     revert("Invalid trade type");

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 30
    Result: Lived
    Original line:
                 require(msg.sender == kyberNetwork);

    Mutated line:
                 require(msg.sender != kyberNetwork);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 31
    Result: Lived
    Original line:
                 if (tx.gasprice <= MIN_ACTIVATE_PRICE) return;

    Mutated line:
                 if (tx.gasprice < MIN_ACTIVATE_PRICE) return;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 52
    Result: Lived
    Original line:
         if (num_tokens > safe_num_tokens) {

    Mutated line:
         if (num_tokens >= safe_num_tokens) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 56
    Result: Lived
    Original line:
         if (num_tokens > 0) {

    Mutated line:
         if (num_tokens >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 22
    Result: Lived
    Original line:
                 require(_kyberNetwork != address(0));

    Mutated line:
                 require(_kyberNetwork == address(0));


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 30
    Result: Lived
    Original line:
                 require(msg.sender == kyberNetwork);

    Mutated line:
                 require(msg.sender != kyberNetwork);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 31
    Result: Lived
    Original line:
                 if (tx.gasprice <= MIN_ACTIVATE_PRICE) return;

    Mutated line:
                 if (tx.gasprice > MIN_ACTIVATE_PRICE) return;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 48
    Result: Lived
    Original line:
         if (gas >= 27710) {

    Mutated line:
         if (gas < 27710) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 52
    Result: Lived
    Original line:
         if (num_tokens > safe_num_tokens) {

    Mutated line:
         if (num_tokens <= safe_num_tokens) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 56
    Result: Lived
    Original line:
         if (num_tokens > 0) {

    Mutated line:
         if (num_tokens <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 16
    Result: Lived
    Original line:
             uint constant MIN_ACTIVATE_PRICE = 8 * 1000 * 1000 * 1000; // 8 gwei

    Mutated line:
             uint constant MIN_ACTIVATE_PRICE = 8 * 1000 * 1000 / 1000; // 8 gwei


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 16
    Result: Lived
    Original line:
             uint constant MIN_ACTIVATE_PRICE = 8 * 1000 * 1000 * 1000; // 8 gwei

    Mutated line:
             uint constant MIN_ACTIVATE_PRICE = 8 * 1000 / 1000 * 1000; // 8 gwei


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 16
    Result: Lived
    Original line:
             uint constant MIN_ACTIVATE_PRICE = 8 * 1000 * 1000 * 1000; // 8 gwei

    Mutated line:
             uint constant MIN_ACTIVATE_PRICE = 8 / 1000 * 1000 * 1000; // 8 gwei


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 40
    Result: Lived
    Original line:
                 freeGas(gasleft() / 2);

    Mutated line:
                 freeGas(gasleft() * 2);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 49
    Result: Lived
    Original line:
         safe_num_tokens = (gas - 27710) / (1148 + 5722 + 150);

    Mutated line:
         safe_num_tokens = (gas - 27710) * (1148 + 5722 + 150);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 49
    Result: Lived
    Original line:
         safe_num_tokens = (gas - 27710) / (1148 + 5722 + 150);

    Mutated line:
         safe_num_tokens = (gas + 27710) / (1148 + 5722 + 150);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 49
    Result: Lived
    Original line:
         safe_num_tokens = (gas - 27710) / (1148 + 5722 + 150);

    Mutated line:
         safe_num_tokens = (gas - 27710) / (1148 + 5722 - 150);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 49
    Result: Lived
    Original line:
         safe_num_tokens = (gas - 27710) / (1148 + 5722 + 150);

    Mutated line:
         safe_num_tokens = (gas - 27710) / (1148 - 5722 + 150);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/GasHelper.sol
    Line nr: 21
    Result: Lived
    Original line:
             constructor(address _kyberNetwork, address _admin) public Withdrawable2(_admin) {

    Mutated line:
             constructor(address _kyberNetwork, address _admin) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 21
    Result: Lived
    Original line:
                 if (src == dest) return (IKyberReserve(0), PRECISION, false);

    Mutated line:
                 if (src != dest) return (IKyberReserve(0), PRECISION, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 23
    Result: Lived
    Original line:
                 if (reserveArr.length == 0) return (IKyberReserve(0), 0, false);

    Mutated line:
                 if (reserveArr.length != 0) return (IKyberReserve(0), 0, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 36
    Result: Lived
    Original line:
                     if (src == ETH_TOKEN_ADDRESS && isFeePaying) {

    Mutated line:
                     if (src != ETH_TOKEN_ADDRESS && isFeePaying) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 49
    Result: Lived
    Original line:
                     destAmount = (dest == ETH_TOKEN_ADDRESS && isFeePaying) ? 

    Mutated line:
                     destAmount = (dest != ETH_TOKEN_ADDRESS && isFeePaying) ? 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 53
    Result: Lived
    Original line:
                     if (destAmount > bestReserve.destAmount) {

    Mutated line:
                     if (destAmount >= bestReserve.destAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 32
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserveArr.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= reserveArr.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 60
    Result: Lived
    Original line:
                 if (bestReserve.destAmount == 0) return (reserveArr[bestReserve.index], 0, false);

    Mutated line:
                 if (bestReserve.destAmount != 0) return (reserveArr[bestReserve.index], 0, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 69
    Result: Lived
    Original line:
                     if (i == bestReserve.index) continue;

    Mutated line:
                     if (i != bestReserve.index) continue;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 72
    Result: Lived
    Original line:
                     srcAmountWithFee = ((src == ETH_TOKEN_ADDRESS) && isFeePaying) ? 

    Mutated line:
                     srcAmountWithFee = ((src != ETH_TOKEN_ADDRESS) && isFeePaying) ? 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 76
    Result: Lived
    Original line:
                     destAmount = (dest == ETH_TOKEN_ADDRESS && isFeePaying) ? 

    Mutated line:
                     destAmount = (dest != ETH_TOKEN_ADDRESS && isFeePaying) ? 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 80
    Result: Lived
    Original line:
                     if (destAmount > bestReserve.destAmount) {

    Mutated line:
                     if (destAmount >= bestReserve.destAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 67
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserveArr.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= reserveArr.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 85
    Result: Lived
    Original line:
                 if (bestReserve.numRelevantReserves > 1) {

    Mutated line:
                 if (bestReserve.numRelevantReserves >= 1) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 21
    Result: Lived
    Original line:
                 if (src == dest) return (IKyberReserve(0), PRECISION, false);

    Mutated line:
                 if (src != dest) return (IKyberReserve(0), PRECISION, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 23
    Result: Lived
    Original line:
                 if (reserveArr.length == 0) return (IKyberReserve(0), 0, false);

    Mutated line:
                 if (reserveArr.length != 0) return (IKyberReserve(0), 0, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 36
    Result: Lived
    Original line:
                     if (src == ETH_TOKEN_ADDRESS && isFeePaying) {

    Mutated line:
                     if (src != ETH_TOKEN_ADDRESS && isFeePaying) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 49
    Result: Lived
    Original line:
                     destAmount = (dest == ETH_TOKEN_ADDRESS && isFeePaying) ? 

    Mutated line:
                     destAmount = (dest != ETH_TOKEN_ADDRESS && isFeePaying) ? 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 53
    Result: Lived
    Original line:
                     if (destAmount > bestReserve.destAmount) {

    Mutated line:
                     if (destAmount <= bestReserve.destAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 32
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserveArr.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= reserveArr.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 60
    Result: Lived
    Original line:
                 if (bestReserve.destAmount == 0) return (reserveArr[bestReserve.index], 0, false);

    Mutated line:
                 if (bestReserve.destAmount != 0) return (reserveArr[bestReserve.index], 0, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 69
    Result: Lived
    Original line:
                     if (i == bestReserve.index) continue;

    Mutated line:
                     if (i != bestReserve.index) continue;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 72
    Result: Lived
    Original line:
                     srcAmountWithFee = ((src == ETH_TOKEN_ADDRESS) && isFeePaying) ? 

    Mutated line:
                     srcAmountWithFee = ((src != ETH_TOKEN_ADDRESS) && isFeePaying) ? 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 76
    Result: Lived
    Original line:
                     destAmount = (dest == ETH_TOKEN_ADDRESS && isFeePaying) ? 

    Mutated line:
                     destAmount = (dest != ETH_TOKEN_ADDRESS && isFeePaying) ? 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 80
    Result: Lived
    Original line:
                     if (destAmount > bestReserve.destAmount) {

    Mutated line:
                     if (destAmount <= bestReserve.destAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 67
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserveArr.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= reserveArr.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 85
    Result: Lived
    Original line:
                 if (bestReserve.numRelevantReserves > 1) {

    Mutated line:
                 if (bestReserve.numRelevantReserves <= 1) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 37
    Result: Lived
    Original line:
                         srcAmountWithFee = srcAmount - networkFee;

    Mutated line:
                         srcAmountWithFee = srcAmount + networkFee;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 47
    Result: Lived
    Original line:
                     destAmount = srcAmountWithFee * rates[i];

    Mutated line:
                     destAmount = srcAmountWithFee / rates[i];


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 50
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS : 

    Mutated line:
                         destAmount * (BPS - networkFee) * BPS : 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 50
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS : 

    Mutated line:
                         destAmount / (BPS - networkFee) / BPS : 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 50
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS : 

    Mutated line:
                         destAmount * (BPS + networkFee) / BPS : 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 65
    Result: Lived
    Original line:
                 bestReserve.destAmount = bestReserve.destAmount * BPS / (BPS + negligibleRateDiffBps);

    Mutated line:
                 bestReserve.destAmount = bestReserve.destAmount * BPS * (BPS + negligibleRateDiffBps);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 65
    Result: Lived
    Original line:
                 bestReserve.destAmount = bestReserve.destAmount * BPS / (BPS + negligibleRateDiffBps);

    Mutated line:
                 bestReserve.destAmount = bestReserve.destAmount / BPS / (BPS + negligibleRateDiffBps);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 65
    Result: Lived
    Original line:
                 bestReserve.destAmount = bestReserve.destAmount * BPS / (BPS + negligibleRateDiffBps);

    Mutated line:
                 bestReserve.destAmount = bestReserve.destAmount * BPS / (BPS - negligibleRateDiffBps);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 73
    Result: Lived
    Original line:
                         srcAmount - networkFee : 

    Mutated line:
                         srcAmount + networkFee : 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 75
    Result: Lived
    Original line:
                     destAmount = srcAmountWithFee * rates[i];

    Mutated line:
                     destAmount = srcAmountWithFee / rates[i];


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 77
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS : 

    Mutated line:
                         destAmount * (BPS - networkFee) * BPS : 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 77
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS : 

    Mutated line:
                         destAmount / (BPS - networkFee) / BPS : 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 77
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS : 

    Mutated line:
                         destAmount * (BPS + networkFee) / BPS : 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 87
    Result: Lived
    Original line:
                     bestReserve.index = reserveCandidates[uint(blockhash(block.number-1)) % bestReserve.numRelevantReserves];

    Mutated line:
                     bestReserve.index = reserveCandidates[uint(blockhash(block.number + 1)) % bestReserve.numRelevantReserves];


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousMatchingEngine.sol
    Line nr: 7
    Result: Lived
    Original line:
                 KyberMatchingEngine(_admin)

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDAOTestHandleWithdrawal.sol
    Line nr: 14
    Result: Lived
    Original line:
                 values[staker] += amount;

    Mutated line:
                 values[staker] -= amount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 37
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee > 0, "0 rate");

    Mutated line:
                 require(tData.rateOnlyNetworkFee >= 0, "0 rate");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 38
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee < MAX_RATE, "rate > MAX_RATE");

    Mutated line:
                 require(tData.rateOnlyNetworkFee <= MAX_RATE, "rate > MAX_RATE");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 48
    Result: Lived
    Original line:
                 if (tData.actualDestAmount > tData.input.maxDestAmount) {

    Mutated line:
                 if (tData.actualDestAmount >= tData.input.maxDestAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 111
    Result: Lived
    Original line:
                 if (src == dest) {

    Mutated line:
                 if (src != dest) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 118
    Result: Lived
    Original line:
                 TradingReserves memory reservesData = src == ETH_TOKEN_ADDRESS? tData.ethToToken : tData.tokenToEth;

    Mutated line:
                 TradingReserves memory reservesData = src != ETH_TOKEN_ADDRESS? tData.ethToToken : tData.tokenToEth;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 123
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;

    Mutated line:
                     uint splitAmount = i != (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 125
    Result: Lived
    Original line:
                     callValue = (src == ETH_TOKEN_ADDRESS)? splitAmount : 0;

    Mutated line:
                     callValue = (src != ETH_TOKEN_ADDRESS)? splitAmount : 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 122
    Result: Lived
    Original line:
                 for(uint i = 0; i < reservesData.addresses.length; i++) {

    Mutated line:
                 for(uint i = 0; i <= reservesData.addresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 37
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee > 0, "0 rate");

    Mutated line:
                 require(tData.rateOnlyNetworkFee <= 0, "0 rate");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 38
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee < MAX_RATE, "rate > MAX_RATE");

    Mutated line:
                 require(tData.rateOnlyNetworkFee >= MAX_RATE, "rate > MAX_RATE");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 39
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee >= tData.input.minConversionRate, "rate < minConvRate");

    Mutated line:
                 require(tData.rateOnlyNetworkFee < tData.input.minConversionRate, "rate < minConvRate");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 41
    Result: Lived
    Original line:
                 if (gasHelper != IGasHelper(0)) {

    Mutated line:
                 if (gasHelper == IGasHelper(0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 48
    Result: Lived
    Original line:
                 if (tData.actualDestAmount > tData.input.maxDestAmount) {

    Mutated line:
                 if (tData.actualDestAmount <= tData.input.maxDestAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 111
    Result: Lived
    Original line:
                 if (src == dest) {

    Mutated line:
                 if (src != dest) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 113
    Result: Lived
    Original line:
                     if (destAddress != (address(this)))

    Mutated line:
                     if (destAddress == (address(this)))


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 118
    Result: Lived
    Original line:
                 TradingReserves memory reservesData = src == ETH_TOKEN_ADDRESS? tData.ethToToken : tData.tokenToEth;

    Mutated line:
                 TradingReserves memory reservesData = src != ETH_TOKEN_ADDRESS? tData.ethToToken : tData.tokenToEth;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 123
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;

    Mutated line:
                     uint splitAmount = i != (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 125
    Result: Lived
    Original line:
                     callValue = (src == ETH_TOKEN_ADDRESS)? splitAmount : 0;

    Mutated line:
                     callValue = (src != ETH_TOKEN_ADDRESS)? splitAmount : 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 122
    Result: Lived
    Original line:
                 for(uint i = 0; i < reservesData.addresses.length; i++) {

    Mutated line:
                 for(uint i = 0; i >= reservesData.addresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 131
    Result: Lived
    Original line:
                 if (destAddress != address(this)) {

    Mutated line:
                 if (destAddress == address(this)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 68
    Result: Lived
    Original line:
                         tData.tradeWei - tData.networkFeeWei - tData.platformFeeWei,

    Mutated line:
                         tData.tradeWei - tData.networkFeeWei + tData.platformFeeWei,


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 68
    Result: Lived
    Original line:
                         tData.tradeWei - tData.networkFeeWei - tData.platformFeeWei,

    Mutated line:
                         tData.tradeWei + tData.networkFeeWei - tData.platformFeeWei,


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 89
    Result: Lived
    Original line:
                 return (tData.actualDestAmount - myFeeWei);

    Mutated line:
                 return (tData.actualDestAmount + myFeeWei);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 114
    Result: Lived
    Original line:
                         destAddress.transfer(amount - myFeeWei);

    Mutated line:
                         destAddress.transfer(amount + myFeeWei);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 123
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;

    Mutated line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length + 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 123
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;

    Mutated line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 123
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;

    Mutated line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] / amount / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 123
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;

    Mutated line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount + srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 132
    Result: Lived
    Original line:
                     dest.safeTransfer(destAddress, (expectedDestAmount - myFeeWei));

    Mutated line:
                     dest.safeTransfer(destAddress, (expectedDestAmount + myFeeWei));


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 124
    Result: Lived
    Original line:
                     srcAmountSoFar += splitAmount;

    Mutated line:
                     srcAmountSoFar -= splitAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 34
    Result: Lived
    Original line:
                 calcRatesAndAmounts(tData.input.src, tData.input.dest, tData.input.srcAmount, tData, hint);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 11
    Result: Lived
    Original line:
             constructor(address _admin) public KyberNetwork(_admin) { }

    Mutated line:
             constructor(address _admin) public  { }


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork.sol
    Line nr: 24
    Result: Lived
    Original line:
                 nonReentrant

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 38
    Result: Lived
    Original line:
                 require(msg.sender == address(networkContract), "ONLY_NETWORK");

    Mutated line:
                 require(msg.sender != address(networkContract), "ONLY_NETWORK");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 43
    Result: Lived
    Original line:
                 require(_negligibleRateDiffBps <= BPS, "rateDiffBps > BPS"); // at most 100%

    Mutated line:
                 require(_negligibleRateDiffBps < BPS, "rateDiffBps > BPS"); // at most 100%


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 58
    Result: Lived
    Original line:
                 require(reserveAddressToId[reserve] == bytes8(0), "reserve has id");

    Mutated line:
                 require(reserveAddressToId[reserve] != bytes8(0), "reserve has id");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 60
    Result: Lived
    Original line:
                 require((resType != ReserveType.NONE) && (uint(resType) < uint(ReserveType.LAST)), "bad type");

    Mutated line:
                 require((resType != ReserveType.NONE) && (uint(resType) <= uint(ReserveType.LAST)), "bad type");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 63
    Result: Lived
    Original line:
                 if (reserveIdToAddresses[reserveId].length == 0) {

    Mutated line:
                 if (reserveIdToAddresses[reserveId].length != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 66
    Result: Lived
    Original line:
                     require(reserveIdToAddresses[reserveId][0] == address(0), "reserveId taken");

    Mutated line:
                     require(reserveIdToAddresses[reserveId][0] != address(0), "reserveId taken");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 122
    Result: Lived
    Original line:
                 isFeePaying = (feePayingPerType & (1 << reserveType[reserve])) > 0;

    Mutated line:
                 isFeePaying = (feePayingPerType & (1 << reserveType[reserve])) >= 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 196
    Result: Lived
    Original line:
                 if (tData.failedIndex > 0) {

    Mutated line:
                 if (tData.failedIndex >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 205
    Result: Lived
    Original line:
                 if (tData.tradeWei == 0) {

    Mutated line:
                 if (tData.tradeWei != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 212
    Result: Lived
    Original line:
                 if (tData.ethToToken.splitValuesBps.length > 1) {

    Mutated line:
                 if (tData.ethToToken.splitValuesBps.length >= 1) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 213
    Result: Lived
    Original line:
                     for (uint i = 0; i < tData.ethToToken.addresses.length; i++) {

    Mutated line:
                     for (uint i = 0; i <= tData.ethToToken.addresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 243
    Result: Lived
    Original line:
                     if (reserve == reserveArr[i]) {

    Mutated line:
                     if (reserve != reserveArr[i]) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 242
    Result: Lived
    Original line:
                 for (i = 0; i < reserveArr.length; i++) {

    Mutated line:
                 for (i = 0; i <= reserveArr.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 255
    Result: Lived
    Original line:
                 if (add && i == reserveArr.length) {

    Mutated line:
                 if (add && i != reserveArr.length) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 272
    Result: Lived
    Original line:
                 tData.tokenToEth.addresses = (src == ETH_TOKEN_ADDRESS) ?

    Mutated line:
                 tData.tokenToEth.addresses = (src != ETH_TOKEN_ADDRESS) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 274
    Result: Lived
    Original line:
                 tData.ethToToken.addresses = (dest == ETH_TOKEN_ADDRESS) ?

    Mutated line:
                 tData.ethToToken.addresses = (dest != ETH_TOKEN_ADDRESS) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 279
    Result: Lived
    Original line:
                 if (hint.length == 0 || hint.length == 4) return;

    Mutated line:
                 if (hint.length != 0 || hint.length == 4) return;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 279
    Result: Lived
    Original line:
                 if (hint.length == 0 || hint.length == 4) return;

    Mutated line:
                 if (hint.length == 0 || hint.length != 4) return;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 281
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 288
    Result: Lived
    Original line:
                 } else if (dest == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 } else if (dest != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 307
    Result: Lived
    Original line:
                 if (tData.tokenToEth.tradeType == TradeType.MaskOut) {

    Mutated line:
                 if (tData.tokenToEth.tradeType != TradeType.MaskOut) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 310
    Result: Lived
    Original line:
                 } else if (tData.tokenToEth.tradeType == TradeType.Split) {

    Mutated line:
                 } else if (tData.tokenToEth.tradeType != TradeType.Split) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 316
    Result: Lived
    Original line:
                 if (tData.ethToToken.tradeType == TradeType.MaskOut) {

    Mutated line:
                 if (tData.ethToToken.tradeType != TradeType.MaskOut) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 320
    Result: Lived
    Original line:
                 } else if (tData.ethToToken.tradeType == TradeType.Split) {

    Mutated line:
                 } else if (tData.ethToToken.tradeType != TradeType.Split) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 344
    Result: Lived
    Original line:
                         if (reserve == maskedOutReserve) {

    Mutated line:
                         if (reserve != maskedOutReserve) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 342
    Result: Lived
    Original line:
                     for (uint j = 0; j < maskedOutReserves.length; j++) {

    Mutated line:
                     for (uint j = 0; j <= maskedOutReserves.length; j++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 338
    Result: Lived
    Original line:
                 for (uint i = 0; i < allReservesPerToken.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= allReservesPerToken.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 363
    Result: Lived
    Original line:
                 if (tData.tokenToEth.splitValuesBps.length > 1) {

    Mutated line:
                 if (tData.tokenToEth.splitValuesBps.length >= 1) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 409
    Result: Lived
    Original line:
                     splitAmount = (i == tradingReserves.splitValuesBps.length - 1) ? 

    Mutated line:
                     splitAmount = (i != tradingReserves.splitValuesBps.length - 1) ? 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 429
    Result: Lived
    Original line:
                         if (tradingReserves.rates[i] == 0) {

    Mutated line:
                         if (tradingReserves.rates[i] != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 417
    Result: Lived
    Original line:
                         if (tradingReserves.rates[i] == 0) {

    Mutated line:
                         if (tradingReserves.rates[i] != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 406
    Result: Lived
    Original line:
                 for (uint i = 0; i < tradingReserves.addresses.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= tradingReserves.addresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 485
    Result: Lived
    Original line:
                 for (uint i = 0; i < tokenToEthNumReserves; i++) {

    Mutated line:
                 for (uint i = 0; i <= tokenToEthNumReserves; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 494
    Result: Lived
    Original line:
                 for (uint i = tokenToEthNumReserves; i < totalNumReserves; i++) {

    Mutated line:
                 for (uint i = tokenToEthNumReserves; i <= totalNumReserves; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 511
    Result: Lived
    Original line:
                 if (tData.ethToToken.splitValuesBps.length > 1) {

    Mutated line:
                 if (tData.ethToToken.splitValuesBps.length >= 1) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 578
    Result: Lived
    Original line:
                 if (src == dest) return (IKyberReserve(0), PRECISION, false);

    Mutated line:
                 if (src != dest) return (IKyberReserve(0), PRECISION, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if (reserveArr.length == 0) return (IKyberReserve(0), 0, false);

    Mutated line:
                 if (reserveArr.length != 0) return (IKyberReserve(0), 0, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 593
    Result: Lived
    Original line:
                     if (src == ETH_TOKEN_ADDRESS && isFeePaying) {

    Mutated line:
                     if (src != ETH_TOKEN_ADDRESS && isFeePaying) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 594
    Result: Lived
    Original line:
                         require(srcAmount > networkFee, "fee >= e2t tradeAmt");

    Mutated line:
                         require(srcAmount >= networkFee, "fee >= e2t tradeAmt");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 607
    Result: Lived
    Original line:
                     destAmount = (dest == ETH_TOKEN_ADDRESS && isFeePaying) ? 

    Mutated line:
                     destAmount = (dest != ETH_TOKEN_ADDRESS && isFeePaying) ? 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 611
    Result: Lived
    Original line:
                     if (destAmount > bestReserve.destAmount) {

    Mutated line:
                     if (destAmount >= bestReserve.destAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 589
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserveArr.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= reserveArr.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 618
    Result: Lived
    Original line:
                 if (bestReserve.destAmount == 0) return (reserveArr[bestReserve.index], 0, false);

    Mutated line:
                 if (bestReserve.destAmount != 0) return (reserveArr[bestReserve.index], 0, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 627
    Result: Lived
    Original line:
                     if (i == bestReserve.index) continue;

    Mutated line:
                     if (i != bestReserve.index) continue;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 630
    Result: Lived
    Original line:
                     srcAmountWithFee = ((src == ETH_TOKEN_ADDRESS) && isFeePaying) ? 

    Mutated line:
                     srcAmountWithFee = ((src != ETH_TOKEN_ADDRESS) && isFeePaying) ? 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 634
    Result: Lived
    Original line:
                     destAmount = (dest == ETH_TOKEN_ADDRESS && isFeePaying) ? 

    Mutated line:
                     destAmount = (dest != ETH_TOKEN_ADDRESS && isFeePaying) ? 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 638
    Result: Lived
    Original line:
                     if (destAmount > bestReserve.destAmount) {

    Mutated line:
                     if (destAmount >= bestReserve.destAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 625
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserveArr.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= reserveArr.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 643
    Result: Lived
    Original line:
                 if (bestReserve.numRelevantReserves > 1) {

    Mutated line:
                 if (bestReserve.numRelevantReserves >= 1) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 661
    Result: Lived
    Original line:
                     feePayingArr[i] = (feePayingData & 1 << reserveType[address(reserves[i])] > 0);

    Mutated line:
                     feePayingArr[i] = (feePayingData & 1 << reserveType[address(reserves[i])] >= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 660
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserves.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= reserves.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 38
    Result: Lived
    Original line:
                 require(msg.sender == address(networkContract), "ONLY_NETWORK");

    Mutated line:
                 require(msg.sender != address(networkContract), "ONLY_NETWORK");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 43
    Result: Lived
    Original line:
                 require(_negligibleRateDiffBps <= BPS, "rateDiffBps > BPS"); // at most 100%

    Mutated line:
                 require(_negligibleRateDiffBps > BPS, "rateDiffBps > BPS"); // at most 100%


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 50
    Result: Lived
    Original line:
                 require(_networkContract != IKyberNetwork(0), "network 0");

    Mutated line:
                 require(_networkContract == IKyberNetwork(0), "network 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 58
    Result: Lived
    Original line:
                 require(reserveAddressToId[reserve] == bytes8(0), "reserve has id");

    Mutated line:
                 require(reserveAddressToId[reserve] != bytes8(0), "reserve has id");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 59
    Result: Lived
    Original line:
                 require(reserveId != 0, "reserveId = 0");

    Mutated line:
                 require(reserveId == 0, "reserveId = 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 60
    Result: Lived
    Original line:
                 require((resType != ReserveType.NONE) && (uint(resType) < uint(ReserveType.LAST)), "bad type");

    Mutated line:
                 require((resType == ReserveType.NONE) && (uint(resType) < uint(ReserveType.LAST)), "bad type");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 60
    Result: Lived
    Original line:
                 require((resType != ReserveType.NONE) && (uint(resType) < uint(ReserveType.LAST)), "bad type");

    Mutated line:
                 require((resType != ReserveType.NONE) && (uint(resType) >= uint(ReserveType.LAST)), "bad type");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 61
    Result: Lived
    Original line:
                 require(feePayingPerType != 0xffffffff, "Fee paying not set");

    Mutated line:
                 require(feePayingPerType == 0xffffffff, "Fee paying not set");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 63
    Result: Lived
    Original line:
                 if (reserveIdToAddresses[reserveId].length == 0) {

    Mutated line:
                 if (reserveIdToAddresses[reserveId].length != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 66
    Result: Lived
    Original line:
                     require(reserveIdToAddresses[reserveId][0] == address(0), "reserveId taken");

    Mutated line:
                     require(reserveIdToAddresses[reserveId][0] != address(0), "reserveId taken");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 76
    Result: Lived
    Original line:
                 require(reserveAddressToId[reserve] != bytes8(0), "reserve -> 0 reserveId");

    Mutated line:
                 require(reserveAddressToId[reserve] == bytes8(0), "reserve -> 0 reserveId");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 104
    Result: Lived
    Original line:
                 require(reserveAddressToId[address(reserve)] != bytes8(0), "reserve -> 0 reserveId");

    Mutated line:
                 require(reserveAddressToId[address(reserve)] == bytes8(0), "reserve -> 0 reserveId");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 122
    Result: Lived
    Original line:
                 isFeePaying = (feePayingPerType & (1 << reserveType[reserve])) > 0;

    Mutated line:
                 isFeePaying = (feePayingPerType & (1 << reserveType[reserve])) <= 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 196
    Result: Lived
    Original line:
                 if (tData.failedIndex > 0) {

    Mutated line:
                 if (tData.failedIndex <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 205
    Result: Lived
    Original line:
                 if (tData.tradeWei == 0) {

    Mutated line:
                 if (tData.tradeWei != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 212
    Result: Lived
    Original line:
                 if (tData.ethToToken.splitValuesBps.length > 1) {

    Mutated line:
                 if (tData.ethToToken.splitValuesBps.length <= 1) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 213
    Result: Lived
    Original line:
                     for (uint i = 0; i < tData.ethToToken.addresses.length; i++) {

    Mutated line:
                     for (uint i = 0; i >= tData.ethToToken.addresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 228
    Result: Lived
    Original line:
                 require(tData.tradeWei >= (tData.networkFeeWei + tData.platformFeeWei), "fees exceed trade amt");

    Mutated line:
                 require(tData.tradeWei < (tData.networkFeeWei + tData.platformFeeWei), "fees exceed trade amt");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 243
    Result: Lived
    Original line:
                     if (reserve == reserveArr[i]) {

    Mutated line:
                     if (reserve != reserveArr[i]) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 242
    Result: Lived
    Original line:
                 for (i = 0; i < reserveArr.length; i++) {

    Mutated line:
                 for (i = 0; i >= reserveArr.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 255
    Result: Lived
    Original line:
                 if (add && i == reserveArr.length) {

    Mutated line:
                 if (add && i != reserveArr.length) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 272
    Result: Lived
    Original line:
                 tData.tokenToEth.addresses = (src == ETH_TOKEN_ADDRESS) ?

    Mutated line:
                 tData.tokenToEth.addresses = (src != ETH_TOKEN_ADDRESS) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 274
    Result: Lived
    Original line:
                 tData.ethToToken.addresses = (dest == ETH_TOKEN_ADDRESS) ?

    Mutated line:
                 tData.ethToToken.addresses = (dest != ETH_TOKEN_ADDRESS) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 279
    Result: Lived
    Original line:
                 if (hint.length == 0 || hint.length == 4) return;

    Mutated line:
                 if (hint.length != 0 || hint.length == 4) return;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 279
    Result: Lived
    Original line:
                 if (hint.length == 0 || hint.length == 4) return;

    Mutated line:
                 if (hint.length == 0 || hint.length != 4) return;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 281
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 288
    Result: Lived
    Original line:
                 } else if (dest == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 } else if (dest != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 307
    Result: Lived
    Original line:
                 if (tData.tokenToEth.tradeType == TradeType.MaskOut) {

    Mutated line:
                 if (tData.tokenToEth.tradeType != TradeType.MaskOut) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 310
    Result: Lived
    Original line:
                 } else if (tData.tokenToEth.tradeType == TradeType.Split) {

    Mutated line:
                 } else if (tData.tokenToEth.tradeType != TradeType.Split) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 316
    Result: Lived
    Original line:
                 if (tData.ethToToken.tradeType == TradeType.MaskOut) {

    Mutated line:
                 if (tData.ethToToken.tradeType != TradeType.MaskOut) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 320
    Result: Lived
    Original line:
                 } else if (tData.ethToToken.tradeType == TradeType.Split) {

    Mutated line:
                 } else if (tData.ethToToken.tradeType != TradeType.Split) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 334
    Result: Lived
    Original line:
                 require(allReservesPerToken.length >= maskedOutReserves.length, "MASK_OUT_TOO_LONG");

    Mutated line:
                 require(allReservesPerToken.length < maskedOutReserves.length, "MASK_OUT_TOO_LONG");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 344
    Result: Lived
    Original line:
                         if (reserve == maskedOutReserve) {

    Mutated line:
                         if (reserve != maskedOutReserve) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 342
    Result: Lived
    Original line:
                     for (uint j = 0; j < maskedOutReserves.length; j++) {

    Mutated line:
                     for (uint j = 0; j >= maskedOutReserves.length; j++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 338
    Result: Lived
    Original line:
                 for (uint i = 0; i < allReservesPerToken.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= allReservesPerToken.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 363
    Result: Lived
    Original line:
                 if (tData.tokenToEth.splitValuesBps.length > 1) {

    Mutated line:
                 if (tData.tokenToEth.splitValuesBps.length <= 1) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 409
    Result: Lived
    Original line:
                     splitAmount = (i == tradingReserves.splitValuesBps.length - 1) ? 

    Mutated line:
                     splitAmount = (i != tradingReserves.splitValuesBps.length - 1) ? 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 429
    Result: Lived
    Original line:
                         if (tradingReserves.rates[i] == 0) {

    Mutated line:
                         if (tradingReserves.rates[i] != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 417
    Result: Lived
    Original line:
                         if (tradingReserves.rates[i] == 0) {

    Mutated line:
                         if (tradingReserves.rates[i] != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 406
    Result: Lived
    Original line:
                 for (uint i = 0; i < tradingReserves.addresses.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= tradingReserves.addresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 485
    Result: Lived
    Original line:
                 for (uint i = 0; i < tokenToEthNumReserves; i++) {

    Mutated line:
                 for (uint i = 0; i >= tokenToEthNumReserves; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 494
    Result: Lived
    Original line:
                 for (uint i = tokenToEthNumReserves; i < totalNumReserves; i++) {

    Mutated line:
                 for (uint i = tokenToEthNumReserves; i >= totalNumReserves; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 511
    Result: Lived
    Original line:
                 if (tData.ethToToken.splitValuesBps.length > 1) {

    Mutated line:
                 if (tData.ethToToken.splitValuesBps.length <= 1) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 540
    Result: Lived
    Original line:
                     require(tData.tradeWei >= tData.networkFeeWei + tData.platformFeeWei, "fees exceed trade amt");

    Mutated line:
                     require(tData.tradeWei < tData.networkFeeWei + tData.platformFeeWei, "fees exceed trade amt");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 578
    Result: Lived
    Original line:
                 if (src == dest) return (IKyberReserve(0), PRECISION, false);

    Mutated line:
                 if (src != dest) return (IKyberReserve(0), PRECISION, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 580
    Result: Lived
    Original line:
                 if (reserveArr.length == 0) return (IKyberReserve(0), 0, false);

    Mutated line:
                 if (reserveArr.length != 0) return (IKyberReserve(0), 0, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 593
    Result: Lived
    Original line:
                     if (src == ETH_TOKEN_ADDRESS && isFeePaying) {

    Mutated line:
                     if (src != ETH_TOKEN_ADDRESS && isFeePaying) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 594
    Result: Lived
    Original line:
                         require(srcAmount > networkFee, "fee >= e2t tradeAmt");

    Mutated line:
                         require(srcAmount <= networkFee, "fee >= e2t tradeAmt");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 607
    Result: Lived
    Original line:
                     destAmount = (dest == ETH_TOKEN_ADDRESS && isFeePaying) ? 

    Mutated line:
                     destAmount = (dest != ETH_TOKEN_ADDRESS && isFeePaying) ? 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 611
    Result: Lived
    Original line:
                     if (destAmount > bestReserve.destAmount) {

    Mutated line:
                     if (destAmount <= bestReserve.destAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 589
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserveArr.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= reserveArr.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 618
    Result: Lived
    Original line:
                 if (bestReserve.destAmount == 0) return (reserveArr[bestReserve.index], 0, false);

    Mutated line:
                 if (bestReserve.destAmount != 0) return (reserveArr[bestReserve.index], 0, false);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 627
    Result: Lived
    Original line:
                     if (i == bestReserve.index) continue;

    Mutated line:
                     if (i != bestReserve.index) continue;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 630
    Result: Lived
    Original line:
                     srcAmountWithFee = ((src == ETH_TOKEN_ADDRESS) && isFeePaying) ? 

    Mutated line:
                     srcAmountWithFee = ((src != ETH_TOKEN_ADDRESS) && isFeePaying) ? 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 634
    Result: Lived
    Original line:
                     destAmount = (dest == ETH_TOKEN_ADDRESS && isFeePaying) ? 

    Mutated line:
                     destAmount = (dest != ETH_TOKEN_ADDRESS && isFeePaying) ? 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 638
    Result: Lived
    Original line:
                     if (destAmount > bestReserve.destAmount) {

    Mutated line:
                     if (destAmount <= bestReserve.destAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 625
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserveArr.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= reserveArr.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 643
    Result: Lived
    Original line:
                 if (bestReserve.numRelevantReserves > 1) {

    Mutated line:
                 if (bestReserve.numRelevantReserves <= 1) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 661
    Result: Lived
    Original line:
                     feePayingArr[i] = (feePayingData & 1 << reserveType[address(reserves[i])] > 0);

    Mutated line:
                     feePayingArr[i] = (feePayingData & 1 << reserveType[address(reserves[i])] <= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 660
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserves.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= reserves.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 91
    Result: Lived
    Original line:
                 if (apr) feePayingData |= 1 << uint(ReserveType.APR);

    Mutated line:
                 if (apr) feePayingData |= 1 >> uint(ReserveType.APR);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 92
    Result: Lived
    Original line:
                 if (fpr) feePayingData |= 1 << uint(ReserveType.FPR);

    Mutated line:
                 if (fpr) feePayingData |= 1 >> uint(ReserveType.FPR);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 93
    Result: Lived
    Original line:
                 if (bridge) feePayingData |= 1 << uint(ReserveType.BRIDGE);

    Mutated line:
                 if (bridge) feePayingData |= 1 >> uint(ReserveType.BRIDGE);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 94
    Result: Lived
    Original line:
                 if (utility) feePayingData |= 1 << uint(ReserveType.UTILITY);

    Mutated line:
                 if (utility) feePayingData |= 1 >> uint(ReserveType.UTILITY);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 95
    Result: Lived
    Original line:
                 if (custom) feePayingData |= 1 << uint(ReserveType.CUSTOM);

    Mutated line:
                 if (custom) feePayingData |= 1 >> uint(ReserveType.CUSTOM);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 96
    Result: Lived
    Original line:
                 if (orderbook) feePayingData |= 1 << uint(ReserveType.ORDERBOOK);

    Mutated line:
                 if (orderbook) feePayingData |= 1 >> uint(ReserveType.ORDERBOOK);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 122
    Result: Lived
    Original line:
                 isFeePaying = (feePayingPerType & (1 << reserveType[reserve])) > 0;

    Mutated line:
                 isFeePaying = (feePayingPerType | (1 << reserveType[reserve])) > 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 122
    Result: Lived
    Original line:
                 isFeePaying = (feePayingPerType & (1 << reserveType[reserve])) > 0;

    Mutated line:
                 isFeePaying = (feePayingPerType & (1 >> reserveType[reserve])) > 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 225
    Result: Lived
    Original line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS * tData.feePayingReservesBps / BPS;

    Mutated line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS * tData.feePayingReservesBps * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 225
    Result: Lived
    Original line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS * tData.feePayingReservesBps / BPS;

    Mutated line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS / tData.feePayingReservesBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 225
    Result: Lived
    Original line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS * tData.feePayingReservesBps / BPS;

    Mutated line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps * BPS * tData.feePayingReservesBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 225
    Result: Lived
    Original line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS * tData.feePayingReservesBps / BPS;

    Mutated line:
                 tData.networkFeeWei = tData.tradeWei / tData.networkFeeBps / BPS * tData.feePayingReservesBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 226
    Result: Lived
    Original line:
                 tData.platformFeeWei = tData.tradeWei * info[uint(IKyberMatchingEngine.InfoIndex.platformFeeBps)] / BPS;

    Mutated line:
                 tData.platformFeeWei = tData.tradeWei * info[uint(IKyberMatchingEngine.InfoIndex.platformFeeBps)] * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 226
    Result: Lived
    Original line:
                 tData.platformFeeWei = tData.tradeWei * info[uint(IKyberMatchingEngine.InfoIndex.platformFeeBps)] / BPS;

    Mutated line:
                 tData.platformFeeWei = tData.tradeWei / info[uint(IKyberMatchingEngine.InfoIndex.platformFeeBps)] / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 228
    Result: Lived
    Original line:
                 require(tData.tradeWei >= (tData.networkFeeWei + tData.platformFeeWei), "fees exceed trade amt");

    Mutated line:
                 require(tData.tradeWei >= (tData.networkFeeWei - tData.platformFeeWei), "fees exceed trade amt");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 229
    Result: Lived
    Original line:
                 calcRatesAndAmountsEthToToken(dest, tData.tradeWei - tData.networkFeeWei - tData.platformFeeWei, tData);

    Mutated line:
                 calcRatesAndAmountsEthToToken(dest, tData.tradeWei - tData.networkFeeWei + tData.platformFeeWei, tData);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 229
    Result: Lived
    Original line:
                 calcRatesAndAmountsEthToToken(dest, tData.tradeWei - tData.networkFeeWei - tData.platformFeeWei, tData);

    Mutated line:
                 calcRatesAndAmountsEthToToken(dest, tData.tradeWei + tData.networkFeeWei - tData.platformFeeWei, tData);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 248
    Result: Lived
    Original line:
                             reserveArr[i] = reserveArr[reserveArr.length - 1];

    Mutated line:
                             reserveArr[i] = reserveArr[reserveArr.length + 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 335
    Result: Lived
    Original line:
                 filteredReserves = new IKyberReserve[](allReservesPerToken.length - maskedOutReserves.length);

    Mutated line:
                 filteredReserves = new IKyberReserve[](allReservesPerToken.length + maskedOutReserves.length);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 409
    Result: Lived
    Original line:
                     splitAmount = (i == tradingReserves.splitValuesBps.length - 1) ? 

    Mutated line:
                     splitAmount = (i == tradingReserves.splitValuesBps.length + 1) ? 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 411
    Result: Lived
    Original line:
                                         tradingReserves.splitValuesBps[i] * tradeAmt / BPS;

    Mutated line:
                                         tradingReserves.splitValuesBps[i] * tradeAmt * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 411
    Result: Lived
    Original line:
                                         tradingReserves.splitValuesBps[i] * tradeAmt / BPS;

    Mutated line:
                                         tradingReserves.splitValuesBps[i] / tradeAmt / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 410
    Result: Lived
    Original line:
                                         (tradeAmt - amountSoFar) : 

    Mutated line:
                                         (tradeAmt + amountSoFar) : 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 468
    Result: Lived
    Original line:
                 uint totalNumReserves = tokenToEthNumReserves + tData.ethToToken.addresses.length;

    Mutated line:
                 uint totalNumReserves = tokenToEthNumReserves - tData.ethToToken.addresses.length;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 495
    Result: Lived
    Original line:
                     reserveAddresses[i] = tData.ethToToken.addresses[i - tokenToEthNumReserves];

    Mutated line:
                     reserveAddresses[i] = tData.ethToToken.addresses[i + tokenToEthNumReserves];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 496
    Result: Lived
    Original line:
                     rates[i] = tData.ethToToken.rates[i - tokenToEthNumReserves];

    Mutated line:
                     rates[i] = tData.ethToToken.rates[i + tokenToEthNumReserves];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 497
    Result: Lived
    Original line:
                     splitValuesBps[i] = tData.ethToToken.splitValuesBps[i - tokenToEthNumReserves];

    Mutated line:
                     splitValuesBps[i] = tData.ethToToken.splitValuesBps[i + tokenToEthNumReserves];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 498
    Result: Lived
    Original line:
                     isFeePaying[i] = tData.ethToToken.isFeePaying[i - tokenToEthNumReserves];

    Mutated line:
                     isFeePaying[i] = tData.ethToToken.isFeePaying[i + tokenToEthNumReserves];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 518
    Result: Lived
    Original line:
                     uint ethToTokenNetworkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS;

    Mutated line:
                     uint ethToTokenNetworkFeeWei = tData.tradeWei * tData.networkFeeBps * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 518
    Result: Lived
    Original line:
                     uint ethToTokenNetworkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS;

    Mutated line:
                     uint ethToTokenNetworkFeeWei = tData.tradeWei / tData.networkFeeBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 540
    Result: Lived
    Original line:
                     require(tData.tradeWei >= tData.networkFeeWei + tData.platformFeeWei, "fees exceed trade amt");

    Mutated line:
                     require(tData.tradeWei >= tData.networkFeeWei - tData.platformFeeWei, "fees exceed trade amt");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 541
    Result: Lived
    Original line:
                     tData.actualDestAmount = calcDstQty(tData.tradeWei - tData.networkFeeWei - tData.platformFeeWei, 

    Mutated line:
                     tData.actualDestAmount = calcDstQty(tData.tradeWei - tData.networkFeeWei + tData.platformFeeWei, 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 541
    Result: Lived
    Original line:
                     tData.actualDestAmount = calcDstQty(tData.tradeWei - tData.networkFeeWei - tData.platformFeeWei, 

    Mutated line:
                     tData.actualDestAmount = calcDstQty(tData.tradeWei + tData.networkFeeWei - tData.platformFeeWei, 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 546
    Result: Lived
    Original line:
                 tData.destAmountWithNetworkFee = calcDstQty(tData.tradeWei - tData.networkFeeWei, ETH_DECIMALS, 

    Mutated line:
                 tData.destAmountWithNetworkFee = calcDstQty(tData.tradeWei + tData.networkFeeWei, ETH_DECIMALS, 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 595
    Result: Lived
    Original line:
                         srcAmountWithFee = srcAmount - networkFee;

    Mutated line:
                         srcAmountWithFee = srcAmount + networkFee;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 605
    Result: Lived
    Original line:
                     destAmount = srcAmountWithFee * rates[i];

    Mutated line:
                     destAmount = srcAmountWithFee / rates[i];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 608
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS : 

    Mutated line:
                         destAmount * (BPS - networkFee) * BPS : 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 608
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS : 

    Mutated line:
                         destAmount / (BPS - networkFee) / BPS : 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 608
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS : 

    Mutated line:
                         destAmount * (BPS + networkFee) / BPS : 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 623
    Result: Lived
    Original line:
                 bestReserve.destAmount = bestReserve.destAmount * BPS / (BPS + negligibleRateDiffBps);

    Mutated line:
                 bestReserve.destAmount = bestReserve.destAmount * BPS * (BPS + negligibleRateDiffBps);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 623
    Result: Lived
    Original line:
                 bestReserve.destAmount = bestReserve.destAmount * BPS / (BPS + negligibleRateDiffBps);

    Mutated line:
                 bestReserve.destAmount = bestReserve.destAmount / BPS / (BPS + negligibleRateDiffBps);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 623
    Result: Lived
    Original line:
                 bestReserve.destAmount = bestReserve.destAmount * BPS / (BPS + negligibleRateDiffBps);

    Mutated line:
                 bestReserve.destAmount = bestReserve.destAmount * BPS / (BPS - negligibleRateDiffBps);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 631
    Result: Lived
    Original line:
                         srcAmount - networkFee : 

    Mutated line:
                         srcAmount + networkFee : 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 633
    Result: Lived
    Original line:
                     destAmount = srcAmountWithFee * rates[i];

    Mutated line:
                     destAmount = srcAmountWithFee / rates[i];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 635
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS : 

    Mutated line:
                         destAmount * (BPS - networkFee) * BPS : 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 635
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS : 

    Mutated line:
                         destAmount / (BPS - networkFee) / BPS : 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 635
    Result: Lived
    Original line:
                         destAmount * (BPS - networkFee) / BPS : 

    Mutated line:
                         destAmount * (BPS + networkFee) / BPS : 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 645
    Result: Lived
    Original line:
                     bestReserve.index = reserveCandidates[uint(blockhash(block.number-1)) % bestReserve.numRelevantReserves];

    Mutated line:
                     bestReserve.index = reserveCandidates[uint(blockhash(block.number + 1)) % bestReserve.numRelevantReserves];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 661
    Result: Lived
    Original line:
                     feePayingArr[i] = (feePayingData & 1 << reserveType[address(reserves[i])] > 0);

    Mutated line:
                     feePayingArr[i] = (feePayingData | 1 << reserveType[address(reserves[i])] > 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 661
    Result: Lived
    Original line:
                     feePayingArr[i] = (feePayingData & 1 << reserveType[address(reserves[i])] > 0);

    Mutated line:
                     feePayingArr[i] = (feePayingData & 1 >> reserveType[address(reserves[i])] > 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 217
    Result: Lived
    Original line:
                             tData.feePayingReservesBps += tData.ethToToken.splitValuesBps[i];

    Mutated line:
                             tData.feePayingReservesBps -= tData.ethToToken.splitValuesBps[i];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 412
    Result: Lived
    Original line:
                     amountSoFar += splitAmount;

    Mutated line:
                     amountSoFar -= splitAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 432
    Result: Lived
    Original line:
                         destQty += calcDstQty(splitAmount, ETH_DECIMALS, tradingReserves.decimals, tradingReserves.rates[i]);

    Mutated line:
                         destQty -= calcDstQty(splitAmount, ETH_DECIMALS, tradingReserves.decimals, tradingReserves.rates[i]);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 420
    Result: Lived
    Original line:
                         destQty += calcDstQty(splitAmount, tradingReserves.decimals, ETH_DECIMALS, tradingReserves.rates[i]);

    Mutated line:
                         destQty -= calcDstQty(splitAmount, tradingReserves.decimals, ETH_DECIMALS, tradingReserves.rates[i]);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 422
    Result: Lived
    Original line:
                             feePayingReservesBps += tradingReserves.splitValuesBps[i];

    Mutated line:
                             feePayingReservesBps -= tradingReserves.splitValuesBps[i];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 534
    Result: Lived
    Original line:
                         tData.networkFeeWei += ethToTokenNetworkFeeWei;

    Mutated line:
                         tData.networkFeeWei -= ethToTokenNetworkFeeWei;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 535
    Result: Lived
    Original line:
                         tData.feePayingReservesBps += BPS; //max percentage amount for ETH -> token

    Mutated line:
                         tData.feePayingReservesBps -= BPS; //max percentage amount for ETH -> token


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 106
    Result: Lived
    Original line:
                     listPairs(IKyberReserve(reserve), token, false, add);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 110
    Result: Lived
    Original line:
                     listPairs(IKyberReserve(reserve), token, true, add);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 113
    Result: Lived
    Original line:
                 setDecimals(token);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 194
    Result: Lived
    Original line:
                 parseTradeDataHint(src, dest, tData, hint);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 197
    Result: Lived
    Original line:
                     storeTradeReserveData(tData.tokenToEth, IKyberReserve(0), 0, false);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 198
    Result: Lived
    Original line:
                     storeTradeReserveData(tData.ethToToken, IKyberReserve(0), 0, false);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 203
    Result: Lived
    Original line:
                 calcRatesAndAmountsTokenToEth(src, info[uint(IKyberMatchingEngine.InfoIndex.srcAmount)], tData);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 207
    Result: Lived
    Original line:
                     storeTradeReserveData(tData.ethToToken, IKyberReserve(0), 0, false);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 229
    Result: Lived
    Original line:
                 calcRatesAndAmountsEthToToken(dest, tData.tradeWei - tData.networkFeeWei - tData.platformFeeWei, tData);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 376
    Result: Lived
    Original line:
                     storeTradeReserveData(tData.tokenToEth, reserve, rate, isFeePaying);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 530
    Result: Lived
    Original line:
                     storeTradeReserveData(tData.ethToToken, reserve, rate, isFeePaying);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 34
    Result: Lived
    Original line:
                 Withdrawable2(_admin)

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 42
    Result: Lived
    Original line:
             function setNegligbleRateDiffBps(uint _negligibleRateDiffBps) external onlyNetwork returns (bool) {

    Mutated line:
             function setNegligbleRateDiffBps(uint _negligibleRateDiffBps) external  returns (bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 49
    Result: Lived
    Original line:
             function setNetworkContract(IKyberNetwork _networkContract) external onlyAdmin {

    Mutated line:
             function setNetworkContract(IKyberNetwork _networkContract) external  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 56
    Result: Lived
    Original line:
                 onlyNetwork returns (bool) 

    Mutated line:
                  returns (bool) 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 75
    Result: Lived
    Original line:
             function removeReserve(address reserve) external onlyNetwork returns (bytes8) {

    Mutated line:
             function removeReserve(address reserve) external  returns (bytes8) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 87
    Result: Lived
    Original line:
                 external onlyAdmin 

    Mutated line:
                 external  


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberMatchingEngine.sol
    Line nr: 102
    Result: Lived
    Original line:
                 external onlyNetwork returns (bool) 

    Mutated line:
                 external  returns (bool) 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 18
    Result: Lived
    Original line:
                 if (n > 0) {

    Mutated line:
                 if (n >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 25
    Result: Lived
    Original line:
                 if (n > 0) {

    Mutated line:
                 if (n >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 18
    Result: Lived
    Original line:
                 if (n > 0) {

    Mutated line:
                 if (n <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 25
    Result: Lived
    Original line:
                 if (n > 0) {

    Mutated line:
                 if (n <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 20
    Result: Lived
    Original line:
                     countLocalRecursive(n - 1);

    Mutated line:
                     countLocalRecursive(n + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 28
    Result: Lived
    Original line:
                     (bool success,) = address(this).call(abi.encodeWithSignature("countThisRecursive(uint256)", n - 1));

    Mutated line:
                     (bool success,) = address(this).call(abi.encodeWithSignature("countThisRecursive(uint256)", n + 1));


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 40
    Result: Lived
    Original line:
                 counter += 1;

    Mutated line:
                 counter -= 1;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 14
    Result: Lived
    Original line:
                 count();

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 19
    Result: Lived
    Original line:
                     count();

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 20
    Result: Lived
    Original line:
                     countLocalRecursive(n - 1);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 26
    Result: Lived
    Original line:
                     count();

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 34
    Result: Lived
    Original line:
                 count();

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 13
    Result: Lived
    Original line:
             function callback() external nonReentrant {

    Mutated line:
             function callback() external  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 17
    Result: Lived
    Original line:
             function countLocalRecursive(uint256 n) public nonReentrant {

    Mutated line:
             function countLocalRecursive(uint256 n) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 24
    Result: Lived
    Original line:
             function countThisRecursive(uint256 n) public nonReentrant {

    Mutated line:
             function countThisRecursive(uint256 n) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/ReentrancyMock.sol
    Line nr: 33
    Result: Lived
    Original line:
             function countAndCall(ReentrancyAttack attacker) public nonReentrant {

    Mutated line:
             function countAndCall(ReentrancyAttack attacker) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 35
    Result: Lived
    Original line:
                 require(_amount > 0);

    Mutated line:
                 require(_amount >= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 37
    Result: Lived
    Original line:
                 if (_path.length == ethToBntPath.length) {

    Mutated line:
                 if (_path.length != ethToBntPath.length) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 39
    Result: Lived
    Original line:
                     for(uint i = 0; i < _path.length; i++) {

    Mutated line:
                     for(uint i = 0; i <= _path.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 48
    Result: Lived
    Original line:
                         if (destAmount > bancorBNT.balanceOf(address(this))) {

    Mutated line:
                         if (destAmount >= bancorBNT.balanceOf(address(this))) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 55
    Result: Lived
    Original line:
                 if (_path.length == bntToEthPath.length) {

    Mutated line:
                 if (_path.length != bntToEthPath.length) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 57
    Result: Lived
    Original line:
                     for(uint i = 0; i < _path.length; i++) {

    Mutated line:
                     for(uint i = 0; i <= _path.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 66
    Result: Lived
    Original line:
                         if (destAmount > address(this).balance) {

    Mutated line:
                         if (destAmount >= address(this).balance) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 83
    Result: Lived
    Original line:
                 require(_path.length == ethToBntPath.length);

    Mutated line:
                 require(_path.length != ethToBntPath.length);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 85
    Result: Lived
    Original line:
                     require(_path[i] == ethToBntPath[i]);

    Mutated line:
                     require(_path[i] != ethToBntPath[i]);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 84
    Result: Lived
    Original line:
                 for(uint i = 0; i < _path.length; i++) {

    Mutated line:
                 for(uint i = 0; i <= _path.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 87
    Result: Lived
    Original line:
                 require(msg.value == _amount && _amount > 0);

    Mutated line:
                 require(msg.value != _amount && _amount > 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 87
    Result: Lived
    Original line:
                 require(msg.value == _amount && _amount > 0);

    Mutated line:
                 require(msg.value == _amount && _amount >= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 88
    Result: Lived
    Original line:
                 require(rateEthToBnt > 0);

    Mutated line:
                 require(rateEthToBnt >= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 103
    Result: Lived
    Original line:
                 require(_path.length == bntToEthPath.length);

    Mutated line:
                 require(_path.length != bntToEthPath.length);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 105
    Result: Lived
    Original line:
                     require(_path[i] == bntToEthPath[i]);

    Mutated line:
                     require(_path[i] != bntToEthPath[i]);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 104
    Result: Lived
    Original line:
                 for(uint i = 0; i < _path.length; i++) {

    Mutated line:
                 for(uint i = 0; i <= _path.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 108
    Result: Lived
    Original line:
                 require(_amount > 0);

    Mutated line:
                 require(_amount >= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 110
    Result: Lived
    Original line:
                 require(rateBntToETh > 0);

    Mutated line:
                 require(rateBntToETh >= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 113
    Result: Lived
    Original line:
                 require(destAmount <= address(this).balance);

    Mutated line:
                 require(destAmount < address(this).balance);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 35
    Result: Lived
    Original line:
                 require(_amount > 0);

    Mutated line:
                 require(_amount <= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 37
    Result: Lived
    Original line:
                 if (_path.length == ethToBntPath.length) {

    Mutated line:
                 if (_path.length != ethToBntPath.length) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 40
    Result: Lived
    Original line:
                         if (_path[i] != ethToBntPath[i]) {

    Mutated line:
                         if (_path[i] == ethToBntPath[i]) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 39
    Result: Lived
    Original line:
                     for(uint i = 0; i < _path.length; i++) {

    Mutated line:
                     for(uint i = 0; i >= _path.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 48
    Result: Lived
    Original line:
                         if (destAmount > bancorBNT.balanceOf(address(this))) {

    Mutated line:
                         if (destAmount <= bancorBNT.balanceOf(address(this))) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 55
    Result: Lived
    Original line:
                 if (_path.length == bntToEthPath.length) {

    Mutated line:
                 if (_path.length != bntToEthPath.length) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 58
    Result: Lived
    Original line:
                         if (_path[i] != bntToEthPath[i]) {

    Mutated line:
                         if (_path[i] == bntToEthPath[i]) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 57
    Result: Lived
    Original line:
                     for(uint i = 0; i < _path.length; i++) {

    Mutated line:
                     for(uint i = 0; i >= _path.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 66
    Result: Lived
    Original line:
                         if (destAmount > address(this).balance) {

    Mutated line:
                         if (destAmount <= address(this).balance) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 83
    Result: Lived
    Original line:
                 require(_path.length == ethToBntPath.length);

    Mutated line:
                 require(_path.length != ethToBntPath.length);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 85
    Result: Lived
    Original line:
                     require(_path[i] == ethToBntPath[i]);

    Mutated line:
                     require(_path[i] != ethToBntPath[i]);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 84
    Result: Lived
    Original line:
                 for(uint i = 0; i < _path.length; i++) {

    Mutated line:
                 for(uint i = 0; i >= _path.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 87
    Result: Lived
    Original line:
                 require(msg.value == _amount && _amount > 0);

    Mutated line:
                 require(msg.value != _amount && _amount > 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 87
    Result: Lived
    Original line:
                 require(msg.value == _amount && _amount > 0);

    Mutated line:
                 require(msg.value == _amount && _amount <= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 88
    Result: Lived
    Original line:
                 require(rateEthToBnt > 0);

    Mutated line:
                 require(rateEthToBnt <= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 90
    Result: Lived
    Original line:
                 require(destAmount >= _minReturn);

    Mutated line:
                 require(destAmount < _minReturn);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 103
    Result: Lived
    Original line:
                 require(_path.length == bntToEthPath.length);

    Mutated line:
                 require(_path.length != bntToEthPath.length);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 105
    Result: Lived
    Original line:
                     require(_path[i] == bntToEthPath[i]);

    Mutated line:
                     require(_path[i] != bntToEthPath[i]);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 104
    Result: Lived
    Original line:
                 for(uint i = 0; i < _path.length; i++) {

    Mutated line:
                 for(uint i = 0; i >= _path.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 108
    Result: Lived
    Original line:
                 require(_amount > 0);

    Mutated line:
                 require(_amount <= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 110
    Result: Lived
    Original line:
                 require(rateBntToETh > 0);

    Mutated line:
                 require(rateBntToETh <= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 112
    Result: Lived
    Original line:
                 require(destAmount >= _minReturn);

    Mutated line:
                 require(destAmount < _minReturn);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/mock/MockBancorNetwork.sol
    Line nr: 113
    Result: Lived
    Original line:
                 require(destAmount <= address(this).balance);

    Mutated line:
                 require(destAmount > address(this).balance);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/BytesLib.sol
    Line nr: 99
    Result: Lived
    Original line:
                 require(_bytes.length >= (_start + _length), "slice: insufficient byte length");

    Mutated line:
                 require(_bytes.length > < start + _length), "slice: insufficient byte length");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/BytesLib.sol
    Line nr: 156
    Result: Lived
    Original line:
                 require(_bytes.length >= (_start + 1), "toUint8: insufficient byte length");

    Mutated line:
                 require(_bytes.length > < start + 1), "toUint8: insufficient byte length");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/BytesLib.sol
    Line nr: 167
    Result: Lived
    Original line:
                 require(_bytes.length >= (_start + 2), "toUint16: insufficient byte length");

    Mutated line:
                 require(_bytes.length > < start + 2), "toUint16: insufficient byte length");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/BytesLib.sol
    Line nr: 178
    Result: Lived
    Original line:
                 require(_bytes.length >= (_start + 8), "toBytes8: insufficient byte length");

    Mutated line:
                 require(_bytes.length > < start + 8), "toBytes8: insufficient byte length");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/BytesLib.sol
    Line nr: 99
    Result: Lived
    Original line:
                 require(_bytes.length >= (_start + _length), "slice: insufficient byte length");

    Mutated line:
                 require(_bytes.length >= (_start + - ength), "slice: insufficient byte length");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/BytesLib.sol
    Line nr: 156
    Result: Lived
    Original line:
                 require(_bytes.length >= (_start + 1), "toUint8: insufficient byte length");

    Mutated line:
                 require(_bytes.length >= (_start + - , "toUint8: insufficient byte length");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/BytesLib.sol
    Line nr: 167
    Result: Lived
    Original line:
                 require(_bytes.length >= (_start + 2), "toUint16: insufficient byte length");

    Mutated line:
                 require(_bytes.length >= (_start + - , "toUint16: insufficient byte length");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/BytesLib.sol
    Line nr: 178
    Result: Lived
    Original line:
                 require(_bytes.length >= (_start + 8), "toBytes8: insufficient byte length");

    Mutated line:
                 require(_bytes.length >= (_start + - , "toBytes8: insufficient byte length");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(msg.sender == campaignCreator, "only campaign creator");

    Mutated line:
                 require(msg.sender != campaignCreator, "only campaign creator");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 59
    Result: Lived
    Original line:
                 require(pendingCampCreator == msg.sender, "only pending campaign creator");

    Mutated line:
                 require(pendingCampCreator != msg.sender, "only pending campaign creator");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 146
    Result: Lived
    Original line:
                 require(_epochPeriod > 0, "ctor: epoch period is 0");

    Mutated line:
                 require(_epochPeriod >= 0, "ctor: epoch period is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 153
    Result: Lived
    Original line:
                 require(_defaultNetworkFeeBps < BPS / 2, "ctor: network fee high");

    Mutated line:
                 require(_defaultNetworkFeeBps <= BPS / 2, "ctor: network fee high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 156
    Result: Lived
    Original line:
                 require(staking.EPOCH_PERIOD_BLOCKS() == _epochPeriod, "ctor: diff epoch period");

    Mutated line:
                 require(staking.EPOCH_PERIOD_BLOCKS() != _epochPeriod, "ctor: diff epoch period");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 157
    Result: Lived
    Original line:
                 require(staking.FIRST_EPOCH_START_BLOCK() == _startBlock, "ctor: diff start block");

    Mutated line:
                 require(staking.FIRST_EPOCH_START_BLOCK() != _startBlock, "ctor: diff start block");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 169
    Result: Lived
    Original line:
                 require(msg.sender == address(staking), "only staking contract");

    Mutated line:
                 require(msg.sender != address(staking), "only staking contract");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 180
    Result: Lived
    Original line:
                 if (reduceAmount == 0) { return false; }

    Mutated line:
                 if (reduceAmount != 0) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 186
    Result: Lived
    Original line:
                 if (numVotes == 0) { return true; }

    Mutated line:
                 if (numVotes != 0) { return true; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 197
    Result: Lived
    Original line:
                     if (votedOption > 0 && campaignData[campID].endBlock >= block.number) {

    Mutated line:
                     if (votedOption >= 0 && campaignData[campID].endBlock >= block.number) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 193
    Result: Lived
    Original line:
                 for (uint i = 0; i < campIDs.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= campIDs.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 237
    Result: Lived
    Original line:
                     epochCampaigns[campEpoch].length < MAX_EPOCH_CAMPS,

    Mutated line:
                     epochCampaigns[campEpoch].length <= MAX_EPOCH_CAMPS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 248
    Result: Lived
    Original line:
                 if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 250
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 251
    Result: Lived
    Original line:
                     require(brrCampaign[campEpoch] == 0, "newCampaign: alr had brr for this epoch");

    Mutated line:
                     require(brrCampaign[campEpoch] != 0, "newCampaign: alr had brr for this epoch");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 249
    Result: Lived
    Original line:
                     require(networkFeeCamp[campEpoch] == 0, "newCampaign: alr had network fee for this epoch");

    Mutated line:
                     require(networkFeeCamp[campEpoch] != 0, "newCampaign: alr had network fee for this epoch");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 261
    Result: Lived
    Original line:
                 if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 263
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 306
    Result: Lived
    Original line:
                 require(camp.startBlock > block.number, "cancelCampaign: campaign alr started");

    Mutated line:
                 require(camp.startBlock >= block.number, "cancelCampaign: campaign alr started");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 312
    Result: Lived
    Original line:
                 if (camp.campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (camp.campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 314
    Result: Lived
    Original line:
                 } else if (camp.campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (camp.campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 323
    Result: Lived
    Original line:
                     if (campIDs[i] == campID) {

    Mutated line:
                     if (campIDs[i] != campID) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 322
    Result: Lived
    Original line:
                 for (uint i = 0; i < campIDs.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= campIDs.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 350
    Result: Lived
    Original line:
                 uint totalStake = dAddress == staker ? stake.add(dStake) : dStake;

    Mutated line:
                 uint totalStake = dAddress != staker ? stake.add(dStake) : dStake;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 353
    Result: Lived
    Original line:
                 if (lastVotedOption == 0) {

    Mutated line:
                 if (lastVotedOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 383
    Result: Lived
    Original line:
                 require(epoch < curEpoch, "claimReward: only for past epochs");

    Mutated line:
                 require(epoch <= curEpoch, "claimReward: only for past epochs");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 387
    Result: Lived
    Original line:
                 require(perInPrecision > 0, "claimReward: No reward");

    Mutated line:
                 require(perInPrecision >= 0, "claimReward: No reward");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 408
    Result: Lived
    Original line:
                 if (curEpoch == 0) {

    Mutated line:
                 if (curEpoch != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 413
    Result: Lived
    Original line:
                 if (campID == 0) {

    Mutated line:
                 if (campID != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 421
    Result: Lived
    Original line:
                 if (winningOption == 0) {

    Mutated line:
                 if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 442
    Result: Lived
    Original line:
                 if (epoch > 0) {

    Mutated line:
                 if (epoch >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 447
    Result: Lived
    Original line:
                         if (winningOption == 0) {

    Mutated line:
                         if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 469
    Result: Lived
    Original line:
                 return totalEpochPoints[epoch] == 0;

    Mutated line:
                 return totalEpochPoints[epoch] != 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 494
    Result: Lived
    Original line:
                 if (votes.length == 0) {

    Mutated line:
                 if (votes.length != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 499
    Result: Lived
    Original line:
                 for (uint i = 0; i < voteCounts.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= voteCounts.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 520
    Result: Lived
    Original line:
                 if (camp.endBlock == 0 || camp.endBlock > block.number) { return (0, 0); }

    Mutated line:
                 if (camp.endBlock != 0 || camp.endBlock > block.number) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 520
    Result: Lived
    Original line:
                 if (camp.endBlock == 0 || camp.endBlock > block.number) { return (0, 0); }

    Mutated line:
                 if (camp.endBlock == 0 || camp.endBlock >= block.number) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 524
    Result: Lived
    Original line:
                 if (totalSupply == 0) { return (0, 0); }

    Mutated line:
                 if (totalSupply != 0) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 532
    Result: Lived
    Original line:
                     if (voteCounts[i] > maxVotedCount) {

    Mutated line:
                     if (voteCounts[i] >= maxVotedCount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 535
    Result: Lived
    Original line:
                     } else if (voteCounts[i] == maxVotedCount) {

    Mutated line:
                     } else if (voteCounts[i] != maxVotedCount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 531
    Result: Lived
    Original line:
                 for (uint i = 1; i < voteCounts.length; i++) {

    Mutated line:
                 for (uint i = 1; i <= voteCounts.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 540
    Result: Lived
    Original line:
                 if (winningOption == 0) { return (0, 0); }

    Mutated line:
                 if (winningOption != 0) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 549
    Result: Lived
    Original line:
                 if (formulaData.minPercentageInPrecision > votedPercentage) { return (0, 0); }

    Mutated line:
                 if (formulaData.minPercentageInPrecision >= votedPercentage) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 553
    Result: Lived
    Original line:
                 if (x <= formulaData.cInPrecision) {

    Mutated line:
                 if (x < formulaData.cInPrecision) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 557
    Result: Lived
    Original line:
                     if (maxVotedCount.mul(PRECISION) < y.mul(totalVotes)) { return (0, 0); }

    Mutated line:
                     if (maxVotedCount.mul(PRECISION) <= y.mul(totalVotes)) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 572
    Result: Lived
    Original line:
                 if (curEpoch == 0) {

    Mutated line:
                 if (curEpoch != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 576
    Result: Lived
    Original line:
                 if (campID == 0) {

    Mutated line:
                 if (campID != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 583
    Result: Lived
    Original line:
                 if (winningOption == 0) {

    Mutated line:
                 if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 596
    Result: Lived
    Original line:
                 if (epoch > curEpoch) { return 0; }

    Mutated line:
                 if (epoch >= curEpoch) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 600
    Result: Lived
    Original line:
                 if (numVotes == 0) { return 0; }

    Mutated line:
                 if (numVotes != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 603
    Result: Lived
    Original line:
                 uint totalStake = delegatedAddr == staker ? stake.add(delegatedStake) : delegatedStake;

    Mutated line:
                 uint totalStake = delegatedAddr != staker ? stake.add(delegatedStake) : delegatedStake;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 604
    Result: Lived
    Original line:
                 if (totalStake == 0) { return 0; }

    Mutated line:
                 if (totalStake != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 608
    Result: Lived
    Original line:
                 if (totalPts == 0) { return 0; }

    Mutated line:
                 if (totalPts != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 610
    Result: Lived
    Original line:
                 if (points > totalPts) { return 0; }

    Mutated line:
                 if (points >= totalPts) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 631
    Result: Lived
    Original line:
                 if (epoch > 0) {

    Mutated line:
                 if (epoch >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 636
    Result: Lived
    Original line:
                         if (winningOption == 0) {

    Mutated line:
                         if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 664
    Result: Lived
    Original line:
                 require(rewardInBps.add(rebateInBps) <= BPS, "reward plus rebate high");

    Mutated line:
                 require(rewardInBps.add(rebateInBps) < BPS, "reward plus rebate high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 694
    Result: Lived
    Original line:
                     startEpoch == endEpoch,

    Mutated line:
                     startEpoch != endEpoch,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 699
    Result: Lived
    Original line:
                     startEpoch <= currentEpoch.add(1),

    Mutated line:
                     startEpoch < currentEpoch.add(1),


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 706
    Result: Lived
    Original line:
                     numOptions > 1 && numOptions <= MAX_CAMP_OPTIONS,

    Mutated line:
                     numOptions >= 1 && numOptions <= MAX_CAMP_OPTIONS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 706
    Result: Lived
    Original line:
                     numOptions > 1 && numOptions <= MAX_CAMP_OPTIONS,

    Mutated line:
                     numOptions > 1 && numOptions < MAX_CAMP_OPTIONS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 711
    Result: Lived
    Original line:
                 if (campType == CampaignType.GENERAL) {

    Mutated line:
                 if (campType != CampaignType.GENERAL) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 719
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 } else if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 735
    Result: Lived
    Original line:
                             rewardInBps.add(rebateInBps) <= BPS,

    Mutated line:
                             rewardInBps.add(rebateInBps) < BPS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 731
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i <= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 725
    Result: Lived
    Original line:
                             options[i] < BPS / 2,

    Mutated line:
                             options[i] <= BPS / 2,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 721
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i <= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 715
    Result: Lived
    Original line:
                             options[i] > 0,

    Mutated line:
                             options[i] >= 0,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 713
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i <= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 743
    Result: Lived
    Original line:
                     minPercentageInPrecision <= PRECISION,

    Mutated line:
                     minPercentageInPrecision < PRECISION,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 749
    Result: Lived
    Original line:
                     cInPrecision <= POWER_128,

    Mutated line:
                     cInPrecision < POWER_128,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 754
    Result: Lived
    Original line:
                     tInPrecision <= POWER_128,

    Mutated line:
                     tInPrecision < POWER_128,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 769
    Result: Lived
    Original line:
                 require(camp.startBlock <= block.number, "vote: campaign not started");

    Mutated line:
                 require(camp.startBlock < block.number, "vote: campaign not started");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 772
    Result: Lived
    Original line:
                 require(option > 0, "vote: option is 0");

    Mutated line:
                 require(option >= 0, "vote: option is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 773
    Result: Lived
    Original line:
                 require(option <= camp.options.length, "vote: option is not in range");

    Mutated line:
                 require(option < camp.options.length, "vote: option is not in range");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(_campCreator != address(0), "campCreator is 0");

    Mutated line:
                 require(_campCreator == address(0), "campCreator is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(msg.sender == campaignCreator, "only campaign creator");

    Mutated line:
                 require(msg.sender != campaignCreator, "only campaign creator");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 37
    Result: Lived
    Original line:
                 require(newCampCreator != address(0), "newCampCreator is 0");

    Mutated line:
                 require(newCampCreator == address(0), "newCampCreator is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 47
    Result: Lived
    Original line:
                 require(newCampCreator != address(0), "newCampCreator is 0");

    Mutated line:
                 require(newCampCreator == address(0), "newCampCreator is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 59
    Result: Lived
    Original line:
                 require(pendingCampCreator == msg.sender, "only pending campaign creator");

    Mutated line:
                 require(pendingCampCreator != msg.sender, "only pending campaign creator");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 146
    Result: Lived
    Original line:
                 require(_epochPeriod > 0, "ctor: epoch period is 0");

    Mutated line:
                 require(_epochPeriod <= 0, "ctor: epoch period is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 147
    Result: Lived
    Original line:
                 require(_startBlock >= block.number, "ctor: start in the past");

    Mutated line:
                 require(_startBlock < block.number, "ctor: start in the past");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 148
    Result: Lived
    Original line:
                 require(_staking != address(0), "ctor: staking is missing");

    Mutated line:
                 require(_staking == address(0), "ctor: staking is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 149
    Result: Lived
    Original line:
                 require(_feeHandler != address(0), "ctor: feeHandler is missing");

    Mutated line:
                 require(_feeHandler == address(0), "ctor: feeHandler is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 150
    Result: Lived
    Original line:
                 require(_knc != address(0), "ctor: knc token is missing");

    Mutated line:
                 require(_knc == address(0), "ctor: knc token is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 153
    Result: Lived
    Original line:
                 require(_defaultNetworkFeeBps < BPS / 2, "ctor: network fee high");

    Mutated line:
                 require(_defaultNetworkFeeBps >= BPS / 2, "ctor: network fee high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 156
    Result: Lived
    Original line:
                 require(staking.EPOCH_PERIOD_BLOCKS() == _epochPeriod, "ctor: diff epoch period");

    Mutated line:
                 require(staking.EPOCH_PERIOD_BLOCKS() != _epochPeriod, "ctor: diff epoch period");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 157
    Result: Lived
    Original line:
                 require(staking.FIRST_EPOCH_START_BLOCK() == _startBlock, "ctor: diff start block");

    Mutated line:
                 require(staking.FIRST_EPOCH_START_BLOCK() != _startBlock, "ctor: diff start block");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 169
    Result: Lived
    Original line:
                 require(msg.sender == address(staking), "only staking contract");

    Mutated line:
                 require(msg.sender != address(staking), "only staking contract");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 180
    Result: Lived
    Original line:
                 if (reduceAmount == 0) { return false; }

    Mutated line:
                 if (reduceAmount != 0) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 186
    Result: Lived
    Original line:
                 if (numVotes == 0) { return true; }

    Mutated line:
                 if (numVotes != 0) { return true; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 197
    Result: Lived
    Original line:
                     if (votedOption > 0 && campaignData[campID].endBlock >= block.number) {

    Mutated line:
                     if (votedOption <= 0 && campaignData[campID].endBlock >= block.number) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 197
    Result: Lived
    Original line:
                     if (votedOption > 0 && campaignData[campID].endBlock >= block.number) {

    Mutated line:
                     if (votedOption > 0 && campaignData[campID].endBlock < block.number) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 193
    Result: Lived
    Original line:
                 for (uint i = 0; i < campIDs.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= campIDs.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 237
    Result: Lived
    Original line:
                     epochCampaigns[campEpoch].length < MAX_EPOCH_CAMPS,

    Mutated line:
                     epochCampaigns[campEpoch].length >= MAX_EPOCH_CAMPS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 248
    Result: Lived
    Original line:
                 if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 250
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 251
    Result: Lived
    Original line:
                     require(brrCampaign[campEpoch] == 0, "newCampaign: alr had brr for this epoch");

    Mutated line:
                     require(brrCampaign[campEpoch] != 0, "newCampaign: alr had brr for this epoch");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 249
    Result: Lived
    Original line:
                     require(networkFeeCamp[campEpoch] == 0, "newCampaign: alr had network fee for this epoch");

    Mutated line:
                     require(networkFeeCamp[campEpoch] != 0, "newCampaign: alr had network fee for this epoch");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 261
    Result: Lived
    Original line:
                 if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 263
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 306
    Result: Lived
    Original line:
                 require(camp.startBlock > block.number, "cancelCampaign: campaign alr started");

    Mutated line:
                 require(camp.startBlock <= block.number, "cancelCampaign: campaign alr started");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 312
    Result: Lived
    Original line:
                 if (camp.campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 if (camp.campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 314
    Result: Lived
    Original line:
                 } else if (camp.campType == CampaignType.FEE_HANDLER_BRR) {

    Mutated line:
                 } else if (camp.campType != CampaignType.FEE_HANDLER_BRR) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 323
    Result: Lived
    Original line:
                     if (campIDs[i] == campID) {

    Mutated line:
                     if (campIDs[i] != campID) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 322
    Result: Lived
    Original line:
                 for (uint i = 0; i < campIDs.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= campIDs.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 350
    Result: Lived
    Original line:
                 uint totalStake = dAddress == staker ? stake.add(dStake) : dStake;

    Mutated line:
                 uint totalStake = dAddress != staker ? stake.add(dStake) : dStake;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 353
    Result: Lived
    Original line:
                 if (lastVotedOption == 0) {

    Mutated line:
                 if (lastVotedOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 362
    Result: Lived
    Original line:
                 } else if (lastVotedOption != option) {

    Mutated line:
                 } else if (lastVotedOption == option) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 383
    Result: Lived
    Original line:
                 require(epoch < curEpoch, "claimReward: only for past epochs");

    Mutated line:
                 require(epoch >= curEpoch, "claimReward: only for past epochs");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 387
    Result: Lived
    Original line:
                 require(perInPrecision > 0, "claimReward: No reward");

    Mutated line:
                 require(perInPrecision <= 0, "claimReward: No reward");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 408
    Result: Lived
    Original line:
                 if (curEpoch == 0) {

    Mutated line:
                 if (curEpoch != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 413
    Result: Lived
    Original line:
                 if (campID == 0) {

    Mutated line:
                 if (campID != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 421
    Result: Lived
    Original line:
                 if (winningOption == 0) {

    Mutated line:
                 if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 442
    Result: Lived
    Original line:
                 if (epoch > 0) {

    Mutated line:
                 if (epoch <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 444
    Result: Lived
    Original line:
                     if (campID != 0) {

    Mutated line:
                     if (campID == 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 447
    Result: Lived
    Original line:
                         if (winningOption == 0) {

    Mutated line:
                         if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 468
    Result: Lived
    Original line:
                 if (epoch >= curEpoch) { return false; }

    Mutated line:
                 if (epoch < curEpoch) { return false; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 469
    Result: Lived
    Original line:
                 return totalEpochPoints[epoch] == 0;

    Mutated line:
                 return totalEpochPoints[epoch] != 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 494
    Result: Lived
    Original line:
                 if (votes.length == 0) {

    Mutated line:
                 if (votes.length != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 499
    Result: Lived
    Original line:
                 for (uint i = 0; i < voteCounts.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= voteCounts.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 520
    Result: Lived
    Original line:
                 if (camp.endBlock == 0 || camp.endBlock > block.number) { return (0, 0); }

    Mutated line:
                 if (camp.endBlock != 0 || camp.endBlock > block.number) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 520
    Result: Lived
    Original line:
                 if (camp.endBlock == 0 || camp.endBlock > block.number) { return (0, 0); }

    Mutated line:
                 if (camp.endBlock == 0 || camp.endBlock <= block.number) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 524
    Result: Lived
    Original line:
                 if (totalSupply == 0) { return (0, 0); }

    Mutated line:
                 if (totalSupply != 0) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 532
    Result: Lived
    Original line:
                     if (voteCounts[i] > maxVotedCount) {

    Mutated line:
                     if (voteCounts[i] <= maxVotedCount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 535
    Result: Lived
    Original line:
                     } else if (voteCounts[i] == maxVotedCount) {

    Mutated line:
                     } else if (voteCounts[i] != maxVotedCount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 531
    Result: Lived
    Original line:
                 for (uint i = 1; i < voteCounts.length; i++) {

    Mutated line:
                 for (uint i = 1; i >= voteCounts.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 540
    Result: Lived
    Original line:
                 if (winningOption == 0) { return (0, 0); }

    Mutated line:
                 if (winningOption != 0) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 549
    Result: Lived
    Original line:
                 if (formulaData.minPercentageInPrecision > votedPercentage) { return (0, 0); }

    Mutated line:
                 if (formulaData.minPercentageInPrecision <= votedPercentage) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 553
    Result: Lived
    Original line:
                 if (x <= formulaData.cInPrecision) {

    Mutated line:
                 if (x > formulaData.cInPrecision) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 557
    Result: Lived
    Original line:
                     if (maxVotedCount.mul(PRECISION) < y.mul(totalVotes)) { return (0, 0); }

    Mutated line:
                     if (maxVotedCount.mul(PRECISION) >= y.mul(totalVotes)) { return (0, 0); }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 572
    Result: Lived
    Original line:
                 if (curEpoch == 0) {

    Mutated line:
                 if (curEpoch != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 576
    Result: Lived
    Original line:
                 if (campID == 0) {

    Mutated line:
                 if (campID != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 583
    Result: Lived
    Original line:
                 if (winningOption == 0) {

    Mutated line:
                 if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 596
    Result: Lived
    Original line:
                 if (epoch > curEpoch) { return 0; }

    Mutated line:
                 if (epoch <= curEpoch) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 600
    Result: Lived
    Original line:
                 if (numVotes == 0) { return 0; }

    Mutated line:
                 if (numVotes != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 603
    Result: Lived
    Original line:
                 uint totalStake = delegatedAddr == staker ? stake.add(delegatedStake) : delegatedStake;

    Mutated line:
                 uint totalStake = delegatedAddr != staker ? stake.add(delegatedStake) : delegatedStake;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 604
    Result: Lived
    Original line:
                 if (totalStake == 0) { return 0; }

    Mutated line:
                 if (totalStake != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 608
    Result: Lived
    Original line:
                 if (totalPts == 0) { return 0; }

    Mutated line:
                 if (totalPts != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 610
    Result: Lived
    Original line:
                 if (points > totalPts) { return 0; }

    Mutated line:
                 if (points <= totalPts) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 631
    Result: Lived
    Original line:
                 if (epoch > 0) {

    Mutated line:
                 if (epoch <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 633
    Result: Lived
    Original line:
                     if (campID != 0) {

    Mutated line:
                     if (campID == 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 636
    Result: Lived
    Original line:
                         if (winningOption == 0) {

    Mutated line:
                         if (winningOption != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 664
    Result: Lived
    Original line:
                 require(rewardInBps.add(rebateInBps) <= BPS, "reward plus rebate high");

    Mutated line:
                 require(rewardInBps.add(rebateInBps) > BPS, "reward plus rebate high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 680
    Result: Lived
    Original line:
                     startBlock >= block.number,

    Mutated line:
                     startBlock < block.number,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 686
    Result: Lived
    Original line:
                     endBlock.add(1) >= startBlock.add(MIN_CAMP_DURATION_BLOCKS),

    Mutated line:
                     endBlock.add(1) < startBlock.add(MIN_CAMP_DURATION_BLOCKS),


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 694
    Result: Lived
    Original line:
                     startEpoch == endEpoch,

    Mutated line:
                     startEpoch != endEpoch,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 699
    Result: Lived
    Original line:
                     startEpoch <= currentEpoch.add(1),

    Mutated line:
                     startEpoch > currentEpoch.add(1),


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 706
    Result: Lived
    Original line:
                     numOptions > 1 && numOptions <= MAX_CAMP_OPTIONS,

    Mutated line:
                     numOptions <= 1 && numOptions <= MAX_CAMP_OPTIONS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 706
    Result: Lived
    Original line:
                     numOptions > 1 && numOptions <= MAX_CAMP_OPTIONS,

    Mutated line:
                     numOptions > 1 && numOptions > MAX_CAMP_OPTIONS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 711
    Result: Lived
    Original line:
                 if (campType == CampaignType.GENERAL) {

    Mutated line:
                 if (campType != CampaignType.GENERAL) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 719
    Result: Lived
    Original line:
                 } else if (campType == CampaignType.NETWORK_FEE) {

    Mutated line:
                 } else if (campType != CampaignType.NETWORK_FEE) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 735
    Result: Lived
    Original line:
                             rewardInBps.add(rebateInBps) <= BPS,

    Mutated line:
                             rewardInBps.add(rebateInBps) > BPS,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 731
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i >= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 725
    Result: Lived
    Original line:
                             options[i] < BPS / 2,

    Mutated line:
                             options[i] >= BPS / 2,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 721
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i >= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 715
    Result: Lived
    Original line:
                             options[i] > 0,

    Mutated line:
                             options[i] <= 0,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 713
    Result: Lived
    Original line:
                     for (uint i = 0; i < options.length; i++) {

    Mutated line:
                     for (uint i = 0; i >= options.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 743
    Result: Lived
    Original line:
                     minPercentageInPrecision <= PRECISION,

    Mutated line:
                     minPercentageInPrecision > PRECISION,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 749
    Result: Lived
    Original line:
                     cInPrecision <= POWER_128,

    Mutated line:
                     cInPrecision > POWER_128,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 754
    Result: Lived
    Original line:
                     tInPrecision <= POWER_128,

    Mutated line:
                     tInPrecision > POWER_128,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 769
    Result: Lived
    Original line:
                 require(camp.startBlock <= block.number, "vote: campaign not started");

    Mutated line:
                 require(camp.startBlock > block.number, "vote: campaign not started");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 770
    Result: Lived
    Original line:
                 require(camp.endBlock >= block.number, "vote: campaign alr ended");

    Mutated line:
                 require(camp.endBlock < block.number, "vote: campaign alr ended");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 772
    Result: Lived
    Original line:
                 require(option > 0, "vote: option is 0");

    Mutated line:
                 require(option <= 0, "vote: option is 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 773
    Result: Lived
    Original line:
                 require(option <= camp.options.length, "vote: option is not in range");

    Mutated line:
                 require(option > camp.options.length, "vote: option is not in range");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 153
    Result: Lived
    Original line:
                 require(_defaultNetworkFeeBps < BPS / 2, "ctor: network fee high");

    Mutated line:
                 require(_defaultNetworkFeeBps < BPS * 2, "ctor: network fee high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 285
    Result: Lived
    Original line:
                 campOptionVotes[campID] = new uint[](options.length + 1);

    Mutated line:
                 campOptionVotes[campID] = new uint[](options.length - 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 325
    Result: Lived
    Original line:
                         campIDs[i] = campIDs[campIDs.length - 1];

    Mutated line:
                         campIDs[i] = campIDs[campIDs.length + 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 326
    Result: Lived
    Original line:
                         delete campIDs[campIDs.length - 1];

    Mutated line:
                         delete campIDs[campIDs.length + 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 498
    Result: Lived
    Original line:
                 voteCounts = new uint[](votes.length - 1);

    Mutated line:
                 voteCounts = new uint[](votes.length + 1);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 500
    Result: Lived
    Original line:
                     voteCounts[i] = votes[i + 1];

    Mutated line:
                     voteCounts[i] = votes[i - 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 561
    Result: Lived
    Original line:
                 value = camp.options[optionID - 1];

    Mutated line:
                 value = camp.options[optionID + 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 652
    Result: Lived
    Original line:
                 rewardInBps = data & (POWER_128.sub(1));

    Mutated line:
                 rewardInBps = data | (POWER_128.sub(1));


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 653
    Result: Lived
    Original line:
                 rebateInBps = (data.div(POWER_128)) & (POWER_128.sub(1));

    Mutated line:
                 rebateInBps = (data.div(POWER_128)) | (POWER_128.sub(1));


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 725
    Result: Lived
    Original line:
                             options[i] < BPS / 2,

    Mutated line:
                             options[i] < BPS * 2,


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 36
    Result: Lived
    Original line:
             function transferCampaignCreator(address newCampCreator) public onlyCampaignCreator {

    Mutated line:
             function transferCampaignCreator(address newCampCreator) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 46
    Result: Lived
    Original line:
             function transferCampaignCreatorQuickly(address newCampCreator) public onlyCampaignCreator {

    Mutated line:
             function transferCampaignCreatorQuickly(address newCampCreator) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 145
    Result: Lived
    Original line:
             ) public CampPermissionGroups(_campaignCreator) {

    Mutated line:
             ) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 178
    Result: Lived
    Original line:
             function handleWithdrawal(address staker, uint reduceAmount) public onlyStakingContract returns(bool) {

    Mutated line:
             function handleWithdrawal(address staker, uint reduceAmount) public  returns(bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 230
    Result: Lived
    Original line:
                 public onlyCampaignCreator returns(uint campID)

    Mutated line:
                 public  returns(uint campID)


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 301
    Result: Lived
    Original line:
             function cancelCampaign(uint campID) public onlyCampaignCreator {

    Mutated line:
             function cancelCampaign(uint campID) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/KyberDAO.sol
    Line nr: 381
    Result: Lived
    Original line:
             function claimReward(address staker, uint epoch) public nonReentrant {

    Mutated line:
             function claimReward(address staker, uint epoch) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 270
    Result: Lived
    Original line:
                 require(tradeOutcome.userDeltaDestToken == reportedDestAmount, "Kyber network returned wrong amount");

    Mutated line:
                 require(tradeOutcome.userDeltaDestToken != reportedDestAmount, "Kyber network returned wrong amount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 271
    Result: Lived
    Original line:
                 require(tradeOutcome.userDeltaDestToken <= maxDestAmount, "Destination amount bigger then max destination amount");

    Mutated line:
                 require(tradeOutcome.userDeltaDestToken < maxDestAmount, "Destination amount bigger then max destination amount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 316
    Result: Lived
    Original line:
                 require(src == ETH_TOKEN_ADDRESS || msg.value == 0, "msg.value should be 0");

    Mutated line:
                 require(src != ETH_TOKEN_ADDRESS || msg.value == 0, "msg.value should be 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 316
    Result: Lived
    Original line:
                 require(src == ETH_TOKEN_ADDRESS || msg.value == 0, "msg.value should be 0");

    Mutated line:
                 require(src == ETH_TOKEN_ADDRESS || msg.value != 0, "msg.value should be 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 321
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 339
    Result: Lived
    Original line:
                 require(destTokenBalanceAfter > balanceBefore.destTok, "Wrong amount in destination address");

    Mutated line:
                 require(destTokenBalanceAfter >= balanceBefore.destTok, "Wrong amount in destination address");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 340
    Result: Lived
    Original line:
                 require(balanceBefore.srcTok > srcTokenBalanceAfter, "Wrong amount in source address");

    Mutated line:
                 require(balanceBefore.srcTok >= srcTokenBalanceAfter, "Wrong amount in source address");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 270
    Result: Lived
    Original line:
                 require(tradeOutcome.userDeltaDestToken == reportedDestAmount, "Kyber network returned wrong amount");

    Mutated line:
                 require(tradeOutcome.userDeltaDestToken != reportedDestAmount, "Kyber network returned wrong amount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 271
    Result: Lived
    Original line:
                 require(tradeOutcome.userDeltaDestToken <= maxDestAmount, "Destination amount bigger then max destination amount");

    Mutated line:
                 require(tradeOutcome.userDeltaDestToken > maxDestAmount, "Destination amount bigger then max destination amount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 272
    Result: Lived
    Original line:
                 require(tradeOutcome.actualRate >= minConversionRate, "rate < minRate");

    Mutated line:
                 require(tradeOutcome.actualRate < minConversionRate, "rate < minRate");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 283
    Result: Lived
    Original line:
                 require(_kyberNetwork != IKyberNetwork(0), "KyberNetwork 0");

    Mutated line:
                 require(_kyberNetwork == IKyberNetwork(0), "KyberNetwork 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 292
    Result: Lived
    Original line:
                 require(_hintHandler != IKyberHint(0), "Hint handler 0");

    Mutated line:
                 require(_hintHandler == IKyberHint(0), "Hint handler 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 316
    Result: Lived
    Original line:
                 require(src == ETH_TOKEN_ADDRESS || msg.value == 0, "msg.value should be 0");

    Mutated line:
                 require(src != ETH_TOKEN_ADDRESS || msg.value == 0, "msg.value should be 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 316
    Result: Lived
    Original line:
                 require(src == ETH_TOKEN_ADDRESS || msg.value == 0, "msg.value should be 0");

    Mutated line:
                 require(src == ETH_TOKEN_ADDRESS || msg.value != 0, "msg.value should be 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 321
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 339
    Result: Lived
    Original line:
                 require(destTokenBalanceAfter > balanceBefore.destTok, "Wrong amount in destination address");

    Mutated line:
                 require(destTokenBalanceAfter <= balanceBefore.destTok, "Wrong amount in destination address");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 340
    Result: Lived
    Original line:
                 require(balanceBefore.srcTok > srcTokenBalanceAfter, "Wrong amount in source address");

    Mutated line:
                 require(balanceBefore.srcTok <= srcTokenBalanceAfter, "Wrong amount in source address");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 167
    Result: Lived
    Original line:
                 worstRate = expectedRate * 97 / 100;

    Mutated line:
                 worstRate = expectedRate * 97 * 100;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 167
    Result: Lived
    Original line:
                 worstRate = expectedRate * 97 / 100;

    Mutated line:
                 worstRate = expectedRate / 97 / 100;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 342
    Result: Lived
    Original line:
                 outcome.userDeltaSrcToken = balanceBefore.srcTok - srcTokenBalanceAfter;

    Mutated line:
                 outcome.userDeltaSrcToken = balanceBefore.srcTok + srcTokenBalanceAfter;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 343
    Result: Lived
    Original line:
                 outcome.userDeltaDestToken = destTokenBalanceAfter - balanceBefore.destTok;

    Mutated line:
                 outcome.userDeltaDestToken = destTokenBalanceAfter + balanceBefore.destTok;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 347
    Result: Lived
    Original line:
                 uint srcTokenAmountAfterDeductingFee = outcome.userDeltaSrcToken * (BPS - platformFeeBps) / BPS;

    Mutated line:
                 uint srcTokenAmountAfterDeductingFee = outcome.userDeltaSrcToken * (BPS - platformFeeBps) * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 347
    Result: Lived
    Original line:
                 uint srcTokenAmountAfterDeductingFee = outcome.userDeltaSrcToken * (BPS - platformFeeBps) / BPS;

    Mutated line:
                 uint srcTokenAmountAfterDeductingFee = outcome.userDeltaSrcToken / (BPS - platformFeeBps) / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 347
    Result: Lived
    Original line:
                 uint srcTokenAmountAfterDeductingFee = outcome.userDeltaSrcToken * (BPS - platformFeeBps) / BPS;

    Mutated line:
                 uint srcTokenAmountAfterDeductingFee = outcome.userDeltaSrcToken * (BPS + platformFeeBps) / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 322
    Result: Lived
    Original line:
                     balanceBefore.srcTok += msg.value;

    Mutated line:
                     balanceBefore.srcTok -= msg.value;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 19
    Result: Lived
    Original line:
             constructor(address _admin) public Withdrawable2(_admin) 

    Mutated line:
             constructor(address _admin) public  


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 282
    Result: Lived
    Original line:
             function setKyberNetwork(IKyberNetwork _kyberNetwork) public onlyAdmin {

    Mutated line:
             function setKyberNetwork(IKyberNetwork _kyberNetwork) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetworkProxy.sol
    Line nr: 291
    Result: Lived
    Original line:
             function setHintHandler(IKyberHint _hintHandler) public onlyAdmin {

    Mutated line:
             function setHintHandler(IKyberHint _hintHandler) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockPermissionGroups2.sol
    Line nr: 9
    Result: Lived
    Original line:
             constructor() public PermissionGroups2(msg.sender) {}

    Mutated line:
             constructor() public  {}


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockPermissionGroups2.sol
    Line nr: 12
    Result: Lived
    Original line:
                 onlyOperator

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockPermissionGroups2.sol
    Line nr: 18
    Result: Lived
    Original line:
                 onlyAlerter

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockPermissionGroups2.sol
    Line nr: 24
    Result: Lived
    Original line:
                 onlyOperator

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousDAO.sol
    Line nr: 9
    Result: Lived
    Original line:
                 MockDAO(_rewardInBPS, _rebateInBPS, _epoch, _expiryBlockNumber) {}

    Mutated line:
                  {}


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a != 0 || c / a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c / a != b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(b > 0, "divider <= 0");

    Mutated line:
                 require(b >= 0, "divider <= 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a != b * c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(b <= a, "sub underflow");

    Mutated line:
                 require(b < a, "sub underflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 48
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a <= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 56
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a <= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length <= size + 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 140
    Result: Lived
    Original line:
                 require(_value <= _allowance, "transfer more then allowed");

    Mutated line:
                 require(_value < _allowance, "transfer more then allowed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a != 0 || c / a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c / a != b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(b > 0, "divider <= 0");

    Mutated line:
                 require(b <= 0, "divider <= 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a != b * c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(b <= a, "sub underflow");

    Mutated line:
                 require(b > a, "sub underflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 39
    Result: Lived
    Original line:
                 require(c >= a, "add overflow");

    Mutated line:
                 require(c < a, "add overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 44
    Result: Lived
    Original line:
                 return a >= b ? a : b;

    Mutated line:
                 return a < b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 48
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a >= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 52
    Result: Lived
    Original line:
                 return a >= b ? a : b;

    Mutated line:
                 return a < b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 56
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a >= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length >= size + 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 140
    Result: Lived
    Original line:
                 require(_value <= _allowance, "transfer more then allowed");

    Mutated line:
                 require(_value > _allowance, "transfer more then allowed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 20
    Result: Lived
    Original line:
                 uint c = a * b;

    Mutated line:
                 uint c = a / b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c * a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 27
    Result: Lived
    Original line:
                 uint c = a / b;

    Mutated line:
                 uint c = a * b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a == b * c - a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a == b / c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 34
    Result: Lived
    Original line:
                 return a - b;

    Mutated line:
                 return a + b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 38
    Result: Lived
    Original line:
                 uint c = a + b;

    Mutated line:
                 uint c = a - b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length < size - 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 109
    Result: Lived
    Original line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 * 32) returns (bool) {

    Mutated line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 / 32) returns (bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 174
    Result: Lived
    Original line:
             uint public INITIAL_SUPPLY = 10**(50+18);

    Mutated line:
             uint public INITIAL_SUPPLY = 10**(50 - 18);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 104
    Result: Lived
    Original line:
                     revert("short address");

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 109
    Result: Lived
    Original line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 * 32) returns (bool) {

    Mutated line:
             function transfer(address _to, uint _value)  public  returns (bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockWithdrawable.sol
    Line nr: 6
    Result: Lived
    Original line:
             constructor() public Withdrawable2(msg.sender) {}

    Mutated line:
             constructor() public  {}


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockUtils4.sol
    Line nr: 43
    Result: Lived
    Original line:
                 return setDecimals(token);

    Mutated line:
                 return 


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDaoMoreGetters.sol
    Line nr: 44
    Result: Lived
    Original line:
                 require(_rewardInBps == reward, "reward bps is wrong");

    Mutated line:
                 require(_rewardInBps != reward, "reward bps is wrong");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDaoMoreGetters.sol
    Line nr: 45
    Result: Lived
    Original line:
                 require(_rebateInBps == rebate, "rebate bps is wrong");

    Mutated line:
                 require(_rebateInBps != rebate, "rebate bps is wrong");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDaoMoreGetters.sol
    Line nr: 46
    Result: Lived
    Original line:
                 require(_burnInBps == burn, "burn bps is wrong");

    Mutated line:
                 require(_burnInBps != burn, "burn bps is wrong");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDaoMoreGetters.sol
    Line nr: 47
    Result: Lived
    Original line:
                 require(_epoch == epoch, "epoch is wrong");

    Mutated line:
                 require(_epoch != epoch, "epoch is wrong");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDaoMoreGetters.sol
    Line nr: 48
    Result: Lived
    Original line:
                 require(_expiryBlockNumber == expiryBN, "expiry block number is wrong");

    Mutated line:
                 require(_expiryBlockNumber != expiryBN, "expiry block number is wrong");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDaoMoreGetters.sol
    Line nr: 53
    Result: Lived
    Original line:
                 require(networkFee == _networkFee, "network fee is wrong");

    Mutated line:
                 require(networkFee != _networkFee, "network fee is wrong");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDaoMoreGetters.sol
    Line nr: 54
    Result: Lived
    Original line:
                 require(expiryBlock == _expiryBlockNumber, "expiry block number is wrong");

    Mutated line:
                 require(expiryBlock != _expiryBlockNumber, "expiry block number is wrong");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDaoMoreGetters.sol
    Line nr: 44
    Result: Lived
    Original line:
                 require(_rewardInBps == reward, "reward bps is wrong");

    Mutated line:
                 require(_rewardInBps != reward, "reward bps is wrong");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDaoMoreGetters.sol
    Line nr: 45
    Result: Lived
    Original line:
                 require(_rebateInBps == rebate, "rebate bps is wrong");

    Mutated line:
                 require(_rebateInBps != rebate, "rebate bps is wrong");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDaoMoreGetters.sol
    Line nr: 46
    Result: Lived
    Original line:
                 require(_burnInBps == burn, "burn bps is wrong");

    Mutated line:
                 require(_burnInBps != burn, "burn bps is wrong");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDaoMoreGetters.sol
    Line nr: 47
    Result: Lived
    Original line:
                 require(_epoch == epoch, "epoch is wrong");

    Mutated line:
                 require(_epoch != epoch, "epoch is wrong");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDaoMoreGetters.sol
    Line nr: 48
    Result: Lived
    Original line:
                 require(_expiryBlockNumber == expiryBN, "expiry block number is wrong");

    Mutated line:
                 require(_expiryBlockNumber != expiryBN, "expiry block number is wrong");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDaoMoreGetters.sol
    Line nr: 53
    Result: Lived
    Original line:
                 require(networkFee == _networkFee, "network fee is wrong");

    Mutated line:
                 require(networkFee != _networkFee, "network fee is wrong");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDaoMoreGetters.sol
    Line nr: 54
    Result: Lived
    Original line:
                 require(expiryBlock == _expiryBlockNumber, "expiry block number is wrong");

    Mutated line:
                 require(expiryBlock != _expiryBlockNumber, "expiry block number is wrong");


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockKyberDaoMoreGetters.sol
    Line nr: 12
    Result: Lived
    Original line:
             ) KyberDAO(

    Mutated line:
             )  public {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 8
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b);

    Mutated line:
                 require(a != 0 || c / a == b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 8
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b);

    Mutated line:
                 require(a == 0 || c / a != b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 13
    Result: Lived
    Original line:
                 require(b > 0);

    Mutated line:
                 require(b >= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 15
    Result: Lived
    Original line:
                 require(a == b * c + a % b);

    Mutated line:
                 require(a != b * c + a % b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 20
    Result: Lived
    Original line:
                 require(b <= a);

    Mutated line:
                 require(b < a);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 35
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a <= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 8
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b);

    Mutated line:
                 require(a != 0 || c / a == b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 8
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b);

    Mutated line:
                 require(a == 0 || c / a != b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 13
    Result: Lived
    Original line:
                 require(b > 0);

    Mutated line:
                 require(b <= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 15
    Result: Lived
    Original line:
                 require(a == b * c + a % b);

    Mutated line:
                 require(a != b * c + a % b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 20
    Result: Lived
    Original line:
                 require(b <= a);

    Mutated line:
                 require(b > a);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(c >= a);

    Mutated line:
                 require(c < a);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 31
    Result: Lived
    Original line:
                 return a >= b ? a : b;

    Mutated line:
                 return a < b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 35
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a >= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 7
    Result: Lived
    Original line:
                 uint c = a * b;

    Mutated line:
                 uint c = a / b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 8
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b);

    Mutated line:
                 require(a == 0 || c * a == b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 14
    Result: Lived
    Original line:
                 uint c = a / b;

    Mutated line:
                 uint c = a * b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 15
    Result: Lived
    Original line:
                 require(a == b * c + a % b);

    Mutated line:
                 require(a == b * c - a % b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 15
    Result: Lived
    Original line:
                 require(a == b * c + a % b);

    Mutated line:
                 require(a == b / c + a % b);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 21
    Result: Lived
    Original line:
                 return a - b;

    Mutated line:
                 return a + b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/zeppelin/SafeMath.sol
    Line nr: 25
    Result: Lived
    Original line:
                 uint c = a + b;

    Mutated line:
                 uint c = a - b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockFeeHandlerClaimRewardFailed.sol
    Line nr: 9
    Result: Lived
    Original line:
                 require(rewardToClaim <= address(this).balance);

    Mutated line:
                 require(rewardToClaim < address(this).balance);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockFeeHandlerClaimRewardFailed.sol
    Line nr: 9
    Result: Lived
    Original line:
                 require(rewardToClaim <= address(this).balance);

    Mutated line:
                 require(rewardToClaim > address(this).balance);


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockFeeHandlerClaimRewardFailed.sol
    Line nr: 8
    Result: Lived
    Original line:
                 uint rewardToClaim = percentInPrecision * reward / PRECISION;

    Mutated line:
                 uint rewardToClaim = percentInPrecision * reward * PRECISION;


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockFeeHandlerClaimRewardFailed.sol
    Line nr: 8
    Result: Lived
    Original line:
                 uint rewardToClaim = percentInPrecision * reward / PRECISION;

    Mutated line:
                 uint rewardToClaim = percentInPrecision / reward / PRECISION;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 47
    Result: Lived
    Original line:
                 if (srcQty == 0) { return 0; }

    Mutated line:
                 if (srcQty != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 52
    Result: Lived
    Original line:
                 IERC20 token = src == ETH_TOKEN_ADDRESS ? dest : src;

    Mutated line:
                 IERC20 token = src != ETH_TOKEN_ADDRESS ? dest : src;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 89
    Result: Lived
    Original line:
                 require(msg.sender == kyberNetwork, "trade: sender is not network");

    Mutated line:
                 require(msg.sender != kyberNetwork, "trade: sender is not network");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 90
    Result: Lived
    Original line:
                 require(srcAmount > 0, "trade: src amount must be greater than 0");

    Mutated line:
                 require(srcAmount >= 0, "trade: src amount must be greater than 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 91
    Result: Lived
    Original line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: src or dest must be ETH");

    Mutated line:
                 require(srcToken != ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: src or dest must be ETH");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 91
    Result: Lived
    Original line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: src or dest must be ETH");

    Mutated line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken != ETH_TOKEN_ADDRESS, "trade: src or dest must be ETH");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 92
    Result: Lived
    Original line:
                 require(srcToken == bancorToken || destToken == bancorToken, "trade: src or dest must be BNT");

    Mutated line:
                 require(srcToken != bancorToken || destToken == bancorToken, "trade: src or dest must be BNT");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 92
    Result: Lived
    Original line:
                 require(srcToken == bancorToken || destToken == bancorToken, "trade: src or dest must be BNT");

    Mutated line:
                 require(srcToken == bancorToken || destToken != bancorToken, "trade: src or dest must be BNT");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 142
    Result: Lived
    Original line:
                 require(destQty > 0, "setNewEthBntPath: no rate from eth to bnt with this path");

    Mutated line:
                 require(destQty >= 0, "setNewEthBntPath: no rate from eth to bnt with this path");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 145
    Result: Lived
    Original line:
                 require(destQty > 0, "setNewEthBntPath: no rate from bnt to eth with this path");

    Mutated line:
                 require(destQty >= 0, "setNewEthBntPath: no rate from bnt to eth with this path");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 173
    Result: Lived
    Original line:
                     require(conversionRate > 0);

    Mutated line:
                     require(conversionRate >= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 174
    Result: Lived
    Original line:
                     if (srcToken == ETH_TOKEN_ADDRESS)

    Mutated line:
                     if (srcToken != ETH_TOKEN_ADDRESS)


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 177
    Result: Lived
    Original line:
                         require(msg.value == 0, "doTrade: msg value is not correct for token trade");

    Mutated line:
                         require(msg.value != 0, "doTrade: msg value is not correct for token trade");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 175
    Result: Lived
    Original line:
                         require(msg.value == srcAmount, "doTrade: msg value is not correct for ETH trade");

    Mutated line:
                         require(msg.value != srcAmount, "doTrade: msg value is not correct for ETH trade");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 186
    Result: Lived
    Original line:
                 require(path.length > 0, "doTrade: couldn't find path");

    Mutated line:
                 require(path.length >= 0, "doTrade: couldn't find path");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 190
    Result: Lived
    Original line:
                 require(userExpectedDestAmount > 0, "doTrade: user expected amount must be greater than 0");

    Mutated line:
                 require(userExpectedDestAmount >= 0, "doTrade: user expected amount must be greater than 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 193
    Result: Lived
    Original line:
                 if (srcToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (srcToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 202
    Result: Lived
    Original line:
                 if (destToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (destToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 213
    Result: Lived
    Original line:
                 if (src == bancorToken) {

    Mutated line:
                 if (src != bancorToken) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 215
    Result: Lived
    Original line:
                 } else if (dest == bancorToken) {

    Mutated line:
                 } else if (dest != bancorToken) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 29
    Result: Lived
    Original line:
                 require(_bancorNetwork != address(0), "constructor: bancorNetwork address is missing");

    Mutated line:
                 require(_bancorNetwork == address(0), "constructor: bancorNetwork address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 30
    Result: Lived
    Original line:
                 require(_kyberNetwork != address(0), "constructor: kyberNetwork address is missing");

    Mutated line:
                 require(_kyberNetwork == address(0), "constructor: kyberNetwork address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 31
    Result: Lived
    Original line:
                 require(_bancorToken != address(0), "constructor: bancorToken address is missing");

    Mutated line:
                 require(_bancorToken == address(0), "constructor: bancorToken address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 47
    Result: Lived
    Original line:
                 if (srcQty == 0) { return 0; }

    Mutated line:
                 if (srcQty != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 49
    Result: Lived
    Original line:
                 if (src != ETH_TOKEN_ADDRESS && dest != ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src == ETH_TOKEN_ADDRESS && dest != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 49
    Result: Lived
    Original line:
                 if (src != ETH_TOKEN_ADDRESS && dest != ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS && dest == ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 52
    Result: Lived
    Original line:
                 IERC20 token = src == ETH_TOKEN_ADDRESS ? dest : src;

    Mutated line:
                 IERC20 token = src != ETH_TOKEN_ADDRESS ? dest : src;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 53
    Result: Lived
    Original line:
                 if (token != bancorToken) { return 0; } // not BNT token

    Mutated line:
                 if (token == bancorToken) { return 0; } // not BNT token


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 89
    Result: Lived
    Original line:
                 require(msg.sender == kyberNetwork, "trade: sender is not network");

    Mutated line:
                 require(msg.sender != kyberNetwork, "trade: sender is not network");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 90
    Result: Lived
    Original line:
                 require(srcAmount > 0, "trade: src amount must be greater than 0");

    Mutated line:
                 require(srcAmount <= 0, "trade: src amount must be greater than 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 91
    Result: Lived
    Original line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: src or dest must be ETH");

    Mutated line:
                 require(srcToken != ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: src or dest must be ETH");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 91
    Result: Lived
    Original line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken == ETH_TOKEN_ADDRESS, "trade: src or dest must be ETH");

    Mutated line:
                 require(srcToken == ETH_TOKEN_ADDRESS || destToken != ETH_TOKEN_ADDRESS, "trade: src or dest must be ETH");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 92
    Result: Lived
    Original line:
                 require(srcToken == bancorToken || destToken == bancorToken, "trade: src or dest must be BNT");

    Mutated line:
                 require(srcToken != bancorToken || destToken == bancorToken, "trade: src or dest must be BNT");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 92
    Result: Lived
    Original line:
                 require(srcToken == bancorToken || destToken == bancorToken, "trade: src or dest must be BNT");

    Mutated line:
                 require(srcToken == bancorToken || destToken != bancorToken, "trade: src or dest must be BNT");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 102
    Result: Lived
    Original line:
                 require(_kyberNetwork != address(0), "setKyberNetwork: kyberNetwork address is missing");

    Mutated line:
                 require(_kyberNetwork == address(0), "setKyberNetwork: kyberNetwork address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 111
    Result: Lived
    Original line:
                 require(_bancorNetwork != address(0), "setBancorContract: bancorNetwork address is missing");

    Mutated line:
                 require(_bancorNetwork == address(0), "setBancorContract: bancorNetwork address is missing");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 133
    Result: Lived
    Original line:
                 require(_ethToBntPath.length != 0, "setNewEthBntPath: path should have some elements");

    Mutated line:
                 require(_ethToBntPath.length == 0, "setNewEthBntPath: path should have some elements");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 134
    Result: Lived
    Original line:
                 require(_bntToEthPath.length != 0, "setNewEthBntPath: path should have some elements");

    Mutated line:
                 require(_bntToEthPath.length == 0, "setNewEthBntPath: path should have some elements");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 142
    Result: Lived
    Original line:
                 require(destQty > 0, "setNewEthBntPath: no rate from eth to bnt with this path");

    Mutated line:
                 require(destQty <= 0, "setNewEthBntPath: no rate from eth to bnt with this path");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 145
    Result: Lived
    Original line:
                 require(destQty > 0, "setNewEthBntPath: no rate from bnt to eth with this path");

    Mutated line:
                 require(destQty <= 0, "setNewEthBntPath: no rate from bnt to eth with this path");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 173
    Result: Lived
    Original line:
                     require(conversionRate > 0);

    Mutated line:
                     require(conversionRate <= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 174
    Result: Lived
    Original line:
                     if (srcToken == ETH_TOKEN_ADDRESS)

    Mutated line:
                     if (srcToken != ETH_TOKEN_ADDRESS)


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 177
    Result: Lived
    Original line:
                         require(msg.value == 0, "doTrade: msg value is not correct for token trade");

    Mutated line:
                         require(msg.value != 0, "doTrade: msg value is not correct for token trade");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 175
    Result: Lived
    Original line:
                         require(msg.value == srcAmount, "doTrade: msg value is not correct for ETH trade");

    Mutated line:
                         require(msg.value != srcAmount, "doTrade: msg value is not correct for ETH trade");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 180
    Result: Lived
    Original line:
                 if (srcToken != ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (srcToken == ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 186
    Result: Lived
    Original line:
                 require(path.length > 0, "doTrade: couldn't find path");

    Mutated line:
                 require(path.length <= 0, "doTrade: couldn't find path");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 190
    Result: Lived
    Original line:
                 require(userExpectedDestAmount > 0, "doTrade: user expected amount must be greater than 0");

    Mutated line:
                 require(userExpectedDestAmount <= 0, "doTrade: user expected amount must be greater than 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 193
    Result: Lived
    Original line:
                 if (srcToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (srcToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 199
    Result: Lived
    Original line:
                 require(destAmount >= userExpectedDestAmount, "doTrade: dest amount is lower than expected amount");

    Mutated line:
                 require(destAmount < userExpectedDestAmount, "doTrade: dest amount is lower than expected amount");


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 202
    Result: Lived
    Original line:
                 if (destToken == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (destToken != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 213
    Result: Lived
    Original line:
                 if (src == bancorToken) {

    Mutated line:
                 if (src != bancorToken) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 215
    Result: Lived
    Original line:
                 } else if (dest == bancorToken) {

    Mutated line:
                 } else if (dest != bancorToken) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 27
    Result: Lived
    Original line:
                 public Withdrawable2(_admin)

    Mutated line:
                 public 


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 101
    Result: Lived
    Original line:
             function setKyberNetwork(address _kyberNetwork) public onlyAdmin {

    Mutated line:
             function setKyberNetwork(address _kyberNetwork) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 110
    Result: Lived
    Original line:
             function setBancorContract(address _bancorNetwork) public onlyAdmin {

    Mutated line:
             function setBancorContract(address _bancorNetwork) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 123
    Result: Lived
    Original line:
             function enableTrade() public onlyAdmin returns(bool) {

    Mutated line:
             function enableTrade() public  returns(bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 132
    Result: Lived
    Original line:
             function setNewEthBntPath(IERC20[] memory _ethToBntPath, IERC20[] memory _bntToEthPath) public onlyAdmin {

    Mutated line:
             function setNewEthBntPath(IERC20[] memory _ethToBntPath, IERC20[] memory _bntToEthPath) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/bancor/KyberBancorReserve.sol
    Line nr: 153
    Result: Lived
    Original line:
             function disableTrade() public onlyAlerter returns(bool) {

    Mutated line:
             function disableTrade() public  returns(bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/KyberNetworkNoMaxDest.sol
    Line nr: 10
    Result: Lived
    Original line:
             constructor(address _admin) public KyberNetwork(_admin) { }

    Mutated line:
             constructor(address _admin) public  { }


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 23
    Result: Lived
    Original line:
                 if (token == ETH_TOKEN_ADDRESS)

    Mutated line:
                 if (token != ETH_TOKEN_ADDRESS)


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 30
    Result: Lived
    Original line:
                 if (token == ETH_TOKEN_ADDRESS)

    Mutated line:
                 if (token != ETH_TOKEN_ADDRESS)


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 37
    Result: Lived
    Original line:
                 if (token == ETH_TOKEN_ADDRESS) return ETH_DECIMALS; // save storage access

    Mutated line:
                 if (token != ETH_TOKEN_ADDRESS) return ETH_DECIMALS; // save storage access


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 41
    Result: Lived
    Original line:
                 if (tokenDecimals == 0) return token.decimals();

    Mutated line:
                 if (tokenDecimals != 0) return token.decimals();


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 47
    Result: Lived
    Original line:
                 if (token == ETH_TOKEN_ADDRESS) return ETH_DECIMALS; // save storage access

    Mutated line:
                 if (token != ETH_TOKEN_ADDRESS) return ETH_DECIMALS; // save storage access


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 51
    Result: Lived
    Original line:
                 if (tokenDecimals == 0) {

    Mutated line:
                 if (tokenDecimals != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 60
    Result: Lived
    Original line:
                 require(srcQty <= MAX_QTY, "srcQty > MAX_QTY");

    Mutated line:
                 require(srcQty < MAX_QTY, "srcQty > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 61
    Result: Lived
    Original line:
                 require(rate <= MAX_RATE, "rate > MAX_RATE");

    Mutated line:
                 require(rate < MAX_RATE, "rate > MAX_RATE");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 67
    Result: Lived
    Original line:
                     require((srcDecimals - dstDecimals) <= MAX_DECIMALS, "src - dst > MAX_DECIMALS");

    Mutated line:
                     require((srcDecimals - dstDecimals) < MAX_DECIMALS, "src - dst > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 64
    Result: Lived
    Original line:
                     require((dstDecimals - srcDecimals) <= MAX_DECIMALS, "dst - src > MAX_DECIMALS");

    Mutated line:
                     require((dstDecimals - srcDecimals) < MAX_DECIMALS, "dst - src > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 73
    Result: Lived
    Original line:
                 require(dstQty <= MAX_QTY, "dstQty > MAX_QTY");

    Mutated line:
                 require(dstQty < MAX_QTY, "dstQty > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 74
    Result: Lived
    Original line:
                 require(rate <= MAX_RATE, "rate > MAX_RATE");

    Mutated line:
                 require(rate < MAX_RATE, "rate > MAX_RATE");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 84
    Result: Lived
    Original line:
                     require((dstDecimals - srcDecimals) <= MAX_DECIMALS, "dst - src > MAX_DECIMALS");

    Mutated line:
                     require((dstDecimals - srcDecimals) < MAX_DECIMALS, "dst - src > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 80
    Result: Lived
    Original line:
                     require((srcDecimals - dstDecimals) <= MAX_DECIMALS, "src - dst > MAX_DECIMALS");

    Mutated line:
                     require((srcDecimals - dstDecimals) < MAX_DECIMALS, "src - dst > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 102
    Result: Lived
    Original line:
                 require(srcAmount <= MAX_QTY, "srcAmount > MAX_QTY");

    Mutated line:
                 require(srcAmount < MAX_QTY, "srcAmount > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 103
    Result: Lived
    Original line:
                 require(destAmount <= MAX_QTY, "destAmount > MAX_QTY");

    Mutated line:
                 require(destAmount < MAX_QTY, "destAmount > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 109
    Result: Lived
    Original line:
                     require((srcDecimals - dstDecimals) <= MAX_DECIMALS, "src - dst > MAX_DECIMALS");

    Mutated line:
                     require((srcDecimals - dstDecimals) < MAX_DECIMALS, "src - dst > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 106
    Result: Lived
    Original line:
                     require((dstDecimals - srcDecimals) <= MAX_DECIMALS, "dst - src > MAX_DECIMALS");

    Mutated line:
                     require((dstDecimals - srcDecimals) < MAX_DECIMALS, "dst - src > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 115
    Result: Lived
    Original line:
                 return x > y ? y : x;

    Mutated line:
                 return x >= y ? y : x;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 23
    Result: Lived
    Original line:
                 if (token == ETH_TOKEN_ADDRESS)

    Mutated line:
                 if (token != ETH_TOKEN_ADDRESS)


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 30
    Result: Lived
    Original line:
                 if (token == ETH_TOKEN_ADDRESS)

    Mutated line:
                 if (token != ETH_TOKEN_ADDRESS)


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 37
    Result: Lived
    Original line:
                 if (token == ETH_TOKEN_ADDRESS) return ETH_DECIMALS; // save storage access

    Mutated line:
                 if (token != ETH_TOKEN_ADDRESS) return ETH_DECIMALS; // save storage access


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 41
    Result: Lived
    Original line:
                 if (tokenDecimals == 0) return token.decimals();

    Mutated line:
                 if (tokenDecimals != 0) return token.decimals();


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 47
    Result: Lived
    Original line:
                 if (token == ETH_TOKEN_ADDRESS) return ETH_DECIMALS; // save storage access

    Mutated line:
                 if (token != ETH_TOKEN_ADDRESS) return ETH_DECIMALS; // save storage access


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 51
    Result: Lived
    Original line:
                 if (tokenDecimals == 0) {

    Mutated line:
                 if (tokenDecimals != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 60
    Result: Lived
    Original line:
                 require(srcQty <= MAX_QTY, "srcQty > MAX_QTY");

    Mutated line:
                 require(srcQty > MAX_QTY, "srcQty > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 61
    Result: Lived
    Original line:
                 require(rate <= MAX_RATE, "rate > MAX_RATE");

    Mutated line:
                 require(rate > MAX_RATE, "rate > MAX_RATE");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 63
    Result: Lived
    Original line:
                 if (dstDecimals >= srcDecimals) {

    Mutated line:
                 if (dstDecimals < srcDecimals) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 67
    Result: Lived
    Original line:
                     require((srcDecimals - dstDecimals) <= MAX_DECIMALS, "src - dst > MAX_DECIMALS");

    Mutated line:
                     require((srcDecimals - dstDecimals) > MAX_DECIMALS, "src - dst > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 64
    Result: Lived
    Original line:
                     require((dstDecimals - srcDecimals) <= MAX_DECIMALS, "dst - src > MAX_DECIMALS");

    Mutated line:
                     require((dstDecimals - srcDecimals) > MAX_DECIMALS, "dst - src > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 73
    Result: Lived
    Original line:
                 require(dstQty <= MAX_QTY, "dstQty > MAX_QTY");

    Mutated line:
                 require(dstQty > MAX_QTY, "dstQty > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 74
    Result: Lived
    Original line:
                 require(rate <= MAX_RATE, "rate > MAX_RATE");

    Mutated line:
                 require(rate > MAX_RATE, "rate > MAX_RATE");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 79
    Result: Lived
    Original line:
                 if (srcDecimals >= dstDecimals) {

    Mutated line:
                 if (srcDecimals < dstDecimals) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 84
    Result: Lived
    Original line:
                     require((dstDecimals - srcDecimals) <= MAX_DECIMALS, "dst - src > MAX_DECIMALS");

    Mutated line:
                     require((dstDecimals - srcDecimals) > MAX_DECIMALS, "dst - src > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 80
    Result: Lived
    Original line:
                     require((srcDecimals - dstDecimals) <= MAX_DECIMALS, "src - dst > MAX_DECIMALS");

    Mutated line:
                     require((srcDecimals - dstDecimals) > MAX_DECIMALS, "src - dst > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 102
    Result: Lived
    Original line:
                 require(srcAmount <= MAX_QTY, "srcAmount > MAX_QTY");

    Mutated line:
                 require(srcAmount > MAX_QTY, "srcAmount > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 103
    Result: Lived
    Original line:
                 require(destAmount <= MAX_QTY, "destAmount > MAX_QTY");

    Mutated line:
                 require(destAmount > MAX_QTY, "destAmount > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 105
    Result: Lived
    Original line:
                 if (dstDecimals >= srcDecimals) {

    Mutated line:
                 if (dstDecimals < srcDecimals) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 109
    Result: Lived
    Original line:
                     require((srcDecimals - dstDecimals) <= MAX_DECIMALS, "src - dst > MAX_DECIMALS");

    Mutated line:
                     require((srcDecimals - dstDecimals) > MAX_DECIMALS, "src - dst > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 106
    Result: Lived
    Original line:
                     require((dstDecimals - srcDecimals) <= MAX_DECIMALS, "dst - src > MAX_DECIMALS");

    Mutated line:
                     require((dstDecimals - srcDecimals) > MAX_DECIMALS, "dst - src > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 115
    Result: Lived
    Original line:
                 return x > y ? y : x;

    Mutated line:
                 return x <= y ? y : x;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 12
    Result: Lived
    Original line:
             uint  constant internal MAX_RATE  = (PRECISION * 10**7); // up to 10M tokens per ETH

    Mutated line:
             uint  constant internal MAX_RATE  = (PRECISION / 10**7); // up to 10M tokens per ETH


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 67
    Result: Lived
    Original line:
                     require((srcDecimals - dstDecimals) <= MAX_DECIMALS, "src - dst > MAX_DECIMALS");

    Mutated line:
                     require((srcDecimals + dstDecimals) <= MAX_DECIMALS, "src - dst > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 68
    Result: Lived
    Original line:
                     return (srcQty * rate) / (PRECISION * (10**(srcDecimals - dstDecimals)));

    Mutated line:
                     return (srcQty * rate) * (PRECISION * (10**(srcDecimals - dstDecimals)));


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 68
    Result: Lived
    Original line:
                     return (srcQty * rate) / (PRECISION * (10**(srcDecimals - dstDecimals)));

    Mutated line:
                     return (srcQty / rate) / (PRECISION * (10**(srcDecimals - dstDecimals)));


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 68
    Result: Lived
    Original line:
                     return (srcQty * rate) / (PRECISION * (10**(srcDecimals - dstDecimals)));

    Mutated line:
                     return (srcQty * rate) / (PRECISION / (10**(srcDecimals - dstDecimals)));


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 68
    Result: Lived
    Original line:
                     return (srcQty * rate) / (PRECISION * (10**(srcDecimals - dstDecimals)));

    Mutated line:
                     return (srcQty * rate) / (PRECISION * (10**(srcDecimals + dstDecimals)));


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 64
    Result: Lived
    Original line:
                     require((dstDecimals - srcDecimals) <= MAX_DECIMALS, "dst - src > MAX_DECIMALS");

    Mutated line:
                     require((dstDecimals + srcDecimals) <= MAX_DECIMALS, "dst - src > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 65
    Result: Lived
    Original line:
                     return (srcQty * rate * (10**(dstDecimals - srcDecimals))) / PRECISION;

    Mutated line:
                     return (srcQty * rate * (10**(dstDecimals - srcDecimals))) * PRECISION;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 65
    Result: Lived
    Original line:
                     return (srcQty * rate * (10**(dstDecimals - srcDecimals))) / PRECISION;

    Mutated line:
                     return (srcQty * rate / (10**(dstDecimals - srcDecimals))) / PRECISION;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 65
    Result: Lived
    Original line:
                     return (srcQty * rate * (10**(dstDecimals - srcDecimals))) / PRECISION;

    Mutated line:
                     return (srcQty / rate * (10**(dstDecimals - srcDecimals))) / PRECISION;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 65
    Result: Lived
    Original line:
                     return (srcQty * rate * (10**(dstDecimals - srcDecimals))) / PRECISION;

    Mutated line:
                     return (srcQty * rate * (10**(dstDecimals + srcDecimals))) / PRECISION;


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 84
    Result: Lived
    Original line:
                     require((dstDecimals - srcDecimals) <= MAX_DECIMALS, "dst - src > MAX_DECIMALS");

    Mutated line:
                     require((dstDecimals + srcDecimals) <= MAX_DECIMALS, "dst - src > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 85
    Result: Lived
    Original line:
                     numerator = (PRECISION * dstQty);

    Mutated line:
                     numerator = (PRECISION / dstQty);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 86
    Result: Lived
    Original line:
                     denominator = (rate * (10**(dstDecimals - srcDecimals)));

    Mutated line:
                     denominator = (rate / (10**(dstDecimals - srcDecimals)));


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 86
    Result: Lived
    Original line:
                     denominator = (rate * (10**(dstDecimals - srcDecimals)));

    Mutated line:
                     denominator = (rate * (10**(dstDecimals + srcDecimals)));


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 80
    Result: Lived
    Original line:
                     require((srcDecimals - dstDecimals) <= MAX_DECIMALS, "src - dst > MAX_DECIMALS");

    Mutated line:
                     require((srcDecimals + dstDecimals) <= MAX_DECIMALS, "src - dst > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 81
    Result: Lived
    Original line:
                     numerator = (PRECISION * dstQty * (10**(srcDecimals - dstDecimals)));

    Mutated line:
                     numerator = (PRECISION * dstQty / (10**(srcDecimals - dstDecimals)));


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 81
    Result: Lived
    Original line:
                     numerator = (PRECISION * dstQty * (10**(srcDecimals - dstDecimals)));

    Mutated line:
                     numerator = (PRECISION / dstQty * (10**(srcDecimals - dstDecimals)));


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 81
    Result: Lived
    Original line:
                     numerator = (PRECISION * dstQty * (10**(srcDecimals - dstDecimals)));

    Mutated line:
                     numerator = (PRECISION * dstQty * (10**(srcDecimals + dstDecimals)));


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 88
    Result: Lived
    Original line:
                 return (numerator + denominator - 1) / denominator; //avoid rounding down errors

    Mutated line:
                 return (numerator + denominator - 1) * denominator; //avoid rounding down errors


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 88
    Result: Lived
    Original line:
                 return (numerator + denominator - 1) / denominator; //avoid rounding down errors

    Mutated line:
                 return (numerator + denominator + 1) / denominator; //avoid rounding down errors


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 88
    Result: Lived
    Original line:
                 return (numerator + denominator - 1) / denominator; //avoid rounding down errors

    Mutated line:
                 return (numerator - denominator - 1) / denominator; //avoid rounding down errors


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 109
    Result: Lived
    Original line:
                     require((srcDecimals - dstDecimals) <= MAX_DECIMALS, "src - dst > MAX_DECIMALS");

    Mutated line:
                     require((srcDecimals + dstDecimals) <= MAX_DECIMALS, "src - dst > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 110
    Result: Lived
    Original line:
                     return (destAmount * PRECISION * (10 ** (srcDecimals - dstDecimals)) / srcAmount);

    Mutated line:
                     return (destAmount * PRECISION * (10 ** (srcDecimals - dstDecimals)) * srcAmount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 110
    Result: Lived
    Original line:
                     return (destAmount * PRECISION * (10 ** (srcDecimals - dstDecimals)) / srcAmount);

    Mutated line:
                     return (destAmount * PRECISION / (10 ** (srcDecimals - dstDecimals)) / srcAmount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 110
    Result: Lived
    Original line:
                     return (destAmount * PRECISION * (10 ** (srcDecimals - dstDecimals)) / srcAmount);

    Mutated line:
                     return (destAmount / PRECISION * (10 ** (srcDecimals - dstDecimals)) / srcAmount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 110
    Result: Lived
    Original line:
                     return (destAmount * PRECISION * (10 ** (srcDecimals - dstDecimals)) / srcAmount);

    Mutated line:
                     return (destAmount * PRECISION * (10 ** (srcDecimals + dstDecimals)) / srcAmount);


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 106
    Result: Lived
    Original line:
                     require((dstDecimals - srcDecimals) <= MAX_DECIMALS, "dst - src > MAX_DECIMALS");

    Mutated line:
                     require((dstDecimals + srcDecimals) <= MAX_DECIMALS, "dst - src > MAX_DECIMALS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 107
    Result: Lived
    Original line:
                     return (destAmount * PRECISION / ((10 ** (dstDecimals - srcDecimals)) * srcAmount));

    Mutated line:
                     return (destAmount * PRECISION * ((10 ** (dstDecimals - srcDecimals)) * srcAmount));


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 107
    Result: Lived
    Original line:
                     return (destAmount * PRECISION / ((10 ** (dstDecimals - srcDecimals)) * srcAmount));

    Mutated line:
                     return (destAmount / PRECISION / ((10 ** (dstDecimals - srcDecimals)) * srcAmount));


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 107
    Result: Lived
    Original line:
                     return (destAmount * PRECISION / ((10 ** (dstDecimals - srcDecimals)) * srcAmount));

    Mutated line:
                     return (destAmount * PRECISION / ((10 ** (dstDecimals - srcDecimals)) / srcAmount));


Mutation:
    File: /home/desmond/smart-contracts/contracts/utils/Utils4.sol
    Line nr: 107
    Result: Lived
    Original line:
                     return (destAmount * PRECISION / ((10 ** (dstDecimals - srcDecimals)) * srcAmount));

    Mutated line:
                     return (destAmount * PRECISION / ((10 ** (dstDecimals + srcDecimals)) * srcAmount));


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a != 0 || c / a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c / a != b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(b > 0, "divider <= 0");

    Mutated line:
                 require(b >= 0, "divider <= 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a != b * c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(b <= a, "sub underflow");

    Mutated line:
                 require(b < a, "sub underflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 48
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a <= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 56
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a <= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length <= size + 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 140
    Result: Lived
    Original line:
                 require(_value <= _allowance, "transfer more then allowed");

    Mutated line:
                 require(_value < _allowance, "transfer more then allowed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a != 0 || c / a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c / a != b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(b > 0, "divider <= 0");

    Mutated line:
                 require(b <= 0, "divider <= 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a != b * c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(b <= a, "sub underflow");

    Mutated line:
                 require(b > a, "sub underflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 39
    Result: Lived
    Original line:
                 require(c >= a, "add overflow");

    Mutated line:
                 require(c < a, "add overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 44
    Result: Lived
    Original line:
                 return a >= b ? a : b;

    Mutated line:
                 return a < b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 48
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a >= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 52
    Result: Lived
    Original line:
                 return a >= b ? a : b;

    Mutated line:
                 return a < b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 56
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a >= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length >= size + 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 140
    Result: Lived
    Original line:
                 require(_value <= _allowance, "transfer more then allowed");

    Mutated line:
                 require(_value > _allowance, "transfer more then allowed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 20
    Result: Lived
    Original line:
                 uint c = a * b;

    Mutated line:
                 uint c = a / b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c * a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 27
    Result: Lived
    Original line:
                 uint c = a / b;

    Mutated line:
                 uint c = a * b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a == b * c - a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a == b / c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 34
    Result: Lived
    Original line:
                 return a - b;

    Mutated line:
                 return a + b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 38
    Result: Lived
    Original line:
                 uint c = a + b;

    Mutated line:
                 uint c = a - b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length < size - 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 109
    Result: Lived
    Original line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 * 32) returns (bool) {

    Mutated line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 / 32) returns (bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 174
    Result: Lived
    Original line:
             uint public INITIAL_SUPPLY = 10**(50+18);

    Mutated line:
             uint public INITIAL_SUPPLY = 10**(50 - 18);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 104
    Result: Lived
    Original line:
                     revert("short address");

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 109
    Result: Lived
    Original line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 * 32) returns (bool) {

    Mutated line:
             function transfer(address _to, uint _value)  public  returns (bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a != 0 || c / a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c / a != b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(b > 0, "divider <= 0");

    Mutated line:
                 require(b >= 0, "divider <= 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a != b * c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(b <= a, "sub underflow");

    Mutated line:
                 require(b < a, "sub underflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 48
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a <= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 56
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a <= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length <= size + 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 140
    Result: Lived
    Original line:
                 require(_value <= _allowance, "transfer more then allowed");

    Mutated line:
                 require(_value < _allowance, "transfer more then allowed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a != 0 || c / a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c / a != b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 26
    Result: Lived
    Original line:
                 require(b > 0, "divider <= 0");

    Mutated line:
                 require(b <= 0, "divider <= 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a != b * c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 33
    Result: Lived
    Original line:
                 require(b <= a, "sub underflow");

    Mutated line:
                 require(b > a, "sub underflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 39
    Result: Lived
    Original line:
                 require(c >= a, "add overflow");

    Mutated line:
                 require(c < a, "add overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 44
    Result: Lived
    Original line:
                 return a >= b ? a : b;

    Mutated line:
                 return a < b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 48
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a >= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 52
    Result: Lived
    Original line:
                 return a >= b ? a : b;

    Mutated line:
                 return a < b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 56
    Result: Lived
    Original line:
                 return a < b ? a : b;

    Mutated line:
                 return a >= b ? a : b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length >= size + 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 140
    Result: Lived
    Original line:
                 require(_value <= _allowance, "transfer more then allowed");

    Mutated line:
                 require(_value > _allowance, "transfer more then allowed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 20
    Result: Lived
    Original line:
                 uint c = a * b;

    Mutated line:
                 uint c = a / b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 21
    Result: Lived
    Original line:
                 require(a == 0 || c / a == b, "mul overflow");

    Mutated line:
                 require(a == 0 || c * a == b, "mul overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 27
    Result: Lived
    Original line:
                 uint c = a / b;

    Mutated line:
                 uint c = a * b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a == b * c - a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 28
    Result: Lived
    Original line:
                 require(a == b * c + a % b, "div failed");

    Mutated line:
                 require(a == b / c + a % b, "div failed");


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 34
    Result: Lived
    Original line:
                 return a - b;

    Mutated line:
                 return a + b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 38
    Result: Lived
    Original line:
                 uint c = a + b;

    Mutated line:
                 uint c = a - b;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (msg.data.length < size + 4) {

    Mutated line:
                 if (msg.data.length < size - 4) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 109
    Result: Lived
    Original line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 * 32) returns (bool) {

    Mutated line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 / 32) returns (bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 174
    Result: Lived
    Original line:
             uint public INITIAL_SUPPLY = 10**(50+18);

    Mutated line:
             uint public INITIAL_SUPPLY = 10**(50 - 18);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 104
    Result: Lived
    Original line:
                     revert("short address");

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/TokenNoDecimal.sol
    Line nr: 109
    Result: Lived
    Original line:
             function transfer(address _to, uint _value)  public onlyPayloadSize(2 * 32) returns (bool) {

    Mutated line:
             function transfer(address _to, uint _value)  public  returns (bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 75
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 81
    Result: Lived
    Original line:
                     require(msg.value == 0);

    Mutated line:
                     require(msg.value != 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 76
    Result: Lived
    Original line:
                     require(srcAmount == msg.value);

    Mutated line:
                     require(srcAmount != msg.value);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 91
    Result: Lived
    Original line:
                 require(rate > 0);

    Mutated line:
                 require(rate >= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 92
    Result: Lived
    Original line:
                 require(rate > minConversionRate);

    Mutated line:
                 require(rate >= minConversionRate);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (dest == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (dest != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 75
    Result: Lived
    Original line:
                 if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 81
    Result: Lived
    Original line:
                     require(msg.value == 0);

    Mutated line:
                     require(msg.value != 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 76
    Result: Lived
    Original line:
                     require(srcAmount == msg.value);

    Mutated line:
                     require(srcAmount != msg.value);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 91
    Result: Lived
    Original line:
                 require(rate > 0);

    Mutated line:
                 require(rate <= 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 92
    Result: Lived
    Original line:
                 require(rate > minConversionRate);

    Mutated line:
                 require(rate <= minConversionRate);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 103
    Result: Lived
    Original line:
                 if (dest == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (dest != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 24
    Result: Lived
    Original line:
                 worstRate = expectedRate * 97 / 100;

    Mutated line:
                 worstRate = expectedRate * 97 * 100;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 24
    Result: Lived
    Original line:
                 worstRate = expectedRate * 97 / 100;

    Mutated line:
                 worstRate = expectedRate / 97 / 100;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 55
    Result: Lived
    Original line:
                 expectedRate = expectedRate * (BPS - customFeeBps) / BPS;

    Mutated line:
                 expectedRate = expectedRate * (BPS - customFeeBps) * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 55
    Result: Lived
    Original line:
                 expectedRate = expectedRate * (BPS - customFeeBps) / BPS;

    Mutated line:
                 expectedRate = expectedRate / (BPS - customFeeBps) / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 55
    Result: Lived
    Original line:
                 expectedRate = expectedRate * (BPS - customFeeBps) / BPS;

    Mutated line:
                 expectedRate = expectedRate * (BPS + customFeeBps) / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 77
    Result: Lived
    Original line:
                     networkFeeWei = srcAmount * networkFeeBps / BPS;

    Mutated line:
                     networkFeeWei = srcAmount * networkFeeBps * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 77
    Result: Lived
    Original line:
                     networkFeeWei = srcAmount * networkFeeBps / BPS;

    Mutated line:
                     networkFeeWei = srcAmount / networkFeeBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 78
    Result: Lived
    Original line:
                     platformFeeWei = srcAmount * platformFeeBps / BPS;

    Mutated line:
                     platformFeeWei = srcAmount * platformFeeBps * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 78
    Result: Lived
    Original line:
                     platformFeeWei = srcAmount * platformFeeBps / BPS;

    Mutated line:
                     platformFeeWei = srcAmount / platformFeeBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 79
    Result: Lived
    Original line:
                     srcAmount = srcAmount - networkFeeWei - platformFeeWei;

    Mutated line:
                     srcAmount = srcAmount - networkFeeWei + platformFeeWei;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 79
    Result: Lived
    Original line:
                     srcAmount = srcAmount - networkFeeWei - platformFeeWei;

    Mutated line:
                     srcAmount = srcAmount + networkFeeWei - platformFeeWei;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 94
    Result: Lived
    Original line:
                 destAmount = srcAmount * rate / PRECISION;

    Mutated line:
                 destAmount = srcAmount * rate * PRECISION;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 94
    Result: Lived
    Original line:
                 destAmount = srcAmount * rate / PRECISION;

    Mutated line:
                 destAmount = srcAmount / rate / PRECISION;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 104
    Result: Lived
    Original line:
                     networkFeeWei = destAmount * networkFeeBps / BPS;

    Mutated line:
                     networkFeeWei = destAmount * networkFeeBps * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 104
    Result: Lived
    Original line:
                     networkFeeWei = destAmount * networkFeeBps / BPS;

    Mutated line:
                     networkFeeWei = destAmount / networkFeeBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 105
    Result: Lived
    Original line:
                     platformFeeWei = destAmount * platformFeeBps / BPS;

    Mutated line:
                     platformFeeWei = destAmount * platformFeeBps * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 105
    Result: Lived
    Original line:
                     platformFeeWei = destAmount * platformFeeBps / BPS;

    Mutated line:
                     platformFeeWei = destAmount / platformFeeBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 106
    Result: Lived
    Original line:
                     destAmount -= (networkFeeWei + platformFeeWei);

    Mutated line:
                     destAmount -= (networkFeeWei - platformFeeWei);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/SimpleKyberProxy.sol
    Line nr: 106
    Result: Lived
    Original line:
                     destAmount -= (networkFeeWei + platformFeeWei);

    Mutated line:
                     destAmount += (networkFeeWei + platformFeeWei);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MockTradeLogic.sol
    Line nr: 10
    Result: Lived
    Original line:
             constructor(address _admin) public KyberMatchingEngine(_admin) 

    Mutated line:
             constructor(address _admin) public  


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 17
    Result: Lived
    Original line:
                 if (reserveId == 0) return false;

    Mutated line:
                 if (reserveId != 0) return false;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 18
    Result: Lived
    Original line:
                 if (resType == ReserveType.NONE) return false;

    Mutated line:
                 if (resType != ReserveType.NONE) return false;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 19
    Result: Lived
    Original line:
                 if (uint256(resType) > uint256(ReserveType.LAST)) return false;

    Mutated line:
                 if (uint256(resType) >= uint256(ReserveType.LAST)) return false;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 20
    Result: Lived
    Original line:
                 if (feePayingPerType == 0xffffffff) return false;

    Mutated line:
                 if (feePayingPerType != 0xffffffff) return false;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 22
    Result: Lived
    Original line:
                 if (reserveIdToAddresses[reserveId].length == 0) {

    Mutated line:
                 if (reserveIdToAddresses[reserveId].length != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 26
    Result: Lived
    Original line:
                         reserveIdToAddresses[reserveId][0] == address(0),

    Mutated line:
                         reserveIdToAddresses[reserveId][0] != address(0),


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 43
    Result: Lived
    Original line:
                 if (reserveAddressToId[reserve] == bytes8(0)) {

    Mutated line:
                 if (reserveAddressToId[reserve] != bytes8(0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 64
    Result: Lived
    Original line:
                 if(reserveAddressToId[address(reserve)] == bytes8(0)) return false; // return false instead of revert

    Mutated line:
                 if(reserveAddressToId[address(reserve)] != bytes8(0)) return false; // return false instead of revert


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 78
    Result: Lived
    Original line:
                 if (_negligibleRateDiffBps > BPS) return false; // return false instead of revert

    Mutated line:
                 if (_negligibleRateDiffBps >= BPS) return false; // return false instead of revert


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 16
    Result: Lived
    Original line:
                 if (reserveAddressToId[reserve] != bytes8(0)) return false;

    Mutated line:
                 if (reserveAddressToId[reserve] == bytes8(0)) return false;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 17
    Result: Lived
    Original line:
                 if (reserveId == 0) return false;

    Mutated line:
                 if (reserveId != 0) return false;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 18
    Result: Lived
    Original line:
                 if (resType == ReserveType.NONE) return false;

    Mutated line:
                 if (resType != ReserveType.NONE) return false;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 19
    Result: Lived
    Original line:
                 if (uint256(resType) > uint256(ReserveType.LAST)) return false;

    Mutated line:
                 if (uint256(resType) <= uint256(ReserveType.LAST)) return false;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 20
    Result: Lived
    Original line:
                 if (feePayingPerType == 0xffffffff) return false;

    Mutated line:
                 if (feePayingPerType != 0xffffffff) return false;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 22
    Result: Lived
    Original line:
                 if (reserveIdToAddresses[reserveId].length == 0) {

    Mutated line:
                 if (reserveIdToAddresses[reserveId].length != 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 26
    Result: Lived
    Original line:
                         reserveIdToAddresses[reserveId][0] == address(0),

    Mutated line:
                         reserveIdToAddresses[reserveId][0] != address(0),


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 43
    Result: Lived
    Original line:
                 if (reserveAddressToId[reserve] == bytes8(0)) {

    Mutated line:
                 if (reserveAddressToId[reserve] != bytes8(0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 64
    Result: Lived
    Original line:
                 if(reserveAddressToId[address(reserve)] == bytes8(0)) return false; // return false instead of revert

    Mutated line:
                 if(reserveAddressToId[address(reserve)] != bytes8(0)) return false; // return false instead of revert


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 78
    Result: Lived
    Original line:
                 if (_negligibleRateDiffBps > BPS) return false; // return false instead of revert

    Mutated line:
                 if (_negligibleRateDiffBps <= BPS) return false; // return false instead of revert


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 66
    Result: Lived
    Original line:
                     listPairs(IKyberReserve(reserve), token, false, add);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 70
    Result: Lived
    Original line:
                     listPairs(IKyberReserve(reserve), token, true, add);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 73
    Result: Lived
    Original line:
                 setDecimals(token);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 6
    Result: Lived
    Original line:
             constructor(address _admin) public KyberMatchingEngine(_admin) {

    Mutated line:
             constructor(address _admin) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 13
    Result: Lived
    Original line:
                 onlyNetwork

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 39
    Result: Lived
    Original line:
                 onlyNetwork

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 63
    Result: Lived
    Original line:
             ) external onlyNetwork returns (bool) {

    Mutated line:
             ) external  returns (bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/OtherMatchingEngine.sol
    Line nr: 77
    Result: Lived
    Original line:
             function setNegligbleRateDiffBps(uint _negligibleRateDiffBps) external onlyNetwork returns (bool) {

    Mutated line:
             function setNegligbleRateDiffBps(uint _negligibleRateDiffBps) external  returns (bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 64
    Result: Lived
    Original line:
                 A.srcAmount = optionalBuyAmount > 0 ? optionalBuyAmount : 1000;

    Mutated line:
                 A.srcAmount = optionalBuyAmount >= 0 ? optionalBuyAmount : 1000;


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 71
    Result: Lived
    Original line:
                     if (networkFeeBps == 0 || !isFeePaying[i]) {

    Mutated line:
                     if (networkFeeBps != 0 || !isFeePaying[i]) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 70
    Result: Lived
    Original line:
                 for (i = 0; i < buyReserves.length; i++) {

    Mutated line:
                 for (i = 0; i <= buyReserves.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 83
    Result: Lived
    Original line:
                 A.srcAmount = optionalSellAmount > 0 ? optionalSellAmount : 1000;

    Mutated line:
                 A.srcAmount = optionalSellAmount >= 0 ? optionalSellAmount : 1000;


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 90
    Result: Lived
    Original line:
                     if (networkFeeBps == 0 || !isFeePaying[i]) {

    Mutated line:
                     if (networkFeeBps != 0 || !isFeePaying[i]) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 88
    Result: Lived
    Original line:
                 for (i = 0; i < sellReserves.length; i++) {

    Mutated line:
                 for (i = 0; i <= sellReserves.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 104
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserves.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= reserves.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 22
    Result: Lived
    Original line:
                 require(_matchingEngine != IKyberMatchingEngine(0), "missing addr");

    Mutated line:
                 require(_matchingEngine == IKyberMatchingEngine(0), "missing addr");


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 23
    Result: Lived
    Original line:
                 require(_kyberDAO != IKyberDAO(0), "missing addr");

    Mutated line:
                 require(_kyberDAO == IKyberDAO(0), "missing addr");


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 25
    Result: Lived
    Original line:
                 if (matchingEngine != _matchingEngine) {

    Mutated line:
                 if (matchingEngine == _matchingEngine) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 30
    Result: Lived
    Original line:
                 if (kyberDAO != _kyberDAO) {

    Mutated line:
                 if (kyberDAO == _kyberDAO) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 64
    Result: Lived
    Original line:
                 A.srcAmount = optionalBuyAmount > 0 ? optionalBuyAmount : 1000;

    Mutated line:
                 A.srcAmount = optionalBuyAmount <= 0 ? optionalBuyAmount : 1000;


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 71
    Result: Lived
    Original line:
                     if (networkFeeBps == 0 || !isFeePaying[i]) {

    Mutated line:
                     if (networkFeeBps != 0 || !isFeePaying[i]) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 70
    Result: Lived
    Original line:
                 for (i = 0; i < buyReserves.length; i++) {

    Mutated line:
                 for (i = 0; i >= buyReserves.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 83
    Result: Lived
    Original line:
                 A.srcAmount = optionalSellAmount > 0 ? optionalSellAmount : 1000;

    Mutated line:
                 A.srcAmount = optionalSellAmount <= 0 ? optionalSellAmount : 1000;


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 90
    Result: Lived
    Original line:
                     if (networkFeeBps == 0 || !isFeePaying[i]) {

    Mutated line:
                     if (networkFeeBps != 0 || !isFeePaying[i]) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 88
    Result: Lived
    Original line:
                 for (i = 0; i < sellReserves.length; i++) {

    Mutated line:
                 for (i = 0; i >= sellReserves.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 104
    Result: Lived
    Original line:
                 for (uint i = 0; i < reserves.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= reserves.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 76
    Result: Lived
    Original line:
                     A.ethSrcAmount = A.srcAmount - (A.srcAmount * networkFeeBps / BPS);

    Mutated line:
                     A.ethSrcAmount = A.srcAmount + (A.srcAmount * networkFeeBps / BPS);


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 76
    Result: Lived
    Original line:
                     A.ethSrcAmount = A.srcAmount - (A.srcAmount * networkFeeBps / BPS);

    Mutated line:
                     A.ethSrcAmount = A.srcAmount - (A.srcAmount * networkFeeBps * BPS);


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 76
    Result: Lived
    Original line:
                     A.ethSrcAmount = A.srcAmount - (A.srcAmount * networkFeeBps / BPS);

    Mutated line:
                     A.ethSrcAmount = A.srcAmount - (A.srcAmount / networkFeeBps / BPS);


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 94
    Result: Lived
    Original line:
                     A.destAmount -= networkFeeBps * A.destAmount / BPS;

    Mutated line:
                     A.destAmount -= networkFeeBps * A.destAmount * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 94
    Result: Lived
    Original line:
                     A.destAmount -= networkFeeBps * A.destAmount / BPS;

    Mutated line:
                     A.destAmount -= networkFeeBps / A.destAmount / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 94
    Result: Lived
    Original line:
                     A.destAmount -= networkFeeBps * A.destAmount / BPS;

    Mutated line:
                     A.destAmount += networkFeeBps * A.destAmount / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 15
    Result: Lived
    Original line:
                 Withdrawable2(_admin)

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/wrappers/KyberRateHelper.sol
    Line nr: 21
    Result: Lived
    Original line:
             function setContracts(IKyberMatchingEngine _matchingEngine, IKyberDAO _kyberDAO) public onlyAdmin {

    Mutated line:
             function setContracts(IKyberMatchingEngine _matchingEngine, IKyberDAO _kyberDAO) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 35
    Result: Lived
    Original line:
                 if (src == dest) {

    Mutated line:
                 if (src != dest) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 42
    Result: Lived
    Original line:
                 TradingReserves memory reservesData = src == ETH_TOKEN_ADDRESS? tData.ethToToken : tData.tokenToEth;

    Mutated line:
                 TradingReserves memory reservesData = src != ETH_TOKEN_ADDRESS? tData.ethToToken : tData.tokenToEth;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 47
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;

    Mutated line:
                     uint splitAmount = i != (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 49
    Result: Lived
    Original line:
                     callValue = (src == ETH_TOKEN_ADDRESS)? splitAmount : 0;

    Mutated line:
                     callValue = (src != ETH_TOKEN_ADDRESS)? splitAmount : 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 46
    Result: Lived
    Original line:
                 for(uint i = 0; i < reservesData.addresses.length; i++) {

    Mutated line:
                 for(uint i = 0; i <= reservesData.addresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 35
    Result: Lived
    Original line:
                 if (src == dest) {

    Mutated line:
                 if (src != dest) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 37
    Result: Lived
    Original line:
                     if (destAddress != (address(this)))

    Mutated line:
                     if (destAddress == (address(this)))


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 42
    Result: Lived
    Original line:
                 TradingReserves memory reservesData = src == ETH_TOKEN_ADDRESS? tData.ethToToken : tData.tokenToEth;

    Mutated line:
                 TradingReserves memory reservesData = src != ETH_TOKEN_ADDRESS? tData.ethToToken : tData.tokenToEth;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 47
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;

    Mutated line:
                     uint splitAmount = i != (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 49
    Result: Lived
    Original line:
                     callValue = (src == ETH_TOKEN_ADDRESS)? splitAmount : 0;

    Mutated line:
                     callValue = (src != ETH_TOKEN_ADDRESS)? splitAmount : 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 46
    Result: Lived
    Original line:
                 for(uint i = 0; i < reservesData.addresses.length; i++) {

    Mutated line:
                 for(uint i = 0; i >= reservesData.addresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 55
    Result: Lived
    Original line:
                 if (destAddress != address(this)) {

    Mutated line:
                 if (destAddress == address(this)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 38
    Result: Lived
    Original line:
                         destAddress.transfer(amount - myFeeWei);

    Mutated line:
                         destAddress.transfer(amount + myFeeWei);


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 47
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;

    Mutated line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length + 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 47
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;

    Mutated line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 47
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;

    Mutated line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] / amount / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 47
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;

    Mutated line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount + srcAmountSoFar) : reservesData.splitValuesBps[i] * amount / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 56
    Result: Lived
    Original line:
                     dest.safeTransfer(destAddress, (expectedDestAmount - myFeeWei));

    Mutated line:
                     dest.safeTransfer(destAddress, (expectedDestAmount + myFeeWei));


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 48
    Result: Lived
    Original line:
                     srcAmountSoFar += splitAmount;

    Mutated line:
                     srcAmountSoFar -= splitAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/mock/MaliciousKyberNetwork2.sol
    Line nr: 11
    Result: Lived
    Original line:
             constructor(address _admin) public KyberNetwork(_admin) { }

    Mutated line:
             constructor(address _admin) public  { }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/mock/MockMaliciousDAO.sol
    Line nr: 12
    Result: Lived
    Original line:
             ) KyberDAO(

    Mutated line:
             )  public {


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/WethTokenV5.sol
    Line nr: 19
    Result: Lived
    Original line:
                 require(balances[msg.sender] >= wad);

    Mutated line:
                 require(balances[msg.sender] < wad);


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/WethTokenV5.sol
    Line nr: 12
    Result: Lived
    Original line:
                 balances[msg.sender] += msg.value;

    Mutated line:
                 balances[msg.sender] -= msg.value;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/WethTokenV5.sol
    Line nr: 20
    Result: Lived
    Original line:
                 balances[msg.sender] -= wad;

    Mutated line:
                 balances[msg.sender] += wad;


Mutation:
    File: /home/desmond/smart-contracts/contracts/bridges/eth2dai/mock/WethTokenV5.sol
    Line nr: 7
    Result: Lived
    Original line:
             constructor(string memory _name, string memory _symbol, uint _decimals) Token(_name, _symbol, _decimals) public {}

    Mutated line:
             constructor(string memory _name, string memory _symbol, uint _decimals)  public {}


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 180
    Result: Lived
    Original line:
                     if (reserves[i] == IKyberReserve(reserve)) {

    Mutated line:
                     if (reserves[i] != IKyberReserve(reserve)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 179
    Result: Lived
    Original line:
                 for (uint i = startIndex; i < reserves.length; i++) {

    Mutated line:
                 for (uint i = startIndex; i <= reserves.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 247
    Result: Lived
    Original line:
                 if ((feeHandler.length == 0) || (_feeHandler != feeHandler[0])) {

    Mutated line:
                 if ((feeHandler.length != 0) || (_feeHandler != feeHandler[0])) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 249
    Result: Lived
    Original line:
                     if (feeHandler.length > 0) {

    Mutated line:
                     if (feeHandler.length >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 259
    Result: Lived
    Original line:
                 if (matchingEngine.length == 0 || _matchingEngine != matchingEngine[0]) {

    Mutated line:
                 if (matchingEngine.length != 0 || _matchingEngine != matchingEngine[0]) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 260
    Result: Lived
    Original line:
                     if (matchingEngine.length > 0) {

    Mutated line:
                     if (matchingEngine.length >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 281
    Result: Lived
    Original line:
                 if (kyberDAO.length > 0) {

    Mutated line:
                 if (kyberDAO.length >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 305
    Result: Lived
    Original line:
                     require(kyberProxyArray.length > 0, "proxy 0");

    Mutated line:
                     require(kyberProxyArray.length >= 0, "proxy 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 319
    Result: Lived
    Original line:
                 require(kyberProxyArray.length < MAX_APPROVED_PROXIES, "Max 2 proxy");

    Mutated line:
                 require(kyberProxyArray.length <= MAX_APPROVED_PROXIES, "Max 2 proxy");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 333
    Result: Lived
    Original line:
                     if (kyberProxyArray[i] == networkProxy) {

    Mutated line:
                     if (kyberProxyArray[i] != networkProxy) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 332
    Result: Lived
    Original line:
                 for (uint i = 0; i < kyberProxyArray.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= kyberProxyArray.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 370
    Result: Lived
    Original line:
                 if (src == dest) return (0, 0);

    Mutated line:
                 if (src != dest) return (0, 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 377
    Result: Lived
    Original line:
                     srcAmount: (qty == 0) ? 1 : qty,

    Mutated line:
                     srcAmount: (qty != 0) ? 1 : qty,


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 408
    Result: Lived
    Original line:
                 if (src == dest) return (0, 0, 0);

    Mutated line:
                 if (src != dest) return (0, 0, 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 414
    Result: Lived
    Original line:
                     srcAmount: (srcQty == 0) ? 1 : srcQty,

    Mutated line:
                     srcAmount: (srcQty != 0) ? 1 : srcQty,


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 650
    Result: Lived
    Original line:
                 for (uint i = startIndex; i < startIndex + numReserves; i++) {

    Mutated line:
                 for (uint i = startIndex; i <= startIndex + numReserves; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 663
    Result: Lived
    Original line:
                 if ((tData.numFeePayingReserves == 0) && (tData.platformFeeWei == 0)) return true;

    Mutated line:
                 if ((tData.numFeePayingReserves != 0) && (tData.platformFeeWei == 0)) return true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 663
    Result: Lived
    Original line:
                 if ((tData.numFeePayingReserves == 0) && (tData.platformFeeWei == 0)) return true;

    Mutated line:
                 if ((tData.numFeePayingReserves == 0) && (tData.platformFeeWei != 0)) return true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 715
    Result: Lived
    Original line:
                 for(uint i = 0; i < resList.isFeePaying.length; i++) {

    Mutated line:
                 for(uint i = 0; i <= resList.isFeePaying.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 732
    Result: Lived
    Original line:
                     uint destAmountSplit = i == (splitValuesBps.length - 1) ?

    Mutated line:
                     uint destAmountSplit = i != (splitValuesBps.length - 1) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 731
    Result: Lived
    Original line:
                 for (uint i = 0; i < rates.length; i++) {

    Mutated line:
                 for (uint i = 0; i <= rates.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 767
    Result: Lived
    Original line:
                 require(actualSrcAmount <= tData.input.srcAmount, "actualSrcAmt > given srcAmt");

    Mutated line:
                 require(actualSrcAmount < tData.input.srcAmount, "actualSrcAmt > given srcAmt");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 790
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee > 0, "0 rate");

    Mutated line:
                 require(tData.rateOnlyNetworkFee >= 0, "0 rate");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 791
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee < MAX_RATE, "rate > MAX_RATE");

    Mutated line:
                 require(tData.rateOnlyNetworkFee <= MAX_RATE, "rate > MAX_RATE");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 812
    Result: Lived
    Original line:
                 if (tData.actualDestAmount > tData.input.maxDestAmount) {

    Mutated line:
                 if (tData.actualDestAmount >= tData.input.maxDestAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 879
    Result: Lived
    Original line:
                 if (src == dest) {

    Mutated line:
                 if (src != dest) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 888
    Result: Lived
    Original line:
                 TradingReserves memory reservesData = src == ETH_TOKEN_ADDRESS? tData.ethToToken : tData.tokenToEth;

    Mutated line:
                 TradingReserves memory reservesData = src != ETH_TOKEN_ADDRESS? tData.ethToToken : tData.tokenToEth;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 893
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) :

    Mutated line:
                     uint splitAmount = i != (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) :


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 896
    Result: Lived
    Original line:
                     callValue = (src == ETH_TOKEN_ADDRESS)? splitAmount : 0;

    Mutated line:
                     callValue = (src != ETH_TOKEN_ADDRESS)? splitAmount : 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 892
    Result: Lived
    Original line:
                 for(uint i = 0; i < reservesData.addresses.length; i++) {

    Mutated line:
                 for(uint i = 0; i <= reservesData.addresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 917
    Result: Lived
    Original line:
                 if (requiredSrcAmount < srcAmount) {

    Mutated line:
                 if (requiredSrcAmount <= srcAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 919
    Result: Lived
    Original line:
                     if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                     if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 937
    Result: Lived
    Original line:
                 require(tx.gasprice <= maxGasPriceValue, "gas price");

    Mutated line:
                 require(tx.gasprice < maxGasPriceValue, "gas price");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 938
    Result: Lived
    Original line:
                 require(input.srcAmount <= MAX_QTY, "srcAmt > MAX_QTY");

    Mutated line:
                 require(input.srcAmount < MAX_QTY, "srcAmt > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 942
    Result: Lived
    Original line:
                 require(input.platformFeeBps < BPS, "platformFee high");

    Mutated line:
                 require(input.platformFeeBps <= BPS, "platformFee high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 943
    Result: Lived
    Original line:
                 require(input.platformFeeBps + networkFeeBps + networkFeeBps < BPS, "fees high");

    Mutated line:
                 require(input.platformFeeBps + networkFeeBps + networkFeeBps <= BPS, "fees high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 945
    Result: Lived
    Original line:
                 if (input.src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (input.src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 948
    Result: Lived
    Original line:
                     require(msg.value == 0, "big Eth qty");

    Mutated line:
                     require(msg.value != 0, "big Eth qty");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 946
    Result: Lived
    Original line:
                     require(msg.value == input.srcAmount, "bad Eth qty");

    Mutated line:
                     require(msg.value != input.srcAmount, "bad Eth qty");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 961
    Result: Lived
    Original line:
                 if (expiryBlock < block.number && kyberDAO.length > 0) {

    Mutated line:
                 if (expiryBlock <= block.number && kyberDAO.length > 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 961
    Result: Lived
    Original line:
                 if (expiryBlock < block.number && kyberDAO.length > 0) {

    Mutated line:
                 if (expiryBlock < block.number && kyberDAO.length >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 975
    Result: Lived
    Original line:
                 if (expiryBlock < block.number && kyberDAO.length > 0) {

    Mutated line:
                 if (expiryBlock <= block.number && kyberDAO.length > 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 975
    Result: Lived
    Original line:
                 if (expiryBlock < block.number && kyberDAO.length > 0) {

    Mutated line:
                 if (expiryBlock < block.number && kyberDAO.length >= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 989
    Result: Lived
    Original line:
                 require(expiryBlock < 2 ** 64, "expiry overflow");

    Mutated line:
                 require(expiryBlock <= 2 ** 64, "expiry overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 990
    Result: Lived
    Original line:
                 require(2 * feeBps < BPS, "fees exceed BPS");

    Mutated line:
                 require(2 * feeBps <= BPS, "fees exceed BPS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 180
    Result: Lived
    Original line:
                     if (reserves[i] == IKyberReserve(reserve)) {

    Mutated line:
                     if (reserves[i] != IKyberReserve(reserve)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 179
    Result: Lived
    Original line:
                 for (uint i = startIndex; i < reserves.length; i++) {

    Mutated line:
                 for (uint i = startIndex; i >= reserves.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 186
    Result: Lived
    Original line:
                 require(reserveIndex != 2 ** 255, "reserve ?");

    Mutated line:
                 require(reserveIndex == 2 ** 255, "reserve ?");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 244
    Result: Lived
    Original line:
                 require(_feeHandler != IKyberFeeHandler(0), "feeHandler 0");

    Mutated line:
                 require(_feeHandler == IKyberFeeHandler(0), "feeHandler 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 245
    Result: Lived
    Original line:
                 require(_matchingEngine != IKyberMatchingEngine(0), "matchingEngine 0");

    Mutated line:
                 require(_matchingEngine == IKyberMatchingEngine(0), "matchingEngine 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 247
    Result: Lived
    Original line:
                 if ((feeHandler.length == 0) || (_feeHandler != feeHandler[0])) {

    Mutated line:
                 if ((feeHandler.length != 0) || (_feeHandler != feeHandler[0])) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 247
    Result: Lived
    Original line:
                 if ((feeHandler.length == 0) || (_feeHandler != feeHandler[0])) {

    Mutated line:
                 if ((feeHandler.length == 0) || (_feeHandler == feeHandler[0])) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 249
    Result: Lived
    Original line:
                     if (feeHandler.length > 0) {

    Mutated line:
                     if (feeHandler.length <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 259
    Result: Lived
    Original line:
                 if (matchingEngine.length == 0 || _matchingEngine != matchingEngine[0]) {

    Mutated line:
                 if (matchingEngine.length != 0 || _matchingEngine != matchingEngine[0]) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 259
    Result: Lived
    Original line:
                 if (matchingEngine.length == 0 || _matchingEngine != matchingEngine[0]) {

    Mutated line:
                 if (matchingEngine.length == 0 || _matchingEngine == matchingEngine[0]) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 260
    Result: Lived
    Original line:
                     if (matchingEngine.length > 0) {

    Mutated line:
                     if (matchingEngine.length <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 270
    Result: Lived
    Original line:
                 if ((_gasHelper != IGasHelper(0)) && (_gasHelper != gasHelper)) {

    Mutated line:
                 if ((_gasHelper == IGasHelper(0)) && (_gasHelper != gasHelper)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 270
    Result: Lived
    Original line:
                 if ((_gasHelper != IGasHelper(0)) && (_gasHelper != gasHelper)) {

    Mutated line:
                 if ((_gasHelper != IGasHelper(0)) && (_gasHelper == gasHelper)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 279
    Result: Lived
    Original line:
                 require(_kyberDAO != IKyberDAO(0), "kyberDAO 0");

    Mutated line:
                 require(_kyberDAO == IKyberDAO(0), "kyberDAO 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 281
    Result: Lived
    Original line:
                 if (kyberDAO.length > 0) {

    Mutated line:
                 if (kyberDAO.length <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 303
    Result: Lived
    Original line:
                     require(feeHandler[0] != IKyberFeeHandler(0), "feeHandler 0");

    Mutated line:
                     require(feeHandler[0] == IKyberFeeHandler(0), "feeHandler 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 304
    Result: Lived
    Original line:
                     require(matchingEngine[0] != IKyberMatchingEngine(0), "matchingEngine 0");

    Mutated line:
                     require(matchingEngine[0] == IKyberMatchingEngine(0), "matchingEngine 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 305
    Result: Lived
    Original line:
                     require(kyberProxyArray.length > 0, "proxy 0");

    Mutated line:
                     require(kyberProxyArray.length <= 0, "proxy 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 317
    Result: Lived
    Original line:
                 require(networkProxy != address(0), "proxy 0");

    Mutated line:
                 require(networkProxy == address(0), "proxy 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 319
    Result: Lived
    Original line:
                 require(kyberProxyArray.length < MAX_APPROVED_PROXIES, "Max 2 proxy");

    Mutated line:
                 require(kyberProxyArray.length >= MAX_APPROVED_PROXIES, "Max 2 proxy");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 333
    Result: Lived
    Original line:
                     if (kyberProxyArray[i] == networkProxy) {

    Mutated line:
                     if (kyberProxyArray[i] != networkProxy) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 332
    Result: Lived
    Original line:
                 for (uint i = 0; i < kyberProxyArray.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= kyberProxyArray.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 370
    Result: Lived
    Original line:
                 if (src == dest) return (0, 0);

    Mutated line:
                 if (src != dest) return (0, 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 377
    Result: Lived
    Original line:
                     srcAmount: (qty == 0) ? 1 : qty,

    Mutated line:
                     srcAmount: (qty != 0) ? 1 : qty,


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 408
    Result: Lived
    Original line:
                 if (src == dest) return (0, 0, 0);

    Mutated line:
                 if (src != dest) return (0, 0, 0);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 414
    Result: Lived
    Original line:
                     srcAmount: (srcQty == 0) ? 1 : srcQty,

    Mutated line:
                     srcAmount: (srcQty != 0) ? 1 : srcQty,


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 650
    Result: Lived
    Original line:
                 for (uint i = startIndex; i < startIndex + numReserves; i++) {

    Mutated line:
                 for (uint i = startIndex; i >= startIndex + numReserves; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 663
    Result: Lived
    Original line:
                 if ((tData.numFeePayingReserves == 0) && (tData.platformFeeWei == 0)) return true;

    Mutated line:
                 if ((tData.numFeePayingReserves != 0) && (tData.platformFeeWei == 0)) return true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 663
    Result: Lived
    Original line:
                 if ((tData.numFeePayingReserves == 0) && (tData.platformFeeWei == 0)) return true;

    Mutated line:
                 if ((tData.numFeePayingReserves == 0) && (tData.platformFeeWei != 0)) return true;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 715
    Result: Lived
    Original line:
                 for(uint i = 0; i < resList.isFeePaying.length; i++) {

    Mutated line:
                 for(uint i = 0; i >= resList.isFeePaying.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 732
    Result: Lived
    Original line:
                     uint destAmountSplit = i == (splitValuesBps.length - 1) ?

    Mutated line:
                     uint destAmountSplit = i != (splitValuesBps.length - 1) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 731
    Result: Lived
    Original line:
                 for (uint i = 0; i < rates.length; i++) {

    Mutated line:
                 for (uint i = 0; i >= rates.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 746
    Result: Lived
    Original line:
                 if (tData.input.dest != ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (tData.input.dest == ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 760
    Result: Lived
    Original line:
                 if (tData.input.src != ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (tData.input.src == ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 767
    Result: Lived
    Original line:
                 require(actualSrcAmount <= tData.input.srcAmount, "actualSrcAmt > given srcAmt");

    Mutated line:
                 require(actualSrcAmount > tData.input.srcAmount, "actualSrcAmt > given srcAmt");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 790
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee > 0, "0 rate");

    Mutated line:
                 require(tData.rateOnlyNetworkFee <= 0, "0 rate");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 791
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee < MAX_RATE, "rate > MAX_RATE");

    Mutated line:
                 require(tData.rateOnlyNetworkFee >= MAX_RATE, "rate > MAX_RATE");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 792
    Result: Lived
    Original line:
                 require(tData.rateOnlyNetworkFee >= tData.input.minConversionRate, "rate < minConvRate");

    Mutated line:
                 require(tData.rateOnlyNetworkFee < tData.input.minConversionRate, "rate < minConvRate");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 794
    Result: Lived
    Original line:
                 if (gasHelper != IGasHelper(0)) {

    Mutated line:
                 if (gasHelper == IGasHelper(0)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 812
    Result: Lived
    Original line:
                 if (tData.actualDestAmount > tData.input.maxDestAmount) {

    Mutated line:
                 if (tData.actualDestAmount <= tData.input.maxDestAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 879
    Result: Lived
    Original line:
                 if (src == dest) {

    Mutated line:
                 if (src != dest) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 881
    Result: Lived
    Original line:
                     if (destAddress != (address(this))) {

    Mutated line:
                     if (destAddress == (address(this))) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 888
    Result: Lived
    Original line:
                 TradingReserves memory reservesData = src == ETH_TOKEN_ADDRESS? tData.ethToToken : tData.tokenToEth;

    Mutated line:
                 TradingReserves memory reservesData = src != ETH_TOKEN_ADDRESS? tData.ethToToken : tData.tokenToEth;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 893
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) :

    Mutated line:
                     uint splitAmount = i != (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) :


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 896
    Result: Lived
    Original line:
                     callValue = (src == ETH_TOKEN_ADDRESS)? splitAmount : 0;

    Mutated line:
                     callValue = (src != ETH_TOKEN_ADDRESS)? splitAmount : 0;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 892
    Result: Lived
    Original line:
                 for(uint i = 0; i < reservesData.addresses.length; i++) {

    Mutated line:
                 for(uint i = 0; i >= reservesData.addresses.length; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 903
    Result: Lived
    Original line:
                 if (destAddress != address(this)) {

    Mutated line:
                 if (destAddress == address(this)) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 917
    Result: Lived
    Original line:
                 if (requiredSrcAmount < srcAmount) {

    Mutated line:
                 if (requiredSrcAmount >= srcAmount) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 919
    Result: Lived
    Original line:
                     if (src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                     if (src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 937
    Result: Lived
    Original line:
                 require(tx.gasprice <= maxGasPriceValue, "gas price");

    Mutated line:
                 require(tx.gasprice > maxGasPriceValue, "gas price");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 938
    Result: Lived
    Original line:
                 require(input.srcAmount <= MAX_QTY, "srcAmt > MAX_QTY");

    Mutated line:
                 require(input.srcAmount > MAX_QTY, "srcAmt > MAX_QTY");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 939
    Result: Lived
    Original line:
                 require(input.srcAmount != 0, "0 srcAmt");

    Mutated line:
                 require(input.srcAmount == 0, "0 srcAmt");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 940
    Result: Lived
    Original line:
                 require(input.destAddress != address(0), "dest add 0");

    Mutated line:
                 require(input.destAddress == address(0), "dest add 0");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 941
    Result: Lived
    Original line:
                 require(input.src != input.dest, "src = dest");

    Mutated line:
                 require(input.src == input.dest, "src = dest");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 942
    Result: Lived
    Original line:
                 require(input.platformFeeBps < BPS, "platformFee high");

    Mutated line:
                 require(input.platformFeeBps >= BPS, "platformFee high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 943
    Result: Lived
    Original line:
                 require(input.platformFeeBps + networkFeeBps + networkFeeBps < BPS, "fees high");

    Mutated line:
                 require(input.platformFeeBps + networkFeeBps + networkFeeBps >= BPS, "fees high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 945
    Result: Lived
    Original line:
                 if (input.src == ETH_TOKEN_ADDRESS) {

    Mutated line:
                 if (input.src != ETH_TOKEN_ADDRESS) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 948
    Result: Lived
    Original line:
                     require(msg.value == 0, "big Eth qty");

    Mutated line:
                     require(msg.value != 0, "big Eth qty");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 950
    Result: Lived
    Original line:
                     require(input.src.balanceOf(address(this)) >= input.srcAmount, "srcTok low");

    Mutated line:
                     require(input.src.balanceOf(address(this)) < input.srcAmount, "srcTok low");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 946
    Result: Lived
    Original line:
                     require(msg.value == input.srcAmount, "bad Eth qty");

    Mutated line:
                     require(msg.value != input.srcAmount, "bad Eth qty");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 961
    Result: Lived
    Original line:
                 if (expiryBlock < block.number && kyberDAO.length > 0) {

    Mutated line:
                 if (expiryBlock >= block.number && kyberDAO.length > 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 961
    Result: Lived
    Original line:
                 if (expiryBlock < block.number && kyberDAO.length > 0) {

    Mutated line:
                 if (expiryBlock < block.number && kyberDAO.length <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 975
    Result: Lived
    Original line:
                 if (expiryBlock < block.number && kyberDAO.length > 0) {

    Mutated line:
                 if (expiryBlock >= block.number && kyberDAO.length > 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 975
    Result: Lived
    Original line:
                 if (expiryBlock < block.number && kyberDAO.length > 0) {

    Mutated line:
                 if (expiryBlock < block.number && kyberDAO.length <= 0) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 989
    Result: Lived
    Original line:
                 require(expiryBlock < 2 ** 64, "expiry overflow");

    Mutated line:
                 require(expiryBlock >= 2 ** 64, "expiry overflow");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 990
    Result: Lived
    Original line:
                 require(2 * feeBps < BPS, "fees exceed BPS");

    Mutated line:
                 require(2 * feeBps >= BPS, "fees exceed BPS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 33
    Result: Lived
    Original line:
             uint  internal constant PERM_HINT_GET_RATE = 1 << 255;   // for backwards compatibility

    Mutated line:
             uint  internal constant PERM_HINT_GET_RATE = 1 >> 255;   // for backwards compatibility


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 43
    Result: Lived
    Original line:
             uint internal maxGasPriceValue = 50 * 1000 * 1000 * 1000; // 50 gwei

    Mutated line:
             uint internal maxGasPriceValue = 50 * 1000 * 1000 / 1000; // 50 gwei


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 43
    Result: Lived
    Original line:
             uint internal maxGasPriceValue = 50 * 1000 * 1000 * 1000; // 50 gwei

    Mutated line:
             uint internal maxGasPriceValue = 50 * 1000 / 1000 * 1000; // 50 gwei


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 43
    Result: Lived
    Original line:
             uint internal maxGasPriceValue = 50 * 1000 * 1000 * 1000; // 50 gwei

    Mutated line:
             uint internal maxGasPriceValue = 50 / 1000 * 1000 * 1000; // 50 gwei


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 188
    Result: Lived
    Original line:
                 reserves[reserveIndex] = reserves[reserves.length - 1];

    Mutated line:
                 reserves[reserveIndex] = reserves[reserves.length + 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 339
    Result: Lived
    Original line:
                 kyberProxyArray[proxyIndex] = kyberProxyArray[kyberProxyArray.length - 1];

    Mutated line:
                 kyberProxyArray[proxyIndex] = kyberProxyArray[kyberProxyArray.length + 1];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 371
    Result: Lived
    Original line:
                 uint qty = srcQty & ~PERM_HINT_GET_RATE;

    Mutated line:
                 uint qty = srcQty | ~PERM_HINT_GET_RATE;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 390
    Result: Lived
    Original line:
                 worstRate = expectedRate * 97 / 100; // backward compatible formula

    Mutated line:
                 worstRate = expectedRate * 97 * 100; // backward compatible formula


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 390
    Result: Lived
    Original line:
                 worstRate = expectedRate * 97 / 100; // backward compatible formula

    Mutated line:
                 worstRate = expectedRate / 97 / 100; // backward compatible formula


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 598
    Result: Lived
    Original line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS * tData.feePayingReservesBps / BPS;

    Mutated line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS * tData.feePayingReservesBps * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 598
    Result: Lived
    Original line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS * tData.feePayingReservesBps / BPS;

    Mutated line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS / tData.feePayingReservesBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 598
    Result: Lived
    Original line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS * tData.feePayingReservesBps / BPS;

    Mutated line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps * BPS * tData.feePayingReservesBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 598
    Result: Lived
    Original line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS * tData.feePayingReservesBps / BPS;

    Mutated line:
                 tData.networkFeeWei = tData.tradeWei / tData.networkFeeBps / BPS * tData.feePayingReservesBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 599
    Result: Lived
    Original line:
                 tData.platformFeeWei = tData.tradeWei * tData.input.platformFeeBps / BPS;

    Mutated line:
                 tData.platformFeeWei = tData.tradeWei * tData.input.platformFeeBps * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 599
    Result: Lived
    Original line:
                 tData.platformFeeWei = tData.tradeWei * tData.input.platformFeeBps / BPS;

    Mutated line:
                 tData.platformFeeWei = tData.tradeWei / tData.input.platformFeeBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 619
    Result: Lived
    Original line:
                     tokenToEthNumReserves, reserveAddresses.length - tokenToEthNumReserves);

    Mutated line:
                     tokenToEthNumReserves, reserveAddresses.length + tokenToEthNumReserves);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 651
    Result: Lived
    Original line:
                     tradingReserves.addresses[i - startIndex] = reserveAddresses[i];

    Mutated line:
                     tradingReserves.addresses[i + startIndex] = reserveAddresses[i];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 652
    Result: Lived
    Original line:
                     tradingReserves.rates[i - startIndex] = rates[i];

    Mutated line:
                     tradingReserves.rates[i + startIndex] = rates[i];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 653
    Result: Lived
    Original line:
                     tradingReserves.splitValuesBps[i - startIndex] = splitValuesBps[i];

    Mutated line:
                     tradingReserves.splitValuesBps[i + startIndex] = splitValuesBps[i];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 654
    Result: Lived
    Original line:
                     tradingReserves.isFeePaying[i - startIndex] = isFeePaying[i];

    Mutated line:
                     tradingReserves.isFeePaying[i + startIndex] = isFeePaying[i];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 655
    Result: Lived
    Original line:
                     tradingReserves.ids[i - startIndex] = ids[i];

    Mutated line:
                     tradingReserves.ids[i + startIndex] = ids[i];


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 650
    Result: Lived
    Original line:
                 for (uint i = startIndex; i < startIndex + numReserves; i++) {

    Mutated line:
                 for (uint i = startIndex; i < startIndex - numReserves; i++) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 668
    Result: Lived
    Original line:
                 uint sentFee = tData.networkFeeWei + tData.platformFeeWei;

    Mutated line:
                 uint sentFee = tData.networkFeeWei - tData.platformFeeWei;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 718
    Result: Lived
    Original line:
                         rebatePercentBps[_index] = resList.splitValuesBps[i] * BPS / feePayingReservesBps;

    Mutated line:
                         rebatePercentBps[_index] = resList.splitValuesBps[i] * BPS * feePayingReservesBps;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 718
    Result: Lived
    Original line:
                         rebatePercentBps[_index] = resList.splitValuesBps[i] * BPS / feePayingReservesBps;

    Mutated line:
                         rebatePercentBps[_index] = resList.splitValuesBps[i] / BPS / feePayingReservesBps;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 732
    Result: Lived
    Original line:
                     uint destAmountSplit = i == (splitValuesBps.length - 1) ?

    Mutated line:
                     uint destAmountSplit = i == (splitValuesBps.length + 1) ?


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 733
    Result: Lived
    Original line:
                         (destAmount - destAmountSoFar) : splitValuesBps[i] * destAmount / BPS;

    Mutated line:
                         (destAmount - destAmountSoFar) : splitValuesBps[i] * destAmount * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 733
    Result: Lived
    Original line:
                         (destAmount - destAmountSoFar) : splitValuesBps[i] * destAmount / BPS;

    Mutated line:
                         (destAmount - destAmountSoFar) : splitValuesBps[i] / destAmount / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 733
    Result: Lived
    Original line:
                         (destAmount - destAmountSoFar) : splitValuesBps[i] * destAmount / BPS;

    Mutated line:
                         (destAmount + destAmountSoFar) : splitValuesBps[i] * destAmount / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 754
    Result: Lived
    Original line:
                 tData.tradeWei = weiAfterFees * BPS * BPS /

    Mutated line:
                 tData.tradeWei = weiAfterFees * BPS * BPS * ((BPS * BPS) - tData.networkFeeBps * tData.feePayingReservesBps - tData.input.platformFeeBps * BPS);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 754
    Result: Lived
    Original line:
                 tData.tradeWei = weiAfterFees * BPS * BPS /

    Mutated line:
                 tData.tradeWei = weiAfterFees * BPS / BPS /


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 754
    Result: Lived
    Original line:
                 tData.tradeWei = weiAfterFees * BPS * BPS /

    Mutated line:
                 tData.tradeWei = weiAfterFees / BPS * BPS /


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 755
    Result: Lived
    Original line:
                     ((BPS * BPS) - tData.networkFeeBps * tData.feePayingReservesBps - tData.input.platformFeeBps * BPS);

    Mutated line:
                     ((BPS * BPS) - tData.networkFeeBps * tData.feePayingReservesBps + tData.input.platformFeeBps * BPS);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 755
    Result: Lived
    Original line:
                     ((BPS * BPS) - tData.networkFeeBps * tData.feePayingReservesBps - tData.input.platformFeeBps * BPS);

    Mutated line:
                     ((BPS * BPS) + tData.networkFeeBps * tData.feePayingReservesBps - tData.input.platformFeeBps * BPS);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 755
    Result: Lived
    Original line:
                     ((BPS * BPS) - tData.networkFeeBps * tData.feePayingReservesBps - tData.input.platformFeeBps * BPS);

    Mutated line:
                     ((BPS / BPS) - tData.networkFeeBps * tData.feePayingReservesBps - tData.input.platformFeeBps * BPS);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 755
    Result: Lived
    Original line:
                     ((BPS * BPS) - tData.networkFeeBps * tData.feePayingReservesBps - tData.input.platformFeeBps * BPS);

    Mutated line:
                     ((BPS * BPS) - tData.networkFeeBps / tData.feePayingReservesBps - tData.input.platformFeeBps * BPS);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 755
    Result: Lived
    Original line:
                     ((BPS * BPS) - tData.networkFeeBps * tData.feePayingReservesBps - tData.input.platformFeeBps * BPS);

    Mutated line:
                     ((BPS * BPS) - tData.networkFeeBps * tData.feePayingReservesBps - tData.input.platformFeeBps / BPS);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 757
    Result: Lived
    Original line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS * tData.feePayingReservesBps / BPS;

    Mutated line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS * tData.feePayingReservesBps * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 757
    Result: Lived
    Original line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS * tData.feePayingReservesBps / BPS;

    Mutated line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS / tData.feePayingReservesBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 757
    Result: Lived
    Original line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS * tData.feePayingReservesBps / BPS;

    Mutated line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps * BPS * tData.feePayingReservesBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 757
    Result: Lived
    Original line:
                 tData.networkFeeWei = tData.tradeWei * tData.networkFeeBps / BPS * tData.feePayingReservesBps / BPS;

    Mutated line:
                 tData.networkFeeWei = tData.tradeWei / tData.networkFeeBps / BPS * tData.feePayingReservesBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 758
    Result: Lived
    Original line:
                 tData.platformFeeWei = tData.tradeWei * tData.input.platformFeeBps / BPS;

    Mutated line:
                 tData.platformFeeWei = tData.tradeWei * tData.input.platformFeeBps * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 758
    Result: Lived
    Original line:
                 tData.platformFeeWei = tData.tradeWei * tData.input.platformFeeBps / BPS;

    Mutated line:
                 tData.platformFeeWei = tData.tradeWei / tData.input.platformFeeBps / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 834
    Result: Lived
    Original line:
                         tData.tradeWei - tData.networkFeeWei - tData.platformFeeWei,

    Mutated line:
                         tData.tradeWei - tData.networkFeeWei + tData.platformFeeWei,


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 834
    Result: Lived
    Original line:
                         tData.tradeWei - tData.networkFeeWei - tData.platformFeeWei,

    Mutated line:
                         tData.tradeWei + tData.networkFeeWei - tData.platformFeeWei,


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 893
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) :

    Mutated line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length + 1) ? (amount - srcAmountSoFar) :


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 894
    Result: Lived
    Original line:
                         reservesData.splitValuesBps[i] * amount / BPS;

    Mutated line:
                         reservesData.splitValuesBps[i] * amount * BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 894
    Result: Lived
    Original line:
                         reservesData.splitValuesBps[i] * amount / BPS;

    Mutated line:
                         reservesData.splitValuesBps[i] / amount / BPS;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 893
    Result: Lived
    Original line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount - srcAmountSoFar) :

    Mutated line:
                     uint splitAmount = i == (reservesData.splitValuesBps.length - 1) ? (amount + srcAmountSoFar) :


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 923
    Result: Lived
    Original line:
                         src.safeTransfer(trader, (srcAmount - requiredSrcAmount));

    Mutated line:
                         src.safeTransfer(trader, (srcAmount + requiredSrcAmount));


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 920
    Result: Lived
    Original line:
                         (bool success, ) = trader.call.value(srcAmount - requiredSrcAmount)("");

    Mutated line:
                         (bool success, ) = trader.call.value(srcAmount + requiredSrcAmount)("");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 943
    Result: Lived
    Original line:
                 require(input.platformFeeBps + networkFeeBps + networkFeeBps < BPS, "fees high");

    Mutated line:
                 require(input.platformFeeBps + networkFeeBps - networkFeeBps < BPS, "fees high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 943
    Result: Lived
    Original line:
                 require(input.platformFeeBps + networkFeeBps + networkFeeBps < BPS, "fees high");

    Mutated line:
                 require(input.platformFeeBps - networkFeeBps + networkFeeBps < BPS, "fees high");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 990
    Result: Lived
    Original line:
                 require(2 * feeBps < BPS, "fees exceed BPS");

    Mutated line:
                 require(2 / feeBps < BPS, "fees exceed BPS");


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 734
    Result: Lived
    Original line:
                     destAmountSoFar += destAmountSplit;

    Mutated line:
                     destAmountSoFar -= destAmountSplit;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 736
    Result: Lived
    Original line:
                     srcAmount += calcSrcQty(destAmountSplit, srcDecimals, destDecimals, rates[i]);

    Mutated line:
                     srcAmount -= calcSrcQty(destAmountSplit, srcDecimals, destDecimals, rates[i]);


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 895
    Result: Lived
    Original line:
                     srcAmountSoFar += splitAmount;

    Mutated line:
                     srcAmountSoFar -= splitAmount;


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 58
    Result: Lived
    Original line:
                 updateNetworkFee(block.number, DEFAULT_NETWORK_FEE_BPS);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 387
    Result: Lived
    Original line:
                 calcRatesAndAmounts(src, dest, tData.input.srcAmount, tData, "");

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 424
    Result: Lived
    Original line:
                 calcRatesAndAmounts(src, dest, tData.input.srcAmount, tData, hint);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 595
    Result: Lived
    Original line:
                 unpackResults(results, reserveAddresses, rates, splitValuesBps, isFeePaying, ids, tData);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 616
    Result: Lived
    Original line:
                 storeTradeData(tData.tokenToEth, reserveAddresses, rates, splitValuesBps, isFeePaying, ids, 0,

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 618
    Result: Lived
    Original line:
                 storeTradeData(tData.ethToToken, reserveAddresses, rates, splitValuesBps, isFeePaying, ids,

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 788
    Result: Lived
    Original line:
                 calcRatesAndAmounts(tData.input.src, tData.input.dest, tData.input.srcAmount, tData, hint);

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 977
    Result: Lived
    Original line:
                     updateNetworkFee(expiryBlock, networkFeeBps);

    Mutated line:
                     


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 57
    Result: Lived
    Original line:
             constructor(address _admin) public Withdrawable2(_admin) {

    Mutated line:
             constructor(address _admin) public  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 156
    Result: Lived
    Original line:
                 external onlyOperator returns(bool)

    Mutated line:
                 external  returns(bool)


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 174
    Result: Lived
    Original line:
             function removeReserve(address reserve, uint startIndex) public onlyOperator returns(bool) {

    Mutated line:
             function removeReserve(address reserve, uint startIndex) public  returns(bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 198
    Result: Lived
    Original line:
             function rmReserve(address reserve) external onlyOperator returns(bool) {

    Mutated line:
             function rmReserve(address reserve) external  returns(bool) {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 213
    Result: Lived
    Original line:
                 onlyOperator

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 242
    Result: Lived
    Original line:
                 external onlyAdmin

    Mutated line:
                 external 


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 278
    Result: Lived
    Original line:
             function setDAOContract(IKyberDAO _kyberDAO) external onlyAdmin {

    Mutated line:
             function setDAOContract(IKyberDAO _kyberDAO) external  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 293
    Result: Lived
    Original line:
             function setParams(uint _maxGasPrice, uint _negligibleRateDiffBps) external onlyAdmin {

    Mutated line:
             function setParams(uint _maxGasPrice, uint _negligibleRateDiffBps) external  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 301
    Result: Lived
    Original line:
             function setEnable(bool _enable) external onlyAdmin {

    Mutated line:
             function setEnable(bool _enable) external  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 316
    Result: Lived
    Original line:
             function addKyberProxy(address networkProxy) external onlyAdmin {

    Mutated line:
             function addKyberProxy(address networkProxy) external  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 327
    Result: Lived
    Original line:
             function removeKyberProxy(address networkProxy) external onlyAdmin {

    Mutated line:
             function removeKyberProxy(address networkProxy) external  {


Mutation:
    File: /home/desmond/smart-contracts/contracts/KyberNetwork.sol
    Line nr: 781
    Result: Lived
    Original line:
                 nonReentrant

    Mutated line:
                 


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/EpochUtils.sol
    Line nr: 16
    Result: Lived
    Original line:
                 if (blockNumber < FIRST_EPOCH_START_BLOCK || EPOCH_PERIOD_BLOCKS == 0) { return 0; }

    Mutated line:
                 if (blockNumber <= FIRST_EPOCH_START_BLOCK || EPOCH_PERIOD_BLOCKS == 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/EpochUtils.sol
    Line nr: 16
    Result: Lived
    Original line:
                 if (blockNumber < FIRST_EPOCH_START_BLOCK || EPOCH_PERIOD_BLOCKS == 0) { return 0; }

    Mutated line:
                 if (blockNumber < FIRST_EPOCH_START_BLOCK || EPOCH_PERIOD_BLOCKS != 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/EpochUtils.sol
    Line nr: 16
    Result: Lived
    Original line:
                 if (blockNumber < FIRST_EPOCH_START_BLOCK || EPOCH_PERIOD_BLOCKS == 0) { return 0; }

    Mutated line:
                 if (blockNumber >= FIRST_EPOCH_START_BLOCK || EPOCH_PERIOD_BLOCKS == 0) { return 0; }


Mutation:
    File: /home/desmond/smart-contracts/contracts/stakingAndDao/EpochUtils.sol
    Line nr: 16
    Result: Lived
    Original line:
                 if (blockNumber < FIRST_EPOCH_START_BLOCK || EPOCH_PERIOD_BLOCKS == 0) { return 0; }

    Mutated line:
                 if (blockNumber < FIRST_EPOCH_START_BLOCK || EPOCH_PERIOD_BLOCKS != 0) { return 0; }


